{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","isOfType2","obj","callbacks","isDOM","HTMLElement","isNull","isObject","isArray","isFunction","isBool","isNumber","isInt","isUint","isString","Array","isTypedArray","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isAnyArray","isColor","div","document","createElement","style","borderColor","isSize","width","isAlignment","noCenter","toLowerCase","isFont","isCompositeOperation","isBorderWidth","borderWidth","isBorderStyle","borderStyle","getCompareCallback","type","Error","getCompareCallbacks","types","split","length","push","isOfType","isContent","array","isInOptions","options","Static","size","seed","random","Math","sin","floor","data","buffer1","ArrayBuffer","buffer2","intY","floatY1","floatY2","mult","PI","cos","console","warn","index","smoothing","getSmoothingWindow","sum","low","high","diffToMin","max","diffToMax","diff","min","dataCallback","mid","found","context","getContext","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","log10","x","log","LN10","Options","this","setDefault","set","isOk","_isOk","getColor","graph","colors","getName","undefined","names","getLegendFont","legend","getDefault","debug","interaction","resize","trackMouse","zoom","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","highlight","xMin","xMax","yMin","yMax","dataX","dataY","dashed","lineWidth","simplify","fill","compositeOperation","axes","tickMarkers","show","offset","tickLabels","labels","inverted","height","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","path","_evalOptions","assign","getDataCallback","axis","dataIndex","start","_getDataCallbackSmoothing","error","centralIndex","threshold","optionsOk","obj2","name2","paths","set2","msg","evalType","res","evalArrayContains","evalAlign","evalCond","cond","eval","replaceAll","trim","b","arguments","appendChild","e","join","f","g","h","j","substring","indexOf","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","container","id","dontScale","_canvas","append","_context","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","_isX","_axis","_getSize","_options","_getRatio","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideMin","_min","_overrideMax","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasZoom","calculateTicks","clearZoom","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","canvas","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","_renderLegend","mouseMoveCallback","mouseDown","_axes","valueX","values","dataXCallback","binarySearch","valueY","calculateSmothingValue","valueXMin","valueXMax","span","weightMin","weightMax","valueMin","valueMax","pixelY","isFinite","_interactionData","mouseOutCallback","startX","startY","lastHorizontal","lastX","lastY","button","diffX","abs","diffY","newHorizontal","clamp","preventDefault","returnValue","cancelBubble","toElement","tabIndex","maxLength","_container","callbackDone","_renderGraph","ctx","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","createDummyData","getOptions","getDefaultOptions","setDefaultOptions","setOptions","_hasCalculatedGraphSize","_interaction","_initLegend","getElementById","parent","legendDiv","settings","isTop","alignLeft","printValue","str","printX","printY","time","_renderTitle","_renderAxesLabels","_renderSpin","_renderXAxis","_renderYAxis","_renderHighlight","timeEnd","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","_getOffset","oldX","oldWidth","oldY","valueToPixelX","valueToPixelY","globalCompositeOperation","getDataX","bsMin","bsMax","end","getDataY","pattern","setLineDash","newX","minVal","maxVal","closePath","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\n\n/**\n * Check if the given object is a DOM element.\n * @param {object} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isDOM = function (obj) {\n    return obj instanceof HTMLElement;\n};\n\n/**\n * Check of the given object is null or undefined.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNull = function (obj) {\n    return obj === undefined || obj === null;\n};\n\n/**\n * Check of the given object is a object.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isObject = function (obj) {\n    return obj !== null && typeof obj === \"object\" && !Is.isArray(obj);\n};\n\n/**\n * Check of the given object is a function.\n * @private\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFunction = function (obj) {\n    return typeof obj === \"function\";\n};\n\n/**\n * Check of the given object is a bool.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isBool = function (obj) {\n    return typeof obj === \"boolean\";\n};\n\n/**\n * Check of the given object is a number.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNumber = function (obj) {\n    return typeof obj === \"number\";\n};\n\n/**\n * Check of the given object is an integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isInt = function (obj) {\n    return typeof obj === \"number\" && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is an unsigned integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isUint = function (obj) {\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is a string.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isString = function (obj) {\n    return typeof obj === \"string\";\n};\n\n/**\n * Check of the given object is an Array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isArray = function (obj) {\n    return obj instanceof Array;\n};\n\n/**\n * Check of the given object is an typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isTypedArray = function (obj) {\n    return obj instanceof Int8Array\n        || obj instanceof Uint8Array\n        || obj instanceof Uint8ClampedArray\n        || obj instanceof Int16Array\n        || obj instanceof Uint16Array\n        || obj instanceof Int32Array\n        || obj instanceof Uint32Array\n        || obj instanceof Float32Array\n        || obj instanceof Float64Array;\n};\n\n/**\n * Check of the given object is an array or a typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isAnyArray = function (obj) {\n    return Is.isArray(obj) || Is.isTypedArray(obj);\n};\n\n/**\n * Check of the given object is a color.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isColor = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderColor = \"\";\n    div.style.borderColor = obj;\n    return div.style.borderColor !== \"\";\n};\n\n/**\n * Check of the given object is a size.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isSize = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.width = \"\";\n    div.style.width = obj;\n    return div.style.width !== \"\";\n};\n\n/**\n * Check of the given object is an alignment.\n * @public\n * @param {string} obj - Object to evaluate.\n * @param {bool} noCenter - If true the center alignment is not valid.\n * @returns {bool}\n */\nIs.isAlignment = function (obj, noCenter) {\n    obj = obj.toLowerCase();\n    if (noCenter) {\n        return obj === \"left\" || obj === \"right\";\n    }\n    else {\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\n    }\n};\n\n/**\n * Check of the given object is a font.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFont = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style[\"font-family\"] = \"\";\n    div.style[\"font-family\"] = obj;\n    return div.style[\"font-family\"] !== \"\";\n};\n\n/**\n * Check of the given object is an composite operation.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isCompositeOperation = function (obj) {\n    obj = obj.toLowerCase();\n    return obj === \"source-over\"\n        || obj === \"source-in\"\n        || obj === \"source-out\"\n        || obj === \"source-atop\"\n        || obj === \"destination-over\"\n        || obj === \"destination-in\"\n        || obj === \"destination-out\"\n        || obj === \"destination-atop\"\n        || obj === \"lighter\"\n        || obj === \"copy\"\n        || obj === \"xor\"\n        || obj === \"multiply\"\n        || obj === \"screen\"\n        || obj === \"overlay\"\n        || obj === \"darken\"\n        || obj === \"lighten\"\n        || obj === \"color-dodge\"\n        || obj === \"color-burn\"\n        || obj === \"hard-light\"\n        || obj === \"soft-light\"\n        || obj === \"difference\"\n        || obj === \"exclusion\"\n        || obj === \"hue\"\n        || obj === \"saturation\"\n        || obj === \"color\"\n        || obj === \"luminosity\";\n};\n\nIs.isBorderWidth = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderWidth = \"\";\n    div.style.borderWidth = obj;\n    return div.style.borderWidth !== \"\";\n};\n\nIs.isBorderStyle = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderStyle = \"\";\n    div.style.borderStyle = obj;\n    return div.style.borderStyle !== \"\";\n};\n\n\n/**\n * Get a callback to evaluate if the given data is of the specified type.\n * @param {string} type\n * @returns {function]\n * }\n */\nIs.getCompareCallback = function (type) {\n    switch (type) {\n        case \"number\":\n            return Is.isNumber;\n        case \"int\":\n            return Is.isInt;\n        case \"string\":\n            return Is.isString;\n        case \"font\":\n            return Is.isFont;\n        case \"bool\":\n            return Is.isBool;\n        case \"array\":\n            return Is.isArray;\n        case \"typedArray\":\n            return Is.isTypedArray;\n        case \"anyArray\":\n            return Is.isAnyArray;\n        case \"object\":\n            return Is.isObject;\n        case \"function\":\n            return Is.isFunction;\n        case \"color\":\n            return Is.isColor;\n        case \"size\":\n            return Is.isSize;\n        case \"alignment\":\n            return Is.isAlignment;\n        case \"compositeOperation\":\n            return Is.isCompositeOperation;\n        case \"borderStyle\":\n            return Is.isBorderStyle;\n        case \"borderWidth\":\n            return Is.isBorderWidth;\n        case \"dom\":\n            return Is.isDOM;\n        case \"null\":\n            return Is.isNull;\n        default:\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\n    }\n};\n\n/**\n * Get a list of callbacks to evaluate if the given data is of the specified type.\n * @param {string} type. Separated by |\n * @returns {array<function>]}\n */\nIs.getCompareCallbacks = function (type) {\n    const callbacks = [];\n    const types = type.split(\"|\");\n    if (!types.length) {\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\n    }\n    for (let i = 0; i < types.length; ++i) {\n        callbacks.push(Is.getCompareCallback(types[i]));\n    }\n    return callbacks;\n};\n\n/**\n * True if object is of type\n * @param {string} type. Separated by |\n * @returns {bool}\n */\nIs.isOfType = function (obj, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if the array only contains items if the given type.\n * @public\n * @param {array} array - Array to check.\n * @param {string} type - Type to compare itmes against.\n * @returns {bool} - True if the array only contains items if the given type.\n */\nIs.isContent = function (array, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i = 0; i < array.length; ++i) {\n        if (!isOfType2(array[i], callbacks)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nIs.isInOptions = function (value, options) {\n    for (let i = 0; i < options.length; ++i) {\n        if (options[i] === value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default Is;\n\nfunction isOfType2(obj, callbacks) {\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @param {string} type - float or int.\n * @returns {array}\n */\nStatic.createDummyData = function (size, type) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data = [];\n    const buffer1 = new ArrayBuffer(size * 4);\n    const buffer2 = new ArrayBuffer(size * 4);\n    if (type && type.toLowerCase() === \"int\") {\n        const intY = new Uint32Array(buffer1);\n        for (let i = 0; i < size; ++i) {\n            intY[i] = i + 1;\n        }\n        data.push(intY);\n    }\n    else if (type && type.toLowerCase() === \"float\") {\n        const floatY1 = new Float32Array(buffer1);\n        const floatY2 = new Float32Array(buffer2);\n        const mult = Math.PI / 100;\n        for (let i = 0; i < size; ++i) {\n            floatY1[i] = Math.sin(i * mult) * random();\n            floatY2[i] = Math.cos(i * mult) * random();\n        }\n        data.push(floatY1);\n        data.push(floatY2);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: Can't create dummy data. Invalid type: \\\"\" + type + \"\\\"\");\n    }\n    return data;\n};\n\n/**\n * Calculate the smoothed value for a given index.\n * @public\n * @param {array} data\n * @param {int} index\n * @param {int} smoothing\n * @returns {number}\n */\nStatic.calculateSmothingValue = function (index, smoothing, data) {\n    const window = Static.getSmoothingWindow(index, smoothing, data.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += data[window.low++];\n    }\n    return sum / window.length;\n};\n\n/**\n * Get the smoothing window indices.\n * @param {int} index - Index for central value.\n * @param {int} smoothing - Smootrhing value. Number of samples on each side of central value.\n * @param {int} length - Length of data set.\n * @returns {undefined}\n */\nStatic.getSmoothingWindow = function (index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return { low: index - diff, high: index + diff, length: 2 * diff + 1 };\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nexport default Static;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\n/** \n * The Options class is the options and associated functions for the Graph class.\n * See setDefault() for a desciption of the possible option parameters.\n */\n\n/**\n * Create new Graph options.\n * @public\n * @constructor\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Options}\n */\nfunction Options(options) {\n    this.setDefault();\n    if (options) {\n        this.set(options);\n    }\n}\n\n/**\n * Check if the options are ok / valid.\n * @public\n * @returns {bool} - True if the options are ok.\n */\nOptions.prototype.isOk = function () {\n    return this._isOk;\n};\n\n/**\n * Get color for a data set.  Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string} - CSS color string.\n */\nOptions.prototype.getColor = function (index) {\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\n};\n\n/**\n * Get name for a data set. Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string}\n */\nOptions.prototype.getName = function (index) {\n    if (this.graph.names[index] !== undefined) {\n        return this.graph.names[index];\n    }\n    else if (index > 0) {\n        return \"DATA\" + (index);\n    }\n    else {\n        return \"X\";\n    }\n};\n\n/**\n * Get the font(family and size) for the legend label.\n * @public\n * @returns {string}\n */\nOptions.prototype.getLegendFont = function () {\n    return this.legend.size + \"px \" + this.legend.font;\n};\n\n/**\n * Get the default options object.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nOptions.getDefault = function () {\n    return {\n        debug: false,\n        interaction: {\n            resize: true,\n            trackMouse: true,\n            zoom: true,\n            smoothing: false\n        },\n        title: {\n            label: \"\",\n            bold: false,\n            size: 20,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 5,\n            font: \"verdana\",\n            color: \"black\",\n            align: \"center\"\n        },\n        legend: {\n            location: \"top\",\n            font: \"Arial\",\n            size: 15,\n            offsetX: 10,\n            offsetY: 2,\n            align: \"right\",\n            newLine: false\n        },\n        highlight: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null,\n            color: \"rgba(0, 0, 255, 0.2)\"\n        },\n        zoom: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null\n        },\n        graph: {\n            dataX: [],\n            dataY: [],\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\n            names: [],\n            dashed: [],\n            lineWidth: 1,\n            smoothing: 0,\n            simplify: 0.1,\n            fill: false,\n            compositeOperation: \"source-over\"\n        },\n        axes: {\n            tickMarkers: {\n                show: true,\n                length: 5,\n                width: 1,\n                offset: 0,\n                color: \"#BEBEBE\"\n            },\n            tickLabels: {\n                show: true,\n                color: \"black\",\n                font: \"Arial\",\n                size: 12,\n                width: 40,\n                offset: 2\n            },\n            labels: {\n                color: \"black\",\n                font: \"verdana\",\n                size: 15,\n                offset: 3,\n                padding: 0\n            },\n            x: {\n                show: true,\n                inverted: false,\n                log: false,\n                height: 0,\n                label: \"\",\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            },\n            y: {\n                show: true,\n                inverted: false,\n                log: false,\n                width: 0,\n                label: \"\",\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            }\n        },\n        border: {\n            style: \"solid\",\n            color: \"black\",\n            width: \"0 0 1px 1px\"\n        },\n        spinner: {//Options regarding the spinner.\n            show: false, //Automatically show spinner when plotting data. Can always be activated manually.\n            lines: 13, //The number of lines to draw.\n            length: 30, //The length of each line.\n            width: 10, //The line thickness.\n            radius: 30, //The radius of the inner circle.\n            corners: 1, //Corner roundness (0..1).\n            rotate: 0, //The rotation offset.\n            direction: 1, //1: clockwise, -1: counterclockwise\n            color: \"black\", //#rgb or #rrggbb or array of colors\n            speed: 1, //Revolutions per second\n            trail: 50, //Afterglow percentage\n            shadow: false, //If true a shadow is rendered.\n            hwaccel: true, //If true hardware acceleration is used.\n            position: 'relative', //Position type.\n            top: \"50%\", //CenterY position relative to parent\n            left: \"50%\"         //CenterX position relative to parent\n        }\n    };\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - The options to set.\n */\nOptions.prototype.set = function (options) {\n    function setMembers(oldObj, newObj, path) {\n        for (let i in newObj) {\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\n                continue;\n            }\n            //Member is a new object. Call function recursivly.\n            if (Is.isObject(newObj[i])) {\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\n            }\n            //Member is null or a base type. Set it.\n            else {\n                oldObj[i] = newObj[i];\n            }\n        }\n    }\n    setMembers(this, options, \"\");\n\n    this._evalOptions();\n};\n\n/**\n * Sets all options to their default values.\n * @public\n */\nOptions.prototype.setDefault = function () {\n    Object.assign(this, Options.getDefault());\n    this._isOk = true;\n};\n\n/**\n * Callback function for getting data value for a given index.\n * Used instead of dataX[index] and dataY[index].\n * Has built in functionality for averaging. Implicit X-values and more.\n * @callback Options~getDataCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback used to get correct X and X value data.\n * Used by the graph render function to improve performance.\n * @public\n * @param {string} axis - X or Y axis.\n * @param {int} dataIndex - The index in the data set.\n * @returns {function}\n */\nOptions.prototype.getDataCallback = function (axis, dataIndex, start) {\n    let data;\n    //X-axis.\n    if (axis.toLowerCase() === \"x\") {\n        //Has no dataX. Return index + 1.\n        if (this.graph.dataX.length === 0) {\n            return function (index) {\n                return index + 1;\n            };\n        }\n        //Have one dataX for all dataY. \n        if (this.graph.dataX.length === 1) {\n            data = this.graph.dataX[0];\n        }\n        //Have one dataX for each dataY. \n        else {\n            data = this.graph.dataX[dataIndex];\n        }\n    }\n    //Y-axis.\n    else if (axis.toLowerCase() === \"y\") {\n        data = this.graph.dataY[dataIndex];\n        //Use smoothing.\n        if (this.graph.smoothing) {\n            return this._getDataCallbackSmoothing(start, data);\n        }\n    }\n    else {\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\n    }\n    //Default\n    return function (index) {\n        return data[index];\n    };\n};\n\n/**\n * Return getDataCallback for smoothing\n * @private\n */\nOptions.prototype._getDataCallbackSmoothing = function (start, data) {\n    const centralIndex = Math.max(0, start - 1);\n    const window = Static.getSmoothingWindow(centralIndex, this.graph.smoothing, data.length);\n    let low = window.low;\n    let high = window.high;\n    let sum = 0;\n    for (let i = low; i <= high; ++i) {\n        sum += data[i];\n    }\n    const threshold = 2 * this.graph.smoothing;\n    return function (index) {\n        //Decrease window size.\n        if (high === data.length - 1) {\n            low = index + index - high;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Increase window size.\n        else if (high < threshold) {\n            high = index + index - low;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Move window.\n        else {\n            sum -= data[low];\n            ++low;\n            ++high;\n            sum += data[high];\n        }\n        //Calculate average value.\n        return sum / (high - low + 1);\n    };\n}\n\n/**\n * Evaluates the options and sets ok status flag.\n * @private\n */\nOptions.prototype._evalOptions = function () {\n    let optionsOk = true;\n    let obj, obj2, name, name2;\n    const options = this;\n    function set(path) {\n        name = path;\n        obj = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj = obj[paths[i]];\n        }\n    }\n    function set2(path) {\n        name2 = path;\n        obj2 = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj2 = obj2[paths[i]];\n        }\n    }\n    function error(msg) {\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\n        optionsOk = false;\n    }\n    function evalType(type) {\n        const res = Is.isOfType(obj, type);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of type: \" + type);\n        }\n        return res;\n    }\n    function evalArrayContains(type) {\n        const res = Is.isContent(obj, type);\n        if (!res) {\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\n        }\n        return res;\n    }\n    function evalAlign(noCenter) {\n        const res = Is.isAlignment(obj, noCenter);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\n        }\n        return res;\n    }\n    function evalCond(cond) {\n        const res = eval(cond);\n        if (!res) {\n            cond = cond.replaceAll(\"obj2\", name2).trim();\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\n            cond = cond.replaceAll(\"obj\", \"\").trim();\n            if (Is.isArray(obj)) {\n                error(\"Failed condition: \" + cond);\n            }\n            else {\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\n            }\n        }\n        return res;\n    }\n\n    set(\"debug\");\n    evalType(\"bool\");\n\n    set(\"interaction\");\n    if (evalType(\"object\")) {\n        set(\"interaction.resize\");\n        evalType(\"bool\");\n\n        set(\"interaction.trackMouse\");\n        evalType(\"bool\");\n\n        set(\"interaction.zoom\");\n        evalType(\"bool\");\n\n        set(\"interaction.smoothing\");\n        evalType(\"bool\");\n    }\n\n    set(\"title\");\n    if (evalType(\"object\")) {\n        set(\"title.bold\");\n        evalType(\"bool\");\n\n        set(\"title.label\");\n        evalType(\"string\");\n\n        set(\"title.size\");\n        evalType(\"int\");\n        evalCond(\"obj > 0\");\n\n        set(\"title.offsetX\");\n        evalType(\"int\");\n\n        set(\"title.offsetY\");\n        evalType(\"int\");\n\n        set(\"title.padding\");\n        evalType(\"int\");\n\n        set(\"title.font\");\n        evalType(\"font\");\n\n        set(\"title.color\");\n        evalType(\"color\");\n\n        set(\"title.align\");\n        evalAlign();\n    }\n\n    set(\"legend\");\n    if (evalType(\"object\")) {\n        set(\"legend.location\");\n        evalType(\"string\");\n\n        set(\"legend.font\");\n        evalType(\"font\");\n\n        set(\"legend.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"legend.offsetX\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.offsetY\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.align\");\n        evalAlign(true);\n\n        set(\"legend.newLine\");\n        evalType(\"bool\");\n    }\n\n    set(\"highlight\");\n    if (evalType(\"object\")) {\n        set(\"highlight.xMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.xMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.color\");\n        evalType(\"color\");\n    }\n\n    set(\"zoom\");\n    if (evalType(\"object\")) {\n        set(\"zoom.xMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.xMax\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMax\");\n        evalType(\"number|null\");\n    }\n\n    set(\"graph\");\n    if (evalType(\"object\")) {\n        set(\"graph.dataX\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n\n            set2(\"graph.dataY\");\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\n                evalCond(\"obj.length <= obj2.length\");\n            }\n        }\n\n        set(\"graph.dataY\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n            set2(\"graph.dataX\");\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\n            if (obj2.length === 0 || obj2.length === 1) {\n                //Check so that all dataY are the same size.\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj[0].length) {\n                        error(\"Not all arrays are of the same size.\");\n                    }\n                }\n                //If dataX.length == 1. Check if same length as dataY.\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\n                    error(\"Size does not match dataX.\");\n                }\n            }\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\n            else if (obj.length === obj2.length) {\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj2[i].length) {\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\n                    }\n                }\n            }\n        }\n\n        set(\"graph.colors\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"color\");\n        }\n\n        set(\"graph.names\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"string\");\n        }\n\n        set(\"graph.dashed\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"bool|array\");\n        }\n\n        set(\"graph.lineWidth\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.smoothing\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.simplify\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"graph.fill\");\n        evalType(\"bool\");\n\n        set(\"graph.compositeOperation\");\n        evalType(\"compositeOperation\");\n    }\n\n    set(\"axes\");\n    if (evalType(\"object\")) {\n        set(\"axes.tickMarkers\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickMarkers.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickMarkers.length\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickMarkers.color\");\n            evalType(\"color\");\n        }\n\n        set(\"axes.tickLabels\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickLabels.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickLabels.color\");\n            evalType(\"color\");\n\n            set(\"axes.tickLabels.font\");\n            evalType(\"font\");\n\n            set(\"axes.tickLabels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        set(\"axes.labels\");\n        if (evalType(\"object\")) {\n            set(\"axes.labels.color\");\n            evalType(\"color\");\n\n            set(\"axes.labels.font\");\n            evalType(\"font\");\n\n            set(\"axes.labels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.labels.offset\");\n            evalType(\"int\");\n\n            set(\"axes.labels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        //axes x and y\n        const axes = [\"axes.x\", \"axes.y\"];\n        for (let i = 0; i < axes.length; ++i) {\n            set(axes[i]);\n            if (evalType(\"object\")) {\n                set(axes[i] + \".show\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".inverted\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".log\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\n                evalType(\"int\");\n                evalCond(\"obj >= 0\");\n\n                set(axes[i] + \".grid\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".grid.width\");\n                    evalType(\"int\");\n                    evalCond(\"obj >= 0\");\n\n                    set(axes[i] + \".grid.color\");\n                    evalType(\"color\");\n                }\n\n                set(axes[i] + \".label\");\n                evalType(\"string\");\n\n                set(axes[i] + \".bounds\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".bounds.min\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.min\");\n                    set2(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\n                        evalCond(\"obj < obj2\");\n                    }\n                }\n\n                set(axes[i] + \".legendValueFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerValuePreFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerValuePostFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerLabelFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".ticker\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n            }\n        }\n    }\n\n    set(\"border\");\n    if (evalType(\"object\")) {\n        set(\"border.style\");\n        evalType(\"borderStyle\");\n\n        set(\"border.color\");\n        evalType(\"color\");\n\n        set(\"border.width\");\n        evalType(\"borderWidth\");\n    }\n\n    set(\"spinner\");\n    if (evalType(\"object\")) {\n        set(\"spinner.show\");\n        evalType(\"bool\");\n\n        set(\"spinner.lines\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.length\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.width\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.radius\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.corners\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"spinner.rotate\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.direction\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj === -1 || obj === 1\");\n        }\n\n        set(\"spinner.color\");\n        evalType(\"color\");\n\n        set(\"spinner.speed\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.trail\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.shadow\");\n        evalType(\"bool\");\n\n        set(\"spinner.hwaccel\");\n        evalType(\"bool\");\n\n        set(\"spinner.position\");\n        if (evalType(\"string\")) {\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\n        }\n\n        set(\"spinner.top\");\n        evalType(\"size\");\n\n        set(\"spinner.left\");\n        evalType(\"size\");\n    }\n\n    this._isOk = optionsOk;\n};\n\n/**\n @typedef OPTIONS_OBJECT\n @type {object}\n\n @property {bool} debug - If true debug info will be outputted to the console.\n\n @property {object} interaction - Options regarding user interaction with the graph.\n @property {bool} resize - If true the graph will be resized automatically.\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\n @property {bool} zoom - If true zoom is enabled.\n @property {bool} smoothing - If true interactive smoothing input is enabled.\n\n @property {object} title - Options regarding the title.\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\n @property {bool} title.bold - If true the label font is bold.\n @property {int} title.size - Font height/size in pixels of the text.\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\n @property {int} title.padding - Padding in pixels. Between title and graph.\n @property {string} title.font - Font family of the text.\n @property {string} title.color - Color of the text.\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\n\n @property {object} legend - Options regarding the legend.\n @property {bool} legend.show - If true the legend is shown.\n @property {string} legend.font - Font family of the text.\n @property {int} legend.size - Font size/height in pixels.\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\n @property {int} legend.newLine -  If true a new line is made between each data set.\n\n @property {object} highlight - Options regarding highlighting.\n @property {bool} highlight.xMin - X-axis low value. \n @property {int} highlight.xMax - X-axis high value.\n @property {string} highlight.yMin - Y-axis low value.\n @property {int} highlight.yMax - Y-axis high value.\n @property {string} highlight.color - Color of the highlight.\n\n @property {object} zoom - Options regarding default zoom.\n @property {bool} zoom.xMIn - X-axis low value. \n @property {int} zoom.xMax - X-axis high value.\n @property {string} zoom.yMin - Y-axis low value.\n @property {int} zoom.yMax - Y-axis high value.\n\n @property {object} graph - Options regarding the graph curve.\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\n @property {array<string>} graph.colors - List of colors for each dataY set.\n @property {array<string>} graph.names - List of names for each dataY set.\n @property {array<string>} graph.dashed - List of dash parameters for each dataY set. true for default or number array for cusatom.\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\n @property {bool} graph.fill - If true the area under the graph will be filled.\n @property {string} graph.compositeOperation - Context global composit operation.\n\n @property {object} axes - Options regarding the axes.\n\n @property {object} axes.tickMarkers - Options regarding the tick markers.\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\n @property {string} axes.tickMarkers.color - Color of the tick markers.\n\n @property {object} axes.tickLabels - Options regarding the tick labels.\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\n @property {string} axes.tickLabels.color - Color of the text.\n @property {string} axes.tickLabels.font - Font family of the text.\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\n\n @property {object} axes.labels - Options regarding the axes labels.\n @property {string} axes.labels.color - Color of the text.\n @property {string} axes.labels.font - Font family of the text.\n @property {int} axes.labels.size - Font size/height in pixels of the text.\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\n\n @property {object} axes.x - Options regarding the X-axis.\n @property {bool} axes.x.show - If true the X-axis is shown.\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\n @property {int} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the values. Null = default callback.\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.x.grid - Options regarding the X-axis grid.\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.x.grid.color - Color of the grid lines.\n\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} axes.y - Options regarding the Y-axis.\n @property {bool} axes.y.show - If true the X-axis is shown.\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\n @property {int} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the values. Null = default callback.\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.y.grid.color - Color of the grid lines.\n\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} border - Options regarding the graph border.\n @property {string} border.style - Border style. solid, dotted...\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\n\n\n */\n\n/**\n * Callback function for formatting values.\n * @callback formatterCallback\n * @param {number} value\n * @returns {string}\n */\n\n/**\n * Callback function for creating ticks.\n * @callback tickerCallback\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{value:number}>}\n */\n\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\n * Used to automatically get pixel perfect canvas size \n * and to make it easier to draw simple elements.\n */\n\n/**\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\n * @public\n * @constructor\n * @param {dom} container - Container dom.\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\n * @returns {Canvas}\n */\nfunction Canvas(container, id, dontScale) {\n    this._canvas = document.createElement(\"canvas\");\n    if (id) {\n        this._canvas.id = id;\n    }\n    container.append(this._canvas);\n    this._context = this._canvas.getContext(\"2d\");\n\n    this._dontScale = dontScale;\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.margin = 0;\n    this._canvas.style.padding = 0;\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\n\n    //Set default position.\n    this.setPosition(0, 0);\n    //Fill parent div is default size.\n    this.setSize(\"100%\", \"100%\");\n}\n\n/**\n * Set a new parent for the canvas. Leave empty to only remove current parent.\n * @public\n * @param {dom} container - Container dom.\n */\nCanvas.prototype.setParent = function (container) {\n    this._canvas.remove();\n    if (container) {\n        container.append(this._canvas);\n    }\n};\n\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\n};\n\n/**\n * Get the html5 canvas.\n * @public\n * @returns {canvas}\n */\nCanvas.prototype.getCanvas = function () {\n    return this._canvas;\n};\n\n/**\n * Get the html5 2D context. Used when performance and less function calls are needed.\n * @public\n * @returns {context}\n */\nCanvas.prototype.getContext = function () {\n    return this._context;\n};\n\n/**\n * Get the x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getX = function () {\n    return this._x;\n};\n\n/**\n * Get the y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getY = function () {\n    return this._y;\n};\n\n/**\n * Get the content x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getContentX = function () {\n    return this._contentX;\n};\n\n/**\n * Get the content y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getContentY = function () {\n    return this._contentY;\n};\n\n/**\n * Get the canvas width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getWidth = function () {\n    return this._canvas.offsetWidth;\n};\n\n/**\n * Get the canvas height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getHeight = function () {\n    return this._canvas.offsetHeight;\n};\n\n/**\n * Get the canvas content width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getContentWidth = function () {\n    return this._canvas.clientWidth;\n};\n\n/**\n * Get the canvas content height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getContentHeight = function () {\n    return this._canvas.clientHeight;\n};\n\n/**\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetX = function () {\n    return this._contentOffsetX;\n};\n\n/**\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetY = function () {\n    return this._contentOffsetY;\n};\n\n\n/**\n * Get text with in pixels.\n * @public\n * @param {string} text - Text to measure.\n * @param {fontString} font - Font to use.\n * @returns {int} Width in pixels.\n */\nCanvas.prototype.getTextWidth = function (text, font) {\n    if (font) {\n        this._context.font = font;\n    }\n    return this._context.measureText(text).width;\n};\n\n/**\n * Clear canvas.\n * @public\n */\nCanvas.prototype.clear = function () {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\n    }\n};\n\n/**\n * Clear area.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(x, y, width, height);\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\n    }\n};\n\n/**\n * Set z-index.\n * @public\n * @param {int} zIndex - The new Z-index.\n */\nCanvas.prototype.setZIndex = function (zIndex) {\n    this._canvas.style[\"z-index\"] = zIndex;\n};\n\n/**\n * Set any context member.\n * @public\n * @param {string} member - Member name.\n * @param {type} value - Member value.\n */\nCanvas.prototype.set = function (member, value) {\n    this._context[member] = value;\n};\n\n/**\n * Set canvas border parameters.\n * @param {string} style\n * @param {string} color\n * @param {string} width\n */\nCanvas.prototype.setBorder = function (style, color, width) {\n    this._canvas.style.borderStyle = style;\n    this._canvas.style.borderColor = color;\n    this._canvas.style.borderWidth = width;\n    this._calculateContentPosition();\n};\n\n/**\n * Get any context member.\n * @public\n * @param {string} member - Member name.\n * @returns {type}\n */\nCanvas.prototype.get = function (member) {\n    return this._context[member];\n};\n\n/**\n * Get scale ratio.\n * @public\n * @returns {number}\n */\nCanvas.prototype.getRatio = function () {\n    return this._ratio;\n};\n\n/**\n * Rotate the canvas.\n * @public\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\n */\nCanvas.prototype.rotate = function (rotateDegrees) {\n    this._context.rotate(rotateDegrees * Math.PI / 180);\n};\n\n/**\n * Set position of canvas relative to it's parent.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n */\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\n    this._x = x;\n    this._y = y;\n    if (alignRight) {\n        this._canvas.style.left = \"\";\n        this._canvas.style.right = x + \"px\";\n    }\n    else {\n        this._canvas.style.left = x + \"px\";\n        this._canvas.style.right = \"\";\n    }\n    if (valignBottom) {\n        this._canvas.style.top = \"\";\n        this._canvas.style.bottom = y + \"px\";\n    }\n    else {\n        this._canvas.style.top = y + \"px\";\n        this._canvas.style.bottom = \"\";\n    }\n    this._calculateContentPosition();\n};\n\n/**\n * Set size of canvas. \n * @public\n * @param {int} width - Width in pixels. \n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.setSize = function (width, height) {\n    if (width !== undefined) {\n        if (typeof width === \"number\") {\n            width = width + \"px\";\n        }\n        this._canvas.style.width = width;\n    }\n    if (height !== undefined) {\n        if (typeof height === \"number\") {\n            height = height + \"px\";\n        }\n        this._canvas.style.height = height;\n    }\n    this.resize();\n};\n\n/**\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\n * @public\n */\nCanvas.prototype.resize = function () {\n    //Calculate pixel ratio.\n    const dpr = window.devicePixelRatio || 1;\n    const bsr = this._context.webkitBackingStorePixelRatio ||\n        this._context.mozBackingStorePixelRatio ||\n        this._context.msBackingStorePixelRatio ||\n        this._context.oBackingStorePixelRatio ||\n        this._context.backingStorePixelRatio || 1;\n    this._ratio = dpr / bsr;\n\n    //Update canvas.\n    this._canvas.width = this.getContentWidth() * this._ratio;\n    this._canvas.height = this.getContentHeight() * this._ratio;\n\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\n    if (!this._dontScale) {\n        this._context.scale(this._ratio, this._ratio);\n    }\n};\n\n/**\n * Draw a stroke/line rectangle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    //Line width build in both direction. Compensate coordinates.\n    x += this._context.lineWidth / 2;\n    y += this._context.lineWidth / 2;\n    width -= this._context.lineWidth;\n    height -= this._context.lineWidth;\n    this._context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 1 coordinate.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 2 coordinates.\n * @public\n * @param {int} x1 - First X-axis pixel.\n * @param {int} y1 - First Y-axis pixel.\n * @param {int} x2 - Second X-axis pixel.\n * @param {int} y2 - Second Y-axis pixel.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\n};\n\n/**\n * Draw a stroked circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n * @param {int} width - Width of stroked line.\n */\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (width) {\n        this._context.lineWidth = width;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.stroke();\n};\n\n/**\n * Draw a filled circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n */\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.fill();\n};\n\n/**\n * Draw a line.\n * @public\n * @param {int} x1 - First x-coordinate in pixels.\n * @param {int} y1 - First y-coordinate in pixels.\n * @param {int} x2 - Second x-coordinate in pixels.\n * @param {int} y2 - Second y-coordinate in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    this._context.beginPath();\n    this._context.moveTo(x1, y1);\n    this._context.lineTo(x2, y2);\n    this._context.stroke();\n};\n\n/**\n * Draw filled text.\n * @public\n * @param {string} text - Text to draw.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {string} font - Font to use.\n * @param {string} color - Color to use.\n * @param {string} align - Alignment ot use.\n * @param {string} baseline - Baseline to use.\n * @param {number} rotate - Rotate text number of degrees.\n */\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\n    if (font) {\n        this._context.font = font;\n    }\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    if (align) {\n        this._context.textAlign = align;\n    }\n    if (baseline) {\n        this._context.textBaseline = baseline;\n    }\n    if (rotate) {\n        this._context.save();\n        this._context.translate(x, y);\n        this._context.rotate(rotate * Math.PI / 180);\n        this._context.fillText(text, 0, 0);\n        this._context.restore();\n    }\n    else {\n        this._context.fillText(text, x, y);\n    }\n};\n\n/**\n * Plot graph curve.\n * @public\n * @param {array} array - Input data. [[x, y], [x, y]]\n * @param {string} color - Color of stroked line.\n * @param {int} lineWidth - Width in pixels of stroked line.\n */\nCanvas.prototype.graph = function (array, color, lineWidth) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    this._context.beginPath();\n    this._context.moveTo(array[0][0], array[0][1]);\n    for (let i = 1; i < array.length; ++i) {\n        this._context.lineTo(array[i][0], array[0][1]);\n    }\n    this._context.stroke();\n};\n\n/**\n * Fill entire canvas with the given color.\n * @public\n * @param {string} color - Color to use.\n */\nCanvas.prototype.fill = function (color) {\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\n};\n\nCanvas.prototype.disableMouseInteraction = function () {\n    this._canvas.style[\"pointer-events\"] = \"none\";\n};\n\n/**\n * Calculate content X and Y.\n * @private\n */\nCanvas.prototype._calculateContentPosition = function () {\n    const compStyle = getComputedStyle(this._canvas);\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\n    this._contentX = this._x + this._contentOffsetX;\n    this._contentY = this._y + this._contentOffsetY;\n};\n\nexport default Canvas;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\nif (!Math.log10) {\n    Math.log10 = Static.log10;\n}\n\n/** \n * The Axis class is a single axis to the Graph class.\n */\n\n/**\n * Create new graph axis.\n * @public\n * @constructor\n * @param {Options} options - GraphOptions object.\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\n * @param {string} orientation - X or Y axis.\n * @returns {Axis}\n */\nfunction Axis(options, graphCanvas, axis) {\n    if (axis.toLowerCase() === \"x\") {\n        this._isX = true;\n        this._axis = options.axes.x;\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\n    }\n    else if (axis.toLowerCase() === \"y\") {\n        this._isX = false;\n        this._axis = options.axes.y;\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\n    }\n    else {\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\n        return;\n    }\n    this._options = options;\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\n}\n\n/**\n * Returns true if all bounds are set.\n * @public\n * @returns {bool}\n */\nAxis.prototype.hasBounds = function () {\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\n};\n\n/**\n * True of this axis is logarithmic.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isLog = function () {\n    return this._axis.log;\n};\n\n/**\n * True of this axis is inverted.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isInverted = function () {\n    return this._axis.inverted;\n};\n\n/**\n * Get min bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMin = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMin)) {\n        return this._overrideMin;\n    }\n    return this._min;\n};\n\n/**\n * Get max bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMax = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMax)) {\n        return this._overrideMax;\n    }\n    return this._max;\n};\n\n/**\n * Get the axis label. Uses the options value formatter if set.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabel = function () {\n    return this._axis.label;\n};\n\n/**\n * Get the font(family and size) for the tick labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getTickLabelsFont = function () {\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\n};\n\n/**\n * Get the font(family and size) for the axes labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabelFont = function () {\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\n};\n\n/**\n * Get bounds label width in pixels. Uses the options value formatter if set.\n * @public\n * @returns {int}\n */\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\n    if (pad) {\n        bound = Static.round(bound + 0.111111111111111, 3);\n    }\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\n};\n\n/**\n * Get the ticks array.\n * @public\n * @returns {array}\n */\nAxis.prototype.getTicks = function () {\n    return this._ticks;\n};\n\n/**\n * Return true if this axis has overridden bounds.\n * @public\n */\nAxis.prototype.hasZoom = function () {\n    return !Is.isNull(this._overrideMin) || !Is.isNull(this._overrideMax);\n};\n\n/**\n * Override bounds. Temporary override user given bounds. \n * @public\n */\nAxis.prototype.zoom = function (min, max) {\n    this._overrideMin = min;\n    this._overrideMax = max;\n    if (!Is.isNull(this.getMin()) || !Is.isNull(this.getMax())) {\n        this.calculateTicks();\n    }\n};\n\n/**\n * Remove overridden bounds.\n * @public\n */\nAxis.prototype.clearZoom = function () {\n    this.zoom();\n};\n\n/**\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\n * @public\n */\nAxis.prototype.calculateBounds = function () {\n    let newMin, newMax;\n\n    //Prioritize user given bounds.\n    if (!Is.isNull(this._axis.bounds.min)) {\n        newMin = this._axis.bounds.min;\n    }\n    if (!Is.isNull(this._axis.bounds.max)) {\n        newMax = this._axis.bounds.max;\n    }\n\n    //Both bounds are not set by the user. Calculate missing.\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\n        let calcBounds;\n        if (this._isX) {\n            calcBounds = this._calculateXBounds();\n        }\n        else {\n            calcBounds = this._calculateYBounds();\n        }\n\n        if (calcBounds) {\n            //Use both calculated bounds.\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\n                newMin = calcBounds.min;\n                newMax = calcBounds.max;\n                //Both values are calculated. Move both.\n                if (newMin === newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\n                    --newMin;\n                    ++newMax;\n                }\n            }\n            //Use only calculated min.\n            else if (Is.isNull(newMin)) {\n                newMin = calcBounds.min;\n                //Only move the calculated value.\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\n                    newMin = newMax - 1;\n                }\n            }\n            //use only calculated max.\n            else if (Is.isNull(newMax)) {\n                newMax = calcBounds.max;\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\n                    newMax = newMin + 1;\n                }\n            }\n        }\n    }\n\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\n        if (this._axis.log && newMin <= 0) {\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\n            newMin = newMax = undefined;\n        }\n    }\n    this._min = newMin;\n    this._max = newMax;\n};\n\n/**\n * Calculate graph axes ticks.\n * @public\n */\nAxis.prototype.calculateTicks = function () {\n    let ticks;\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\n    //Create ticks with user given options ticker.\n    if (this._axis.ticker) {\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n    //Create ticks with the default ticker.\n    else {\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n\n    if (!ticks.length) {\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\n    }\n\n    //Update ticks with pixel coordinates.\n    for (let i = 0; i < ticks.length; ++i) {\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\n    }\n    //Show tick markers.\n    if (this._options.axes.tickMarkers.show) {\n        ticks.markers = {\n            offset: this._options.axes.tickMarkers.offset,\n            length: this._options.axes.tickMarkers.length,\n            width: this._options.axes.tickMarkers.width,\n            color: this._options.axes.tickMarkers.color\n        };\n    }\n    //Show tick labels.\n    if (this._options.axes.tickLabels.show) {\n        ticks.labels = {\n            offset: this._options.axes.tickLabels.offset,\n            size: this._options.axes.tickLabels.size,\n            color: this._options.axes.tickLabels.color,\n            font: this.getTickLabelsFont(),\n            width: []\n        };\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\n        }\n    }\n    //Show grid.\n    if (this._axis.grid.width) {\n        ticks.grid = {\n            width: this._axis.grid.width,\n            color: this._axis.grid.color\n        };\n    }\n    this._ticks = ticks;\n};\n\n/**\n * Get value from given pixel coordinate.\n * @public\n * @returns {number}\n */\nAxis.prototype.pixelToValue = function (pixel) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\n        }\n        //Logarithmic normal orientation.\n        else {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\n        }\n        //Linear normal orientation.\n        else {\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\n        }\n    }\n};\n\n/**\n * Get pixel coordinate from given value.\n * @public\n * @returns {number}\n */\nAxis.prototype.valueToPixel = function (value) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\n        }\n        //Logarithmic normal orientation.\n        else {\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\n        }\n        //Linear normal orientation.\n        else {\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\n        }\n    }\n};\n\n/**\n * Format the given value. Uses value formatter in options if available.\n * @public\n * @param {number} value\n * @returns {string}\n */\nAxis.prototype.formatLegendValue = function (value) {\n    //Use user given formatter.\n    if (this._axis.legendValueFormatter) {\n        return this._axis.legendValueFormatter(value);\n    }\n    //Use default value formatter.\n    else {\n        return Static.round(value, 5);\n    }\n};\n\n/**\n * Callback function for getting pixel coordinate from a given value.\n * Much faster than asking this class valueToPixel function for each value.\n * Needs to be required if window changes size or new bounds are set.\n * Safest to aquire for each render pass.\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\n * @callback Axis~valueToPixelCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback to calculate the pixel coordinate for a given value.\n * Used by the graph render function to improve performance.\n * @public\n * @returns {Axis~valueToPixelCallback}\n */\nAxis.prototype.getValueToPixelCallback = function () {\n    let num, denom, numVar, numOp, logFunc;\n    const size = this._getSize() * this._getRatio();\n\n    //Inverted X or normal Y.\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n        numVar = this.getMax();\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\n    }\n    //Normal X or inverted Y.\n    else {\n        numVar = this.getMin();\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\n    }\n\n    //Axis is logarithmic.\n    if (this._axis.log) {\n        numOp = \"/\";\n        logFunc = \"Math.log10\";\n    }\n    //Axis is linear.\n    else {\n        numOp = \"-\";\n        logFunc = \"\";\n    }\n\n    //Only do the numerator operation on the numerator if the variable is not zero.\n    if (numVar) {\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\n    }\n    else {\n        num = logFunc + \"(value)\";\n    }\n\n    //Only do the fraction if the denominator is not 1.\n    if (denom !== 1) {\n        denom = \"/ \" + denom;\n    }\n    else {\n        denom = \"\";\n    }\n\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\n};\n\n/**\n * Calculate X-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateXBounds = function () {\n    //Calculate missing X-axis bounds from dataX values.\n    if (this._options.graph.dataX.length) {\n        if (this._options.debug) {\n            console.log(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\n        }\n        let min = 4294967296;\n        let max = -4294967296;\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\n            const data = this._options.graph.dataX[i];\n            min = Math.min(min, data[0], data[data.length - 1]);\n            max = Math.max(max, data[0], data[data.length - 1]);\n        }\n        return { min: min, max: max };\n    }\n    //Calculate X-axis bounds from dataY length.\n    else if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.log(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\n        }\n        let max = 0;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            max = Math.max(max, this._options.graph.dataY[i].length);\n        }\n        return { min: 1, max };\n    }\n    else if (this._options.debug) {\n        console.log(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\n        return;\n    }\n};\n\n/**\n * Calculate Y-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateYBounds = function () {\n    //Calculate Y-axis bounds from dataY values.\n    if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.log(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\n        }\n        let min = null;\n        let max = null;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            const data = this._options.graph.dataY[i];\n            if (data.length && min === null) {\n                min = 4294967296;\n                max = -4294967296;\n            }\n            for (let j = 0; j < data.length; ++j) {\n                min = Math.min(min, data[j]);\n                max = Math.max(max, data[j]);\n            }\n        }\n        return min !== null\n            ? { min, max }\n            : null;\n    }\n    else if (this._options.debug) {\n        console.log(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\n        return;\n    }\n};\n\n/**\n * Default get ticks funciton. Used when no ticker is set in options.\n * @private\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{number, string}>}\n */\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\n    //Pre-format ticker values.\n    if (this._axis.tickerValuePreFormatter) {\n        minValue = this._axis.tickerValuePreFormatter(minValue);\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\n    }\n\n    let ticks;\n\n    //If the range is to small even a log axis will get linear values.\n    if (isLog && maxValue - minValue >= 4 * minValue) {\n        ticks = getDefaultLogTicks(minValue, maxValue);\n    }\n    else {\n        ticks = getDefaultLinTicks(minValue, maxValue, graphSize, labelSize);\n    }\n\n    //Post-format ticker values.\n    if (this._axis.tickerValuePostFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\n        }\n    }\n\n    //Add user formatted labels.\n    if (this._axis.tickerLabelFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value);\n        }\n    }\n    //Add default formatted labels.\n    else {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\n        }\n    }\n\n    return ticks;\n};\n\nfunction defaultTickerLabelFormatter(value) {\n    if (value < 0) {\n        return '-' + defaultTickerLabelFormatter(-value);\n    }\n    let ranges = [];\n    if (value >= 1e3) {\n        ranges = [\n            { divider: 1e24, suffix: 'Y' },\n            { divider: 1e21, suffix: 'Z' },\n            { divider: 1e18, suffix: 'E' },\n            { divider: 1e15, suffix: 'P' },\n            { divider: 1e12, suffix: 'T' },\n            { divider: 1e9, suffix: 'G' },\n            { divider: 1e6, suffix: 'M' },\n            { divider: 1e3, suffix: 'k' }\n        ];\n    }\n    else if (value < 1e-2) {\n        ranges = [\n            { divider: 1e-3, suffix: 'm' },\n            { divider: 1e-6, suffix: 'µ' },\n            { divider: 1e-9, suffix: 'n' },\n            { divider: 1e-12, suffix: 'p' },\n            { divider: 1e-15, suffix: 'f' },\n            { divider: 1e-18, suffix: 'a' },\n            { divider: 1e-21, suffix: 'z' },\n            { divider: 1e-24, suffix: 'y' }\n        ];\n    }\n    for (let i = 0; i < ranges.length; i++) {\n        if (value >= ranges[i].divider) {\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\n        }\n    }\n    return value.toString();\n}\n\n//For a given value calculate the best step value.\nfunction getStepValue(isLog, value) {\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\n    const exp = Math.floor(log10(value));\n    for (let i = 0; i < mult.length; ++i) {\n        const newValue = Math.pow(10, exp) * mult[i];\n        if (newValue >= value) {\n            return newValue;\n        }\n    }\n}\n\n//Get linear ticks.\nfunction getDefaultLinTicks(minValue, maxValue, graphSize, labelSize) {\n    //Max number of labels.\n    const maxNumLabels = graphSize / (labelSize * 1.5);\n    //Value range\n    const range = maxValue - minValue;\n    //Get ticker value step.\n    const step = getStepValue(false, range / maxNumLabels);\n\n    //Calculate start pos.\n    let start = minValue;\n    //Make sure start is on a step position.\n    const diff = modf(start, step);\n    if (diff > 0) {\n        start += step - diff;\n    }\n    if (diff < 0) {\n        start -= diff;\n    }\n\n    //Start and end value is the same. Just return the one value.\n    if (secureFloat(start) === secureFloat(maxValue)) {\n        return [{ value: secureFloat(start) }];\n    }\n\n    const ticks = [];\n    for (; start <= maxValue; start += step) {\n        const value = secureFloat(start);\n        ticks.push({ value });\n        //Reached infinite loop.\n        if (start === value + step) {\n            break;\n        }\n        start = value;\n    }\n    return ticks;\n}\n\n/**\n * Modulus for float.\n * @public\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction modf(a, b) {\n    return a - Math.round(a / b) * b;\n}\n\n//Get logarithmic ticks.\nfunction getDefaultLogTicks(minValue, maxValue) {\n    const ticks = [];\n    let step = getStepValue(true, minValue);\n    for (; ;) {\n        for (let i = 1; i < 10; ++i) {\n            let value = i * step;\n            if (value > maxValue) {\n                return ticks;\n            }\n            ticks.push({ value: secureFloat(value) });\n        }\n        step *= 10;\n    }\n}\n\nexport default Axis;\n\n/**\n * Secure float precision.\n * @public\n * @param {number} val\n * @returns {number}\n */\nfunction secureFloat(val) {\n    return parseFloat(val.toPrecision(15));\n}\n\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\nimport Input from \"./Input\";\n\n/** \n * Interaction is a class that handles the user interaction for the Graph class.\n */\n\n/**\n * Create a new Interaction.\n * @public\n * @constructor\n * @param {Graph} graph - Graph instance this interaction belongs to.\n * @returns {Interaction}\n */\nfunction Interaction(graph) {\n    this._graph = graph;\n}\n\n/**\n * Update(add/remove) interaction events.\n * @public\n */\nInteraction.prototype.updateOptions = function () {\n    //Resizing.\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\n        this._resizeCallback = this._addResizeEvent();\n    }\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\n        window.removeEventListener(\"resize\", this._resizeCallback);\n        this._resizeCallback = undefined;\n    }\n\n    //Mouse tracking.\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\n    }\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\n        const canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\n        this._mouseTrackingCallbacks = undefined;\n    }\n\n    //Zooming.\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\n        this._zoomCallbacks = this._addZoomEvents();\n    }\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\n        let canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\n        canvas = this._graph._canvas.background.getCanvas();\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\n        this._zoomCallbacks = undefined;\n    }\n\n    //Smooth option.\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\n        this._smoothingCallback = this._addSmoothingEvent();\n    }\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\n        this._smoothingCallback = undefined;\n        this._smoothingInput.remove();\n        this._smoothingInput = undefined;\n    }\n\n    //Every time options are updated. Update smoothing value if available.\n    if (this._smoothingInput) {\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\n    }\n\n    this._createInteractionData();\n};\n\n/**\n * Clear interaction data.\n * @public\n */\nInteraction.prototype.clear = function () {\n    this._graph._canvas.interaction.clear();\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"none\";\n    }\n};\n\n/**\n * Render interaction data.\n * @public\n */\nInteraction.prototype.render = function () {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Inform the activity class that the graph has changed size and/or position.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\n        this._smoothingInput.style.left = x + \"px\";\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Add a resize event.\n * @private\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addResizeEvent = function () {\n    const graph = this._graph;\n    const self = this;\n    let timeOutResize;\n    //Re-plots the graph on resize end.\n    function resizeEnd() {\n        graph._canvas.background.resize();\n        graph._calculateGraphSize();\n        graph._plot();\n        timeOutResize = undefined;\n        self._resizing = false;\n    }\n    //Clear graph, hightlight and spinner features on resize start.\n    function resizeStart() {\n        self._resizing = true;\n        graph._canvas.graph.clear();\n        graph._canvas.highlight.clear();\n        graph._canvas.interaction.clear();\n        graph._renderLegend();\n    }\n    let lastWidth = this._graph._canvas.background.getWidth();\n    let lastHeight = this._graph._canvas.background.getHeight();\n    let lastPixelRatio = window.devicePixelRatio;\n    function callback() {\n        //Make sure that the size actually have changed.\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\n            lastWidth = graph._canvas.background.getWidth();\n            lastHeight = graph._canvas.background.getHeight();\n            lastPixelRatio = window.devicePixelRatio;\n            //First time the function is called for this resize event.\n            if (!timeOutResize) {\n                resizeStart();\n            }\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\n            clearTimeout(timeOutResize);\n            timeOutResize = setTimeout(resizeEnd, 500);\n        }\n    }\n\n    window.addEventListener(\"resize\", callback);\n    return callback;\n};\n\n/**\n * Add mouse tracking events.\n * @private\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addMouseTrackingEvents = function () {\n    const self = this;\n    const graph = this._graph;\n    function mouseMoveCallback(e) {\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\n            return;\n        }\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\n        const values = [valueX];\n        graph._canvas.interaction.clear();\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\n            const dataY = graph._options.graph.dataY[i];\n            //Cant track unexisting values.\n            if (!dataY.length) {\n                continue;\n            }\n            const dataXCallback = graph._options.getDataCallback(\"x\", i);\n            const res = Static.binarySearch(dataXCallback, dataY.length, valueX);\n            let valueY;\n            //Found exaxt X-value.\n            if (res.found !== undefined) {\n                if (graph._options.graph.smoothing) {\n                    valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\n                }\n                else {\n                    valueY = dataY[res.found];\n                }\n            }\n            //Binary search returned min and max at same value without a found.\n            //There is no matching value. Just abort.\n            else if (res.min === res.max) {\n                continue;\n            }\n            //Calculate Y-value from min max coordinates.\n            else {\n                const valueXMin = dataXCallback(res.min);\n                const valueXMax = dataXCallback(res.max);\n                const span = valueXMax - valueXMin;\n                const weightMin = 1 - (valueX - valueXMin) / span;\n                const weightMax = 1 - (valueXMax - valueX) / span;\n                let valueMin, valueMax;\n                if (graph._options.graph.smoothing) {\n                    valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\n                    valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\n                }\n                else {\n                    valueMin = dataY[res.min];\n                    valueMax = dataY[res.max];\n                }\n                valueY = valueMin * weightMin + valueMax * weightMax;\n            }\n\n            values[i + 1] = valueY;\n            const pixelY = graph._axes.y.valueToPixel(valueY);\n\n            if (isFinite(pixelY)) {\n                self._interactionData[i].moveTo(e.offsetX, pixelY);\n            }\n        }\n        graph._renderLegend(values);\n    }\n    function mouseOutCallback() {\n        if (!self.mouseDown) {\n            graph._canvas.interaction.clear();\n            graph._renderLegend();\n        }\n    }\n    const canvas = this._graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousemove\", mouseMoveCallback);\n    canvas.addEventListener(\"mouseout\", mouseOutCallback);\n    return { mousemove: mouseMoveCallback, mouseout: mouseOutCallback };\n};\n\n/**\n * Add zoom events.\n * @private\n * @returns {object} - object containing callbacks.\n */\nInteraction.prototype._addZoomEvents = function () {\n    const graph = this._graph;\n    const self = this;\n    this.mouseDown = false;\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\n    let startX, startY;\n    //true = horizontal. false = vertical.\n    let lastHorizontal;\n    const color = \"rgba(130, 130, 130, 0.2)\";\n    let lastX, lastY;\n\n    function mousedown(e) {\n        if (e.button === 0 && graph._axes.x.hasBounds() && graph._axes.y.hasBounds()) {\n            lastX = startX = e.offsetX;\n            lastY = startY = e.offsetY;\n            self.mouseDown = true;\n            lastHorizontal = undefined;\n            graph._renderLegend();\n        }\n    }\n    function mousemove(e) {\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\n            lastX = e.offsetX;\n            lastY = e.offsetY;\n            const diffX = Math.abs(startX - e.offsetX);\n            const diffY = Math.abs(startY - e.offsetY);\n            const newHorizontal = diffX > diffY;\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\n                lastHorizontal = newHorizontal;\n            }\n            graph._canvas.interaction.clear();\n            //Mark horizontally.\n            if (lastHorizontal) {\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\n            }\n            //Mark vertically.\n            else {\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\n            }\n        }\n    }\n    function mouseup(e) {\n        if (e.button === 0 && self.mouseDown) {\n            self.mouseDown = false;\n            if (startX !== e.offsetX || startY !== e.offsetY) {\n                graph._canvas.interaction.clear();\n                //X-axis.\n                if (lastHorizontal) {\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\n                    if (startX === x) {\n                        return;\n                    }\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\n                    graph._axes.x.zoom(min, max);\n                }\n                //Y-axis.\n                else {\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\n                    if (startY === y) {\n                        return;\n                    }\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\n                    graph._axes.y.zoom(min, max);\n                }\n                graph._plot();\n            }\n        }\n    }\n    function dblclick(e) {\n        //Prevents double click from selecting the div.\n        preventDefault(e);\n        if (graph._axes.x.hasZoom() || graph._axes.y.hasZoom()) {\n            graph._axes.x.clearZoom();\n            graph._axes.y.clearZoom();\n            graph._plot();\n        }\n    }\n    function mouseout(e) {\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\n            return;\n        }\n        graph._canvas.interaction.clear();\n        self.mouseDown = false;\n    }\n\n    let canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousedown\", mousedown);\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"dblclick\", dblclick);\n\n    canvas = this._graph._canvas.background.getCanvas();\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"mouseleave\", mouseout);\n\n    return { mousedown, mousemove, mouseup, dblclick, mouseout };\n};\n\n/**\n * Add smoothing input event.\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addSmoothingEvent = function () {\n    this._smoothingInput = Input({\n        type: \"number\",\n        tabIndex: -1,\n        maxLength: 6,\n        value: 0,\n        min: 0\n    });\n    this._smoothingInput.style[\"z-index\"] = 5;\n    this._smoothingInput.style.position = \"absolute\";\n    this._smoothingInput.style.width = \"50px\";\n    this._smoothingInput.style.height = \"21px\";\n    this._smoothingInput.style[\"background-color\"] = \"white\";\n    this._smoothingInput.style[\"border-radius\"] = 0;\n    this._smoothingInput.style.border = \"1px solid #ccc\";\n    this._smoothingInput.style.color = \"#555\";\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\n    this._smoothingInput.style.display = \"none\";\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\n    this._graph._container.append(this._smoothingInput);\n    const self = this;\n    function callbackDone() {\n        let value = parseInt(self._smoothingInput.value);\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\n        let length = 4294967296;\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\n        }\n        if (2 * value + 1 > length) {\n            value = Math.floor((length - 1) / 2);\n        }\n        self._smoothingInput.value = value;\n        self._graph._options.graph.smoothing = value;\n        self._graph._renderGraph();\n    }\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\n    return callbackDone;\n};\n\n/**\n * Create interaction data.\n * @private\n */\nInteraction.prototype._createInteractionData = function () {\n    const radius = 3;\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    this._interactionData = [];\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\n        //Clear area\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\n\n        //Draw solid circle\n        ctx.beginPath();\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\n        ctx.fill();\n\n        //If fill; draw black border to increase visibility.\n        if (this._graph._options.graph.fill) {\n            ctx.beginPath();\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n            ctx.strokeStyle = \"#000000\";\n            ctx.stroke();\n        }\n\n        //Get image data from tmp context.\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\n        //Add member data.\n        const canvas = this._graph._canvas.interaction;\n        imageData.moveTo = function (x, y) {\n            canvas.putImageData(this, x, y, -radius, -radius);\n        };\n        this._interactionData[i] = imageData;\n    }\n};\n\nexport default Interaction;\n\n/**\n * Clamp the given value to the given range.\n * @param {type} min - Min value.\n * @param {type} number - Value to clamp.\n * @param {type} max - Max value.\n * @returns {Number} - Clamped value.\n */\nfunction clamp(min, number, max) {\n    if (number < min) {\n        return min;\n    }\n    else if (number > max) {\n        return max;\n    }\n    else {\n        return number;\n    }\n}\n\nfunction preventDefault(e) {\n    //Firefox, Chrome, etc.\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n    //IE\n    else {\n        e.returnValue = false;\n        e.cancelBubble = true;\n    }\n}","/*\n* @author Andreas Arvidsson\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\n */\n\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\n}\n\nimport Spinner from \"./lib/spin.min\";\nimport Canvas from \"./Canvas\";\nimport Axis from \"./Axis\";\nimport Interaction from \"./Interaction\";\nimport Static from \"./Static\";\nimport Options from \"./Options\";\nimport Is from \"./Is\";\n\n/** \n * The Graph class is a 2D graph plotter.\n * Built with performance and customizability in mind. Supports multiple data\n * sets and all data sets are available as typed arrays.\n */\n\n/**\n * Create new graph.\n * @public\n * @constructor\n * @param {dom|string} container - Element.  DOM or ID string. Graph will fill this element.\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Graph}\n */\nfunction Graph(container, options) {\n    if (this instanceof Graph) {\n        this._init(container, options);\n    }\n    //The new keyword was omitted.\n    else {\n        return new Graph(container, options);\n    }\n}\n\n/**\n * Get dummy dataY array.\n * @public\n * @returns {array}\n */\nGraph.createDummyData = Static.createDummyData;\n\n/**\n * Get options instance.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.prototype.getOptions = function () {\n    return this._options;\n};\n\n/**\n * Get default options.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.getDefaultOptions = Options.getDefault;\n\n/**\n * Sets all options to their default values.\n * @public\n */\nGraph.prototype.setDefaultOptions = function () {\n    this._options.setDefault();\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n */\nGraph.prototype.setOptions = function (options) {\n    this._options.set(options);\n    this._hasCalculatedGraphSize = false;\n    if (this._options.isOk()) {\n        this._axes.x.zoom(this._options.zoom.xMin, this._options.zoom.xMax);\n        this._axes.y.zoom(this._options.zoom.yMin, this._options.zoom.yMax);\n        this._axes.x.calculateBounds();\n        this._axes.y.calculateBounds();\n        this._interaction.updateOptions();\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\n        this._initLegend();\n        this._plot();\n    }\n};\n\n/* ********** PRIVATE ********** */\n\n/**\n * Implementation of the constructor.\n * @private\n */\nGraph.prototype._init = function (container, options) {\n    if (typeof el === \"string\") {\n        container = document.getElementById(container);\n    }\n    if (!parent) {\n        console.error(\"owp.graph ERROR: Element dom is null\");\n        return;\n    }\n\n    container.style.position = \"relative\";\n\n    this._container = container;\n    this._options = new Options();\n\n    this._canvas = {\n        background: new Canvas(container, \"background\"),\n        graph: new Canvas(container, \"graph\", true),\n        highlight: new Canvas(container, \"highlight\"),\n        interaction: new Canvas(container, \"interaction\")\n    };\n\n    this._canvas.background.setZIndex(0);\n    this._canvas.graph.setZIndex(1);\n    this._canvas.highlight.setZIndex(2);\n    //Spinner uses zIndex 3.\n    this._canvas.interaction.setZIndex(4);\n    //Smoothing input used zIndex 5.\n\n    this._axes = {\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\n        y: new Axis(this._options, this._canvas.graph, \"y\")\n    };\n\n    this._interaction = new Interaction(this);\n\n    if (options) {\n        this.setOptions(options);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\n        this.setOptions({});\n    }\n};\n\n/**\n * Create legend canvas and attach to parent dom.\n * @private\n */\nGraph.prototype._initLegend = function () {\n    const location = this._options.legend.location;\n    if (location && this._options.interaction.trackMouse) {\n        //DIV id.\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\n            const legendDiv = document.getElementById(location);\n            if (legendDiv) {\n                legendDiv.style.position = \"relative\";\n                //Reuse existing canvas.\n                if (this._canvas.legend) {\n                    this._canvas.legend.setParent(legendDiv);\n                }\n                //Create new canvas.\n                else {\n                    this._canvas.legend = new Canvas(legendDiv);\n                }\n            }\n            else {\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\n            }\n        }\n        else {\n            //Set same parent for legend as rest of graph.\n            if (this._canvas.legend) {\n                this._canvas.legend.setParent(this._container);\n            }\n            else {\n                this._canvas.legend = new Canvas(this._container);\n                this._canvas.legend.disableMouseInteraction();\n            }\n            if (location.toLowerCase() === \"top\") {\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\n            }\n            else if (location.toLowerCase() === \"right\") {\n                this._canvas.legend.setPosition(0, 0, true);\n                this._canvas.legend.setSize(200, \"100%\");\n            }\n        }\n    }\n    //Remove old legend.\n    else if (this._canvas.legend) {\n        this._canvas.legend.setParent();\n        this._canvas.legend = undefined;\n    }\n};\n\n/**\n * Renders the legend on the background canvas.\n * @private\n */\nGraph.prototype._renderLegend = function (values) {\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\n        return;\n    }\n\n    const settings = this._options.legend;\n    const canvas = this._canvas.legend;\n    canvas.clear();\n    canvas.set(\"font\", this._options.getLegendFont());\n    canvas.set(\"textBaseline\", \"top\");\n    canvas.set(\"textAlign\", settings.align);\n\n    const isTop = settings.location.toLowerCase() === \"top\";\n    const alignLeft = settings.align.toLowerCase() === \"left\";\n    //newLine is disabled for top location.\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\n    //OffsetY is disabled for top location.\n    let y = isTop ? 0 : this._options.legend.offsetY;\n\n    function printValue(color, name, value) {\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\n        canvas.text(str, x, y, null, color);\n        if (newLine) {\n            y += settings.size;\n        }\n        else {\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\n        }\n    }\n\n    const printX = () => {\n        printValue(\n            this._options.graph.colors[0],\n            this._options.getName(0),\n            values ? this._axes.x.formatLegendValue(values[0]) : undefined\n        );\n    }\n\n    const printY = (i) => {\n        printValue(\n            this._options.graph.colors[i],\n            this._options.getName(i),\n            values ? this._axes.y.formatLegendValue(values[i]) : undefined\n        );\n    }\n\n    if (alignLeft || newLine) {\n        printX();\n        for (let i = 1; i <= this._options.graph.dataY.length; ++i) {\n            printY(i);\n        }\n    }\n    else {\n        for (let i = this._options.graph.dataY.length; i >= 1; --i) {\n            printY(i);\n        }\n        printX();\n    }\n};\n\n/**\n * Plots/draws the graph.\n * @private\n */\nGraph.prototype._plot = function () {\n    if (!this._options.isOk()) {\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\n        return;\n    }\n\n    if (this._options.debug) {\n        console.time(\"owp.graph DEBUG: Plot time\");\n    }\n\n    //If graph size has not yet been calculated. Do it.\n    if (!this._hasCalculatedGraphSize) {\n        this._calculateGraphSize();\n    }\n\n    //Clear plot.\n    this._canvas.background.clear();\n    this._canvas.graph.clear();\n    this._canvas.highlight.clear();\n    this._interaction.clear();\n\n    //Render non data related features.\n    this._renderTitle();\n    this._renderAxesLabels();\n    this._renderSpin();\n\n    //Has bounds. Render bounds related features.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._renderXAxis();\n        this._renderYAxis();\n        this._renderHighlight();\n\n        //Has graph data. Render graph data.\n        if (this._options.graph.dataY.length) {\n            this._renderLegend();\n            this._renderGraph();\n            this._interaction.render();\n        }\n        else if (this._options.debug) {\n            console.log(\"owp.graph DEBUG: No data set available. Plotting available features.\");\n        }\n    }\n    //Has neither bounds or data.\n    else if (this._options.debug) {\n        console.log(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\n    }\n\n    if (this._options.debug) {\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\n    }\n};\n\n/**\n * Render the spinner\n * @private\n */\nGraph.prototype._renderSpin = function () {\n    //Can't update options so have to remove old spinner always.\n    if (this._spinner) {\n        this._spinner.stop();\n        this._spinner = null;\n    }\n    //Show spinner\n    if (this._options.spinner.show) {\n        //Spinner div does not exist. Create it.\n        if (!this._spinnerDiv) {\n            this._spinnerDiv = document.createElement(\"div\");\n            this._spinnerDiv.style.position = \"absolute\";\n            this._spinnerDiv.style[\"z-index\"] = 3;\n            this._container.append(this._spinnerDiv);\n            this._updateSpinnerSize();\n        }\n        this._spinner = new Spinner(this._options.spinner);\n        this._spinner.spin(this._spinnerDiv);\n    }\n    //Hide spinner. Remove old div.\n    else if (this._spinnerDiv) {\n        this._spinnerDiv.remove();\n        this._spinnerDiv = null;\n    }\n}\n\n/**\n * Updates the position and size of the spinner div based on the graph canvas.\n * @private\n */\nGraph.prototype._updateSpinnerSize = function () {\n    if (this._spinnerDiv) {\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\n    }\n};\n\n/**\n * Calculate graph canvas position and size.\n * @private\n */\nGraph.prototype._calculateGraphSize = function () {\n    let x = this._getOffset([\"left\"]);\n    let y = this._getOffset([\"top\"]);\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\n\n    //Set graph canvas.\n    this._canvas.graph.setPosition(x, y);\n    this._canvas.graph.setSize(width, height);\n\n    //Convert to content space.\n    x = this._canvas.graph.getContentX();\n    y = this._canvas.graph.getContentY();\n    width = this._canvas.graph.getContentWidth();\n    height = this._canvas.graph.getContentHeight();\n\n    //Set highlight canvas.\n    this._canvas.highlight.setPosition(x, y);\n    this._canvas.highlight.setSize(width, height);\n    //Set interaction canvas.\n    this._canvas.interaction.setPosition(x, y);\n    this._canvas.interaction.setSize(width, height);\n    //Set legend canvas if available.\n    if (this._canvas.legend) {\n        if (this._options.legend.location.toLowerCase() === \"top\") {\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\n            this._canvas.legend.setSize(width, this._options.legend.size);\n        }\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\n            this._canvas.legend.setPosition(0, y, true);\n            this._canvas.legend.setSize(200, height);\n        }\n    }\n\n    //Update interaction instance.\n    this._interaction.graphChangedSize(x, y, width, height);\n\n    //Updates the spinner div size.\n    this._updateSpinnerSize();\n\n    //Calculate new ticks for the new size.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._axes.x.calculateTicks();\n        this._axes.y.calculateTicks();\n    }\n    this._hasCalculatedGraphSize = true;\n};\n\n/**\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderXAxis = function () {\n    if (!this._options.axes.x.show) {\n        return;\n    }\n    const ticks = this._axes.x.getTicks();\n    let oldX, oldWidth;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\n        //Draw tick markers.\n        if (ticks.markers) {\n            y += ticks.markers.offset;\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\n            y += ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\n            y += ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\n            oldX = x;\n            oldWidth = ticks.labels.width[i];\n        }\n    }\n};\n\n/**\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderYAxis = function () {\n    if (!this._options.axes.y.show) {\n        return;\n    }\n    const ticks = this._axes.y.getTicks();\n    let oldY;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getX();\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\n        //Draw tick markers.\n        if (ticks.markers) {\n            x -= ticks.markers.offset;\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\n            x -= ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\n            x -= ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\n            oldY = y;\n        }\n    }\n};\n\n/**\n * Renders the axes(x and y) labels on the background canvas.\n * @private\n */\nGraph.prototype._renderAxesLabels = function () {\n    //Draw X label.\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\n    }\n    //Draw Y label.\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\n        const x = this._options.axes.labels.offset;\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\n    }\n};\n\n/**\n * Renders the graph title on the background canvas.\n * @private\n */\nGraph.prototype._renderTitle = function () {\n    if (!this._options.title.label.length) {\n        return;\n    }\n    let x;\n    if (this._options.title.align.toLowerCase() === \"left\") {\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"center\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"right\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\n    }\n    const y = this._options.title.offsetY;\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\n};\n\n/**\n * Renders the highligted area on the highligh canvas.\n * @private\n */\nGraph.prototype._renderHighlight = function () {\n    this._canvas.highlight.clear();\n    const h = this._options.highlight;\n    if (Is.isNull(h.xMin) && Is.isNull(h.xMax) && Is.isNull(h.yMin) && Is.isNull(h.yMax)) {\n        return;\n    }\n    //Convert values to pixels.\n    const x1 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMin) ? this._axes.x.getMin() : h.xMin\n    );\n    const x2 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMax) ? this._axes.x.getMax() : h.xMax\n    );\n    const y1 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMin) ? this._axes.y.getMin() : h.yMin\n    );\n    const y2 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMax) ? this._axes.y.getMax() : h.yMax\n    );\n    this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, h.color);\n};\n\n/**\n * Renders the graph curve on the graph canvas.\n * @private\n */\nGraph.prototype._renderGraph = function () {\n    if (this._options.debug && this._options.graph.smoothing > 1) {\n        console.log(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\n    }\n\n    if (this._options.debug && this._options.graph.simplify) {\n        console.log(\"owp.graph DEBUG: Simplify rendering: \" + this._options.graph.simplify);\n    }\n\n    this._canvas.graph.clear();\n\n    //Get value to pixel functions.\n    const valueToPixelX = this._axes.x.getValueToPixelCallback();\n    const valueToPixelY = this._axes.y.getValueToPixelCallback();\n    //Value bounds        \n    const min = this._axes.x.getMin();\n    const max = this._axes.x.getMax();\n    //Get canvas context directly for increased performance.\n    const context = this._canvas.graph.getContext();\n    context.lineWidth = this._options.graph.lineWidth;\n    context.globalCompositeOperation = this._options.graph.compositeOperation;\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n        //Aquire callback for getting X-axis data values.\n        const getDataX = this._options.getDataCallback(\"x\", i);\n\n        //Find start and end indicies.\n        const length = this._options.graph.dataY[i].length;\n        const bsMin = Static.binarySearch(getDataX, length, min);\n        const bsMax = Static.binarySearch(getDataX, length, max);\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\n\n        //Aquire callback for getting Y-axis data values.\n        const getDataY = this._options.getDataCallback(\"y\", i, start);\n\n        //Start path.\n        context.beginPath();\n\n        if (this._options.graph.dashed[i]) {\n            let pattern = this._options.graph.dashed[i];\n            if (pattern === true) {\n                pattern = [5, 8];\n            }\n            context.setLineDash(pattern);\n        }\n        else {\n            context.setLineDash([]);\n        }\n\n        //Render simplified data set.\n        if (this._options.graph.simplify) {\n            const simplify = this._options.graph.simplify;\n            let oldX = valueToPixelX(getDataX(start));\n            let minVal = getDataY(start);\n            let maxVal = minVal;\n            let newX, y;\n            ++start;\n            for (; start <= end; ++start) {\n                newX = valueToPixelX(getDataX(start));\n                if (Math.abs(oldX - newX) <= simplify) {\n                    y = getDataY(start);\n                    minVal = Math.min(minVal, y);\n                    maxVal = Math.max(maxVal, y);\n                    continue;\n                }\n                context.lineTo(oldX, valueToPixelY(minVal));\n                //Only add the second point if it differs from the first.\n                if (minVal !== maxVal) {\n                    context.lineTo(oldX, valueToPixelY(maxVal));\n                }\n                oldX = newX;\n                minVal = getDataY(start);\n                maxVal = minVal;\n            }\n            //Needed to add the last step.\n            context.lineTo(oldX, valueToPixelY(minVal));\n            if (minVal !== maxVal) {\n                context.lineTo(oldX, valueToPixelY(maxVal));\n            }\n        }\n        //Render full data set.\n        else {\n            for (; start <= end; ++start) {\n                context.lineTo(valueToPixelX(getDataX(start)), valueToPixelY(getDataY(start)));\n            }\n        }\n\n        //Fill under graph.\n        if (this._options.graph.fill) {\n            if (this._options.axes.x.inverted) {\n                context.lineTo(0, this._canvas.graph.getContentHeight());\n                context.lineTo(this._canvas.graph.getContentWidth(), this._canvas.graph.getContentHeight());\n            } else {\n                context.lineTo(this._canvas.graph.getContentWidth() * this._canvas.graph.getRatio(), this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n                context.lineTo(0, this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n            }\n            context.closePath();\n            context.fillStyle = this._options.getColor(i + 1);\n            context.fill();\n        }\n        //Stroke line.\n        else {\n            context.strokeStyle = this._options.getColor(i + 1);\n            context.stroke();\n        }\n    }\n};\n\n/**\n * Get offset for the given paramters.\n * @private\n */\nGraph.prototype._getOffset = function (array) {\n    let offset = 0;\n    for (let i = 0; i < array.length; ++i) {\n        switch (array[i]) {\n            case \"top\":\n                if (this._options.title.label.length) {\n                    offset += this._options.title.size;\n                    offset += this._options.title.offsetY;\n                    offset += this._options.title.padding;\n                }\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"bottom\":\n                if (this._options.axes.x.show) {\n                    if (this._options.axes.x.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.x.height) {\n                        offset += this._options.axes.x.height;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            offset += this._options.axes.tickLabels.size;\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"left\":\n                if (this._options.axes.y.show) {\n                    if (this._options.axes.y.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.y.width) {\n                        offset += this._options.axes.y.width;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\n                }\n                break;\n            case \"right\":\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\n                    offset += this._canvas.legend.getWidth();\n                }\n                else {\n                    const defaultOffset = 20;\n                    let boundOffset = 0;\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\n                    }\n                    offset += Math.max(defaultOffset, boundOffset);\n                }\n                break;\n        }\n    }\n    return Math.round(offset);\n};\n\nexport default Graph;"],"sourceRoot":""}