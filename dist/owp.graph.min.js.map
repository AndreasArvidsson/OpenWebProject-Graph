{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Simplify.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","isOfType2","obj","callbacks","isDOM","HTMLElement","isNull","isObject","isArray","isFunction","isBool","isNumber","isInt","isUint","isString","Array","isTypedArray","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isAnyArray","isColor","div","document","createElement","style","borderColor","isSize","width","isAlignment","noCenter","toLowerCase","isFont","isCompositeOperation","isBorderWidth","borderWidth","isBorderStyle","borderStyle","getCompareCallback","type","Error","getCompareCallbacks","types","split","length","push","isOfType","isContent","array","isInOptions","options","Static","size","seed","random","Math","sin","floor","data","buffer1","ArrayBuffer","buffer2","intY","floatY1","floatY2","mult","PI","cos","console","warn","index","smoothing","getSmoothingWindow","sum","low","high","diffToMin","max","diffToMax","diff","min","dataCallback","mid","found","context","getContext","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","log10","x","log","LN10","Options","this","setDefault","set","isOk","_isOk","getColor","graph","colors","getName","undefined","names","getLegendFont","legend","getDefault","debug","interaction","resize","trackMouse","zoom","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","highlight","xMin","xMax","yMin","yMax","dataX","dataY","dashed","lineWidth","markerRadius","simplify","simplifyBy","fill","compositeOperation","axes","tickMarkers","show","offset","tickLabels","labels","inverted","height","numTicks","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","path","_evalOptions","assign","renderMarkers","renderSimplify","getDataCallback","axis","dataIndex","start","_getDataCallbackSmoothing","error","centralIndex","threshold","optionsOk","obj2","name2","paths","set2","msg","evalType","res","evalEnum","values","indexOf","join","evalArrayContains","evalAlign","evalCond","cond","eval","replaceAll","trim","b","arguments","appendChild","e","f","g","h","j","substring","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","container","id","dontScale","_canvas","append","_context","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","_isX","_axis","_getSize","_options","_getRatio","defaultLegendValueFormatter","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideMin","_min","_overrideMax","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasZoom","calculateTicks","clearZoom","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Simplify","render","ctx","valueToPixelX","valueToPixelY","getDataX","getDataY","end","abs","oldX","count","newX","renderAvg","minVal","renderMin","maxVal","renderMax","valueY","renderMinMax","calculateValue","calculateAvgValue","calculateMinValue","calculateMaxValue","calculateMinMaxValue","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","canvas","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","_renderLegend","mouseDown","_axes","useSimplify","valueX","binarySearch","calculateSmothingValue","valueXMin","valueXMax","span","weightMin","weightMax","valueMin","valueMax","pixelY","isFinite","_interactionData","startX","startY","lastHorizontal","lastX","lastY","button","diffX","diffY","newHorizontal","clamp","preventDefault","returnValue","cancelBubble","toElement","tabIndex","maxLength","_container","callbackDone","_renderGraph","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","createDummyData","getOptions","getDefaultOptions","setDefaultOptions","setOptions","_hasCalculatedGraphSize","_interaction","_initLegend","getElementById","parent","legendDiv","settings","isTop","alignLeft","printValue","str","printX","printY","time","_renderTitle","_renderAxesLabels","_renderSpin","_renderXAxis","_renderYAxis","_renderHighlight","timeEnd","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","_getOffset","oldWidth","oldY","fillGraph","renderLine","globalCompositeOperation","bsMin","bsMax","_renderFull","_renderFill","_renderStroke","circleAngle","channelIndex","closePath","pattern","setLineDash","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\n\n/**\n * Check if the given object is a DOM element.\n * @param {object} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isDOM = function (obj) {\n    return obj instanceof HTMLElement;\n};\n\n/**\n * Check of the given object is null or undefined.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNull = function (obj) {\n    return obj === undefined || obj === null;\n};\n\n/**\n * Check of the given object is a object.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isObject = function (obj) {\n    return obj !== null && typeof obj === \"object\" && !Is.isArray(obj);\n};\n\n/**\n * Check of the given object is a function.\n * @private\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFunction = function (obj) {\n    return typeof obj === \"function\";\n};\n\n/**\n * Check of the given object is a bool.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isBool = function (obj) {\n    return typeof obj === \"boolean\";\n};\n\n/**\n * Check of the given object is a number.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNumber = function (obj) {\n    return typeof obj === \"number\";\n};\n\n/**\n * Check of the given object is an integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isInt = function (obj) {\n    return typeof obj === \"number\" && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is an unsigned integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isUint = function (obj) {\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is a string.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isString = function (obj) {\n    return typeof obj === \"string\";\n};\n\n/**\n * Check of the given object is an Array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isArray = function (obj) {\n    return obj instanceof Array;\n};\n\n/**\n * Check of the given object is an typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isTypedArray = function (obj) {\n    return obj instanceof Int8Array\n        || obj instanceof Uint8Array\n        || obj instanceof Uint8ClampedArray\n        || obj instanceof Int16Array\n        || obj instanceof Uint16Array\n        || obj instanceof Int32Array\n        || obj instanceof Uint32Array\n        || obj instanceof Float32Array\n        || obj instanceof Float64Array;\n};\n\n/**\n * Check of the given object is an array or a typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isAnyArray = function (obj) {\n    return Is.isArray(obj) || Is.isTypedArray(obj);\n};\n\n/**\n * Check of the given object is a color.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isColor = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderColor = \"\";\n    div.style.borderColor = obj;\n    return div.style.borderColor !== \"\";\n};\n\n/**\n * Check of the given object is a size.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isSize = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.width = \"\";\n    div.style.width = obj;\n    return div.style.width !== \"\";\n};\n\n/**\n * Check of the given object is an alignment.\n * @public\n * @param {string} obj - Object to evaluate.\n * @param {bool} noCenter - If true the center alignment is not valid.\n * @returns {bool}\n */\nIs.isAlignment = function (obj, noCenter) {\n    obj = obj.toLowerCase();\n    if (noCenter) {\n        return obj === \"left\" || obj === \"right\";\n    }\n    else {\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\n    }\n};\n\n/**\n * Check of the given object is a font.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFont = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style[\"font-family\"] = \"\";\n    div.style[\"font-family\"] = obj;\n    return div.style[\"font-family\"] !== \"\";\n};\n\n/**\n * Check of the given object is an composite operation.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isCompositeOperation = function (obj) {\n    obj = obj.toLowerCase();\n    return obj === \"source-over\"\n        || obj === \"source-in\"\n        || obj === \"source-out\"\n        || obj === \"source-atop\"\n        || obj === \"destination-over\"\n        || obj === \"destination-in\"\n        || obj === \"destination-out\"\n        || obj === \"destination-atop\"\n        || obj === \"lighter\"\n        || obj === \"copy\"\n        || obj === \"xor\"\n        || obj === \"multiply\"\n        || obj === \"screen\"\n        || obj === \"overlay\"\n        || obj === \"darken\"\n        || obj === \"lighten\"\n        || obj === \"color-dodge\"\n        || obj === \"color-burn\"\n        || obj === \"hard-light\"\n        || obj === \"soft-light\"\n        || obj === \"difference\"\n        || obj === \"exclusion\"\n        || obj === \"hue\"\n        || obj === \"saturation\"\n        || obj === \"color\"\n        || obj === \"luminosity\";\n};\n\nIs.isBorderWidth = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderWidth = \"\";\n    div.style.borderWidth = obj;\n    return div.style.borderWidth !== \"\";\n};\n\nIs.isBorderStyle = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderStyle = \"\";\n    div.style.borderStyle = obj;\n    return div.style.borderStyle !== \"\";\n};\n\n\n/**\n * Get a callback to evaluate if the given data is of the specified type.\n * @param {string} type\n * @returns {function]\n * }\n */\nIs.getCompareCallback = function (type) {\n    switch (type) {\n        case \"number\":\n            return Is.isNumber;\n        case \"int\":\n            return Is.isInt;\n        case \"string\":\n            return Is.isString;\n        case \"font\":\n            return Is.isFont;\n        case \"bool\":\n            return Is.isBool;\n        case \"array\":\n            return Is.isArray;\n        case \"typedArray\":\n            return Is.isTypedArray;\n        case \"anyArray\":\n            return Is.isAnyArray;\n        case \"object\":\n            return Is.isObject;\n        case \"function\":\n            return Is.isFunction;\n        case \"color\":\n            return Is.isColor;\n        case \"size\":\n            return Is.isSize;\n        case \"alignment\":\n            return Is.isAlignment;\n        case \"compositeOperation\":\n            return Is.isCompositeOperation;\n        case \"borderStyle\":\n            return Is.isBorderStyle;\n        case \"borderWidth\":\n            return Is.isBorderWidth;\n        case \"dom\":\n            return Is.isDOM;\n        case \"null\":\n            return Is.isNull;\n        default:\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\n    }\n};\n\n/**\n * Get a list of callbacks to evaluate if the given data is of the specified type.\n * @param {string} type. Separated by |\n * @returns {array<function>]}\n */\nIs.getCompareCallbacks = function (type) {\n    const callbacks = [];\n    const types = type.split(\"|\");\n    if (!types.length) {\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\n    }\n    for (let i = 0; i < types.length; ++i) {\n        callbacks.push(Is.getCompareCallback(types[i]));\n    }\n    return callbacks;\n};\n\n/**\n * True if object is of type\n * @param {string} type. Separated by |\n * @returns {bool}\n */\nIs.isOfType = function (obj, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if the array only contains items if the given type.\n * @public\n * @param {array} array - Array to check.\n * @param {string} type - Type to compare itmes against.\n * @returns {bool} - True if the array only contains items if the given type.\n */\nIs.isContent = function (array, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i = 0; i < array.length; ++i) {\n        if (!isOfType2(array[i], callbacks)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nIs.isInOptions = function (value, options) {\n    for (let i = 0; i < options.length; ++i) {\n        if (options[i] === value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default Is;\n\nfunction isOfType2(obj, callbacks) {\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @param {string} type - float or int.\n * @returns {array}\n */\nStatic.createDummyData = function (size, type) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data = [];\n    const buffer1 = new ArrayBuffer(size * 4);\n    const buffer2 = new ArrayBuffer(size * 4);\n    if (type && type.toLowerCase() === \"int\") {\n        const intY = new Uint32Array(buffer1);\n        for (let i = 0; i < size; ++i) {\n            intY[i] = i + 1;\n        }\n        data.push(intY);\n    }\n    else if (type && type.toLowerCase() === \"float\") {\n        const floatY1 = new Float32Array(buffer1);\n        const floatY2 = new Float32Array(buffer2);\n        const mult = Math.PI / 100;\n        for (let i = 0; i < size; ++i) {\n            floatY1[i] = Math.sin(i * mult) * random();\n            floatY2[i] = Math.cos(i * mult) * random();\n        }\n        data.push(floatY1);\n        data.push(floatY2);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: Can't create dummy data. Invalid type: \\\"\" + type + \"\\\"\");\n    }\n    return data;\n};\n\n/**\n * Calculate the smoothed value for a given index.\n * @public\n * @param {array} data\n * @param {int} index\n * @param {int} smoothing\n * @returns {number}\n */\nStatic.calculateSmothingValue = function (index, smoothing, data) {\n    const window = Static.getSmoothingWindow(index, smoothing, data.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += data[window.low++];\n    }\n    return sum / window.length;\n};\n\n/**\n * Get the smoothing window indices.\n * @param {int} index - Index for central value.\n * @param {int} smoothing - Smoothing value. Number of samples on each side of central value.\n * @param {int} length - Length of data set.\n * @returns {undefined}\n */\nStatic.getSmoothingWindow = function (index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return {\n        low: index - diff,\n        high: index + diff,\n        length: 2 * diff + 1\n    };\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nexport default Static;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\n/** \n * The Options class is the options and associated functions for the Graph class.\n * See setDefault() for a desciption of the possible option parameters.\n */\n\n/**\n * Create new Graph options.\n * @public\n * @constructor\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Options}\n */\nfunction Options(options) {\n    this.setDefault();\n    if (options) {\n        this.set(options);\n    }\n}\n\n/**\n * Check if the options are ok / valid.\n * @public\n * @returns {bool} - True if the options are ok.\n */\nOptions.prototype.isOk = function () {\n    return this._isOk;\n};\n\n/**\n * Get color for a data set.  Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string} - CSS color string.\n */\nOptions.prototype.getColor = function (index) {\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\n};\n\n/**\n * Get name for a data set. Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string}\n */\nOptions.prototype.getName = function (index) {\n    if (this.graph.names[index] !== undefined) {\n        return this.graph.names[index];\n    }\n    else if (index > 0) {\n        return \"DATA\" + (index);\n    }\n    else {\n        return \"X\";\n    }\n};\n\n/**\n * Get the font(family and size) for the legend label.\n * @public\n * @returns {string}\n */\nOptions.prototype.getLegendFont = function () {\n    return this.legend.size + \"px \" + this.legend.font;\n};\n\n/**\n * Get the default options object.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nOptions.getDefault = function () {\n    return {\n        debug: false,\n        interaction: {\n            resize: true,\n            trackMouse: true,\n            zoom: true,\n            smoothing: false\n        },\n        title: {\n            label: \"\",\n            bold: false,\n            size: 20,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 5,\n            font: \"verdana\",\n            color: \"black\",\n            align: \"center\"\n        },\n        legend: {\n            location: \"top\",\n            font: \"Arial\",\n            size: 15,\n            offsetX: 10,\n            offsetY: 2,\n            align: \"right\",\n            newLine: false\n        },\n        highlight: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null,\n            color: \"rgba(0, 0, 255, 0.2)\"\n        },\n        zoom: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null\n        },\n        graph: {\n            dataX: [],\n            dataY: [],\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\n            names: [],\n            dashed: [],\n            lineWidth: 1,\n            markerRadius: 0,\n            smoothing: 0,\n            simplify: 0.1,\n            simplifyBy: \"minMax\",\n            fill: false,\n            compositeOperation: \"source-over\"\n        },\n        axes: {\n            tickMarkers: {\n                show: true,\n                length: 5,\n                width: 1,\n                offset: 0,\n                color: \"#BEBEBE\"\n            },\n            tickLabels: {\n                show: true,\n                color: \"black\",\n                font: \"Arial\",\n                size: 12,\n                width: 40,\n                offset: 2\n            },\n            labels: {\n                color: \"black\",\n                font: \"verdana\",\n                size: 15,\n                offset: 3,\n                padding: 0\n            },\n            x: {\n                show: true,\n                inverted: false,\n                log: false,\n                height: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            },\n            y: {\n                show: true,\n                inverted: false,\n                log: false,\n                width: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            }\n        },\n        border: {\n            style: \"solid\",\n            color: \"black\",\n            width: \"0 0 1px 1px\"\n        },\n        spinner: {//Options regarding the spinner.\n            show: false, //Automatically show spinner when plotting data. Can always be activated manually.\n            lines: 13, //The number of lines to draw.\n            length: 30, //The length of each line.\n            width: 10, //The line thickness.\n            radius: 30, //The radius of the inner circle.\n            corners: 1, //Corner roundness (0..1).\n            rotate: 0, //The rotation offset.\n            direction: 1, //1: clockwise, -1: counterclockwise\n            color: \"black\", //#rgb or #rrggbb or array of colors\n            speed: 1, //Revolutions per second\n            trail: 50, //Afterglow percentage\n            shadow: false, //If true a shadow is rendered.\n            hwaccel: true, //If true hardware acceleration is used.\n            position: 'relative', //Position type.\n            top: \"50%\", //CenterY position relative to parent\n            left: \"50%\"         //CenterX position relative to parent\n        }\n    };\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - The options to set.\n */\nOptions.prototype.set = function (options) {\n    function setMembers(oldObj, newObj, path) {\n        for (let i in newObj) {\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\n                continue;\n            }\n            //Member is a new object. Call function recursivly.\n            if (Is.isObject(newObj[i])) {\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\n            }\n            //Member is null or a base type. Set it.\n            else {\n                oldObj[i] = newObj[i];\n            }\n        }\n    }\n    setMembers(this, options, \"\");\n\n    this._evalOptions();\n};\n\n/**\n * Sets all options to their default values.\n * @public\n */\nOptions.prototype.setDefault = function () {\n    Object.assign(this, Options.getDefault());\n    this._isOk = true;\n};\n\n/**\n * Returns true if markers are to be rendered.\n * @public\n */\nOptions.prototype.renderMarkers = function() {\n    //Can't combine markers with filled lines.\n    return this.graph.markerRadius && (!this.graph.fill || !this.graph.lineWidth);\n}\n\n/**\n * Returns true if simplify algorithm is to be used.\n * @public\n */\nOptions.prototype.renderSimplify = function() {\n    //Can't combined simplified rendering with markers.\n    return this.graph.simplify && !this.renderMarkers();\n}\n\n/**\n * Callback function for getting data value for a given index.\n * Used instead of dataX[index] and dataY[index].\n * Has built in functionality for averaging. Implicit X-values and more.\n * @callback Options~getDataCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback used to get correct X and X value data.\n * Used by the graph render function to improve performance.\n * @public\n * @param {string} axis - X or Y axis.\n * @param {int} dataIndex - The index in the data set.\n * @returns {function}\n */\nOptions.prototype.getDataCallback = function (axis, dataIndex, start) {\n    let data;\n    //X-axis.\n    if (axis.toLowerCase() === \"x\") {\n        //Has no dataX. Return index + 1.\n        if (this.graph.dataX.length === 0) {\n            return function (index) {\n                return index + 1;\n            };\n        }\n        //Have one dataX for all dataY. \n        if (this.graph.dataX.length === 1) {\n            data = this.graph.dataX[0];\n        }\n        //Have one dataX for each dataY. \n        else {\n            data = this.graph.dataX[dataIndex];\n        }\n    }\n    //Y-axis.\n    else if (axis.toLowerCase() === \"y\") {\n        data = this.graph.dataY[dataIndex];\n        //Use smoothing.\n        if (this.graph.smoothing) {\n            return this._getDataCallbackSmoothing(start, data);\n        }\n    }\n    else {\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\n    }\n    //Default\n    return function (index) {\n        return data[index];\n    };\n};\n\n/**\n * Return getDataCallback for smoothing\n * @private\n */\nOptions.prototype._getDataCallbackSmoothing = function (start, data) {\n    const centralIndex = Math.max(0, start - 1);\n    const window = Static.getSmoothingWindow(centralIndex, this.graph.smoothing, data.length);\n    let low = window.low;\n    let high = window.high;\n    let sum = 0;\n    for (let i = low; i <= high; ++i) {\n        sum += data[i];\n    }\n    const threshold = 2 * this.graph.smoothing;\n    return function (index) {\n        //Decrease window size.\n        if (high === data.length - 1) {\n            low = index + index - high;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Increase window size.\n        else if (high < threshold) {\n            high = index + index - low;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Move window.\n        else {\n            sum -= data[low];\n            ++low;\n            ++high;\n            sum += data[high];\n        }\n        //Calculate average value.\n        return sum / (high - low + 1);\n    };\n}\n\n/**\n * Evaluates the options and sets ok status flag.\n * @private\n */\nOptions.prototype._evalOptions = function () {\n    let optionsOk = true;\n    let obj, obj2, name, name2;\n    const options = this;\n    function set(path) {\n        name = path;\n        obj = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj = obj[paths[i]];\n        }\n    }\n    function set2(path) {\n        name2 = path;\n        obj2 = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj2 = obj2[paths[i]];\n        }\n    }\n    function error(msg) {\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\n        optionsOk = false;\n    }\n    function evalType(type) {\n        const res = Is.isOfType(obj, type);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of type: \" + type);\n        }\n        return res;\n    }\n    function evalEnum(values) {\n        const res = values.indexOf(obj) > -1;\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of any type: [\" + values.join(\", \") + \"].\");\n        }\n        return res;\n    }\n    function evalArrayContains(type) {\n        const res = Is.isContent(obj, type);\n        if (!res) {\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\n        }\n        return res;\n    }\n    function evalAlign(noCenter) {\n        const res = Is.isAlignment(obj, noCenter);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\n        }\n        return res;\n    }\n    function evalCond(cond) {\n        const res = eval(cond);\n        if (!res) {\n            cond = cond.replaceAll(\"obj2\", name2).trim();\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\n            cond = cond.replaceAll(\"obj\", \"\").trim();\n            if (Is.isArray(obj)) {\n                error(\"Failed condition: \" + cond);\n            }\n            else {\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\n            }\n        }\n        return res;\n    }\n\n    set(\"debug\");\n    evalType(\"bool\");\n\n    set(\"interaction\");\n    if (evalType(\"object\")) {\n        set(\"interaction.resize\");\n        evalType(\"bool\");\n\n        set(\"interaction.trackMouse\");\n        evalType(\"bool\");\n\n        set(\"interaction.zoom\");\n        evalType(\"bool\");\n\n        set(\"interaction.smoothing\");\n        evalType(\"bool\");\n    }\n\n    set(\"title\");\n    if (evalType(\"object\")) {\n        set(\"title.bold\");\n        evalType(\"bool\");\n\n        set(\"title.label\");\n        evalType(\"string\");\n\n        set(\"title.size\");\n        evalType(\"int\");\n        evalCond(\"obj > 0\");\n\n        set(\"title.offsetX\");\n        evalType(\"int\");\n\n        set(\"title.offsetY\");\n        evalType(\"int\");\n\n        set(\"title.padding\");\n        evalType(\"int\");\n\n        set(\"title.font\");\n        evalType(\"font\");\n\n        set(\"title.color\");\n        evalType(\"color\");\n\n        set(\"title.align\");\n        evalAlign();\n    }\n\n    set(\"legend\");\n    if (evalType(\"object\")) {\n        set(\"legend.location\");\n        evalType(\"string\");\n\n        set(\"legend.font\");\n        evalType(\"font\");\n\n        set(\"legend.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"legend.offsetX\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.offsetY\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.align\");\n        evalAlign(true);\n\n        set(\"legend.newLine\");\n        evalType(\"bool\");\n    }\n\n    set(\"highlight\");\n    if (evalType(\"object\")) {\n        set(\"highlight.xMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.xMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.color\");\n        evalType(\"color\");\n    }\n\n    set(\"zoom\");\n    if (evalType(\"object\")) {\n        set(\"zoom.xMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.xMax\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMax\");\n        evalType(\"number|null\");\n    }\n\n    set(\"graph\");\n    if (evalType(\"object\")) {\n        set(\"graph.dataX\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n\n            set2(\"graph.dataY\");\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\n                evalCond(\"obj.length <= obj2.length\");\n            }\n        }\n\n        set(\"graph.dataY\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n            set2(\"graph.dataX\");\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\n            if (obj2.length === 0 || obj2.length === 1) {\n                //Check so that all dataY are the same size.\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj[0].length) {\n                        error(\"Not all arrays are of the same size.\");\n                    }\n                }\n                //If dataX.length == 1. Check if same length as dataY.\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\n                    error(\"Size does not match dataX.\");\n                }\n            }\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\n            else if (obj.length === obj2.length) {\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj2[i].length) {\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\n                    }\n                }\n            }\n        }\n\n        set(\"graph.colors\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"color\");\n        }\n\n        set(\"graph.names\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"string\");\n        }\n\n        set(\"graph.dashed\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"bool|array\");\n        }\n\n        set(\"graph.lineWidth\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.markerRadius\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.smoothing\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.simplify\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"graph.simplifyBy\");\n        if (evalType(\"string\")) {\n            evalEnum([\"avg\", \"min\", \"max\", \"minMax\"]);\n        }\n\n        set(\"graph.fill\");\n        evalType(\"bool\");\n\n        set(\"graph.compositeOperation\");\n        evalType(\"compositeOperation\");\n    }\n\n    set(\"axes\");\n    if (evalType(\"object\")) {\n        set(\"axes.tickMarkers\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickMarkers.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickMarkers.length\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickMarkers.color\");\n            evalType(\"color\");\n        }\n\n        set(\"axes.tickLabels\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickLabels.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickLabels.color\");\n            evalType(\"color\");\n\n            set(\"axes.tickLabels.font\");\n            evalType(\"font\");\n\n            set(\"axes.tickLabels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        set(\"axes.labels\");\n        if (evalType(\"object\")) {\n            set(\"axes.labels.color\");\n            evalType(\"color\");\n\n            set(\"axes.labels.font\");\n            evalType(\"font\");\n\n            set(\"axes.labels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.labels.offset\");\n            evalType(\"int\");\n\n            set(\"axes.labels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        //axes x and y\n        const axes = [\"axes.x\", \"axes.y\"];\n        for (let i = 0; i < axes.length; ++i) {\n            set(axes[i]);\n            if (evalType(\"object\")) {\n                set(axes[i] + \".show\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".inverted\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".log\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\n                evalType(\"int\");\n                evalCond(\"obj >= 0\");\n\n                set(axes[i] + \".grid\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".grid.width\");\n                    evalType(\"int\");\n                    evalCond(\"obj >= 0\");\n\n                    set(axes[i] + \".grid.color\");\n                    evalType(\"color\");\n                }\n\n                set(axes[i] + \".label\");\n                evalType(\"string\");\n\n                set(axes[i] + \".bounds\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".bounds.min\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.min\");\n                    set2(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\n                        evalCond(\"obj < obj2\");\n                    }\n                }\n\n                set(axes[i] + \".numTicks\");\n                evalType(\"int\");\n\n                set(axes[i] + \".legendValueFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePreFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePostFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerLabelFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".ticker\");\n                evalType(\"function|null\");\n\n            }\n        }\n    }\n\n    set(\"border\");\n    if (evalType(\"object\")) {\n        set(\"border.style\");\n        evalType(\"borderStyle\");\n\n        set(\"border.color\");\n        evalType(\"color\");\n\n        set(\"border.width\");\n        evalType(\"borderWidth\");\n    }\n\n    set(\"spinner\");\n    if (evalType(\"object\")) {\n        set(\"spinner.show\");\n        evalType(\"bool\");\n\n        set(\"spinner.lines\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.length\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.width\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.radius\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.corners\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"spinner.rotate\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.direction\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj === -1 || obj === 1\");\n        }\n\n        set(\"spinner.color\");\n        evalType(\"color\");\n\n        set(\"spinner.speed\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.trail\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.shadow\");\n        evalType(\"bool\");\n\n        set(\"spinner.hwaccel\");\n        evalType(\"bool\");\n\n        set(\"spinner.position\");\n        if (evalType(\"string\")) {\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\n        }\n\n        set(\"spinner.top\");\n        evalType(\"size\");\n\n        set(\"spinner.left\");\n        evalType(\"size\");\n    }\n\n    this._isOk = optionsOk;\n};\n\n/**\n @typedef OPTIONS_OBJECT\n @type {object}\n\n @property {bool} debug - If true debug info will be outputted to the console.\n\n @property {object} interaction - Options regarding user interaction with the graph.\n @property {bool} resize - If true the graph will be resized automatically.\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\n @property {bool} zoom - If true zoom is enabled.\n @property {bool} smoothing - If true interactive smoothing input is enabled.\n\n @property {object} title - Options regarding the title.\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\n @property {bool} title.bold - If true the label font is bold.\n @property {int} title.size - Font height/size in pixels of the text.\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\n @property {int} title.padding - Padding in pixels. Between title and graph.\n @property {string} title.font - Font family of the text.\n @property {string} title.color - Color of the text.\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\n\n @property {object} legend - Options regarding the legend.\n @property {bool} legend.show - If true the legend is shown.\n @property {string} legend.font - Font family of the text.\n @property {int} legend.size - Font size/height in pixels.\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\n @property {int} legend.newLine -  If true a new line is made between each data set.\n\n @property {object} highlight - Options regarding highlighting.\n @property {bool} highlight.xMin - X-axis low value. \n @property {int} highlight.xMax - X-axis high value.\n @property {string} highlight.yMin - Y-axis low value.\n @property {int} highlight.yMax - Y-axis high value.\n @property {string} highlight.color - Color of the highlight.\n\n @property {object} zoom - Options regarding default zoom.\n @property {bool} zoom.xMIn - X-axis low value. \n @property {int} zoom.xMax - X-axis high value.\n @property {string} zoom.yMin - Y-axis low value.\n @property {int} zoom.yMax - Y-axis high value.\n\n @property {object} graph - Options regarding the graph curve.\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\n @property {array<string>} graph.colors - List of colors for each dataY set.\n @property {array<string>} graph.names - List of names for each dataY set.\n @property {array<string>} graph.dashed - List of dash parameters for each dataY set. true for default or number array for cusatom.\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\n @property {int} graph.markerRadius - Width in pixels of the radius of the marker.\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\n @property {int} graph.simplifyBy - Character of the simplification algorithm. 0 = minMax.\n @property {bool} graph.fill - If true the area under the graph will be filled.\n @property {string} graph.compositeOperation - Context global composit operation.\n\n @property {object} axes - Options regarding the axes.\n\n @property {object} axes.tickMarkers - Options regarding the tick markers.\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\n @property {string} axes.tickMarkers.color - Color of the tick markers.\n\n @property {object} axes.tickLabels - Options regarding the tick labels.\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\n @property {string} axes.tickLabels.color - Color of the text.\n @property {string} axes.tickLabels.font - Font family of the text.\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\n\n @property {object} axes.labels - Options regarding the axes labels.\n @property {string} axes.labels.color - Color of the text.\n @property {string} axes.labels.font - Font family of the text.\n @property {int} axes.labels.size - Font size/height in pixels of the text.\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\n\n @property {object} axes.x - Options regarding the X-axis.\n @property {bool} axes.x.show - If true the X-axis is shown.\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\n @property {string} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.x.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.x.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.x.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.x.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.x.grid - Options regarding the X-axis grid.\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.x.grid.color - Color of the grid lines.\n\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} axes.y - Options regarding the Y-axis.\n @property {bool} axes.y.show - If true the X-axis is shown.\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\n @property {string} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.y.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.y.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.y.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.y.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.y.grid.color - Color of the grid lines.\n\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} border - Options regarding the graph border.\n @property {string} border.style - Border style. solid, dotted...\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\n\n\n */\n\n/**\n * Callback function for formatting values.\n * @callback formatterCallback\n * @param {number} value\n * @returns {string}\n */\n\n/**\n * Callback function for creating ticks.\n * @callback tickerCallback\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{value:number}>}\n */\n\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\n * Used to automatically get pixel perfect canvas size \n * and to make it easier to draw simple elements.\n */\n\n/**\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\n * @public\n * @constructor\n * @param {dom} container - Container dom.\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\n * @returns {Canvas}\n */\nfunction Canvas(container, id, dontScale) {\n    this._canvas = document.createElement(\"canvas\");\n    if (id) {\n        this._canvas.id = id;\n    }\n    container.append(this._canvas);\n    this._context = this._canvas.getContext(\"2d\");\n\n    this._dontScale = dontScale;\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.margin = 0;\n    this._canvas.style.padding = 0;\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\n\n    //Set default position.\n    this.setPosition(0, 0);\n    //Fill parent div is default size.\n    this.setSize(\"100%\", \"100%\");\n}\n\n/**\n * Set a new parent for the canvas. Leave empty to only remove current parent.\n * @public\n * @param {dom} container - Container dom.\n */\nCanvas.prototype.setParent = function (container) {\n    this._canvas.remove();\n    if (container) {\n        container.append(this._canvas);\n    }\n};\n\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\n};\n\n/**\n * Get the html5 canvas.\n * @public\n * @returns {canvas}\n */\nCanvas.prototype.getCanvas = function () {\n    return this._canvas;\n};\n\n/**\n * Get the html5 2D context. Used when performance and less function calls are needed.\n * @public\n * @returns {context}\n */\nCanvas.prototype.getContext = function () {\n    return this._context;\n};\n\n/**\n * Get the x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getX = function () {\n    return this._x;\n};\n\n/**\n * Get the y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getY = function () {\n    return this._y;\n};\n\n/**\n * Get the content x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getContentX = function () {\n    return this._contentX;\n};\n\n/**\n * Get the content y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getContentY = function () {\n    return this._contentY;\n};\n\n/**\n * Get the canvas width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getWidth = function () {\n    return this._canvas.offsetWidth;\n};\n\n/**\n * Get the canvas height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getHeight = function () {\n    return this._canvas.offsetHeight;\n};\n\n/**\n * Get the canvas content width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getContentWidth = function () {\n    return this._canvas.clientWidth;\n};\n\n/**\n * Get the canvas content height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getContentHeight = function () {\n    return this._canvas.clientHeight;\n};\n\n/**\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetX = function () {\n    return this._contentOffsetX;\n};\n\n/**\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetY = function () {\n    return this._contentOffsetY;\n};\n\n\n/**\n * Get text with in pixels.\n * @public\n * @param {string} text - Text to measure.\n * @param {fontString} font - Font to use.\n * @returns {int} Width in pixels.\n */\nCanvas.prototype.getTextWidth = function (text, font) {\n    if (font) {\n        this._context.font = font;\n    }\n    return this._context.measureText(text).width;\n};\n\n/**\n * Clear canvas.\n * @public\n */\nCanvas.prototype.clear = function () {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\n    }\n};\n\n/**\n * Clear area.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(x, y, width, height);\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\n    }\n};\n\n/**\n * Set z-index.\n * @public\n * @param {int} zIndex - The new Z-index.\n */\nCanvas.prototype.setZIndex = function (zIndex) {\n    this._canvas.style[\"z-index\"] = zIndex;\n};\n\n/**\n * Set any context member.\n * @public\n * @param {string} member - Member name.\n * @param {type} value - Member value.\n */\nCanvas.prototype.set = function (member, value) {\n    this._context[member] = value;\n};\n\n/**\n * Set canvas border parameters.\n * @param {string} style\n * @param {string} color\n * @param {string} width\n */\nCanvas.prototype.setBorder = function (style, color, width) {\n    this._canvas.style.borderStyle = style;\n    this._canvas.style.borderColor = color;\n    this._canvas.style.borderWidth = width;\n    this._calculateContentPosition();\n};\n\n/**\n * Get any context member.\n * @public\n * @param {string} member - Member name.\n * @returns {type}\n */\nCanvas.prototype.get = function (member) {\n    return this._context[member];\n};\n\n/**\n * Get scale ratio.\n * @public\n * @returns {number}\n */\nCanvas.prototype.getRatio = function () {\n    return this._ratio;\n};\n\n/**\n * Rotate the canvas.\n * @public\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\n */\nCanvas.prototype.rotate = function (rotateDegrees) {\n    this._context.rotate(rotateDegrees * Math.PI / 180);\n};\n\n/**\n * Set position of canvas relative to it's parent.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n */\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\n    this._x = x;\n    this._y = y;\n    if (alignRight) {\n        this._canvas.style.left = \"\";\n        this._canvas.style.right = x + \"px\";\n    }\n    else {\n        this._canvas.style.left = x + \"px\";\n        this._canvas.style.right = \"\";\n    }\n    if (valignBottom) {\n        this._canvas.style.top = \"\";\n        this._canvas.style.bottom = y + \"px\";\n    }\n    else {\n        this._canvas.style.top = y + \"px\";\n        this._canvas.style.bottom = \"\";\n    }\n    this._calculateContentPosition();\n};\n\n/**\n * Set size of canvas. \n * @public\n * @param {int} width - Width in pixels. \n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.setSize = function (width, height) {\n    if (width !== undefined) {\n        if (typeof width === \"number\") {\n            width = width + \"px\";\n        }\n        this._canvas.style.width = width;\n    }\n    if (height !== undefined) {\n        if (typeof height === \"number\") {\n            height = height + \"px\";\n        }\n        this._canvas.style.height = height;\n    }\n    this.resize();\n};\n\n/**\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\n * @public\n */\nCanvas.prototype.resize = function () {\n    //Calculate pixel ratio.\n    const dpr = window.devicePixelRatio || 1;\n    const bsr = this._context.webkitBackingStorePixelRatio ||\n        this._context.mozBackingStorePixelRatio ||\n        this._context.msBackingStorePixelRatio ||\n        this._context.oBackingStorePixelRatio ||\n        this._context.backingStorePixelRatio || 1;\n    this._ratio = dpr / bsr;\n\n    //Update canvas.\n    this._canvas.width = this.getContentWidth() * this._ratio;\n    this._canvas.height = this.getContentHeight() * this._ratio;\n\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\n    if (!this._dontScale) {\n        this._context.scale(this._ratio, this._ratio);\n    }\n};\n\n/**\n * Draw a stroke/line rectangle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    //Line width build in both direction. Compensate coordinates.\n    x += this._context.lineWidth / 2;\n    y += this._context.lineWidth / 2;\n    width -= this._context.lineWidth;\n    height -= this._context.lineWidth;\n    this._context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 1 coordinate.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 2 coordinates.\n * @public\n * @param {int} x1 - First X-axis pixel.\n * @param {int} y1 - First Y-axis pixel.\n * @param {int} x2 - Second X-axis pixel.\n * @param {int} y2 - Second Y-axis pixel.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\n};\n\n/**\n * Draw a stroked circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n * @param {int} width - Width of stroked line.\n */\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (width) {\n        this._context.lineWidth = width;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.stroke();\n};\n\n/**\n * Draw a filled circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n */\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.fill();\n};\n\n/**\n * Draw a line.\n * @public\n * @param {int} x1 - First x-coordinate in pixels.\n * @param {int} y1 - First y-coordinate in pixels.\n * @param {int} x2 - Second x-coordinate in pixels.\n * @param {int} y2 - Second y-coordinate in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    this._context.beginPath();\n    this._context.moveTo(x1, y1);\n    this._context.lineTo(x2, y2);\n    this._context.stroke();\n};\n\n/**\n * Draw filled text.\n * @public\n * @param {string} text - Text to draw.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {string} font - Font to use.\n * @param {string} color - Color to use.\n * @param {string} align - Alignment ot use.\n * @param {string} baseline - Baseline to use.\n * @param {number} rotate - Rotate text number of degrees.\n */\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\n    if (font) {\n        this._context.font = font;\n    }\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    if (align) {\n        this._context.textAlign = align;\n    }\n    if (baseline) {\n        this._context.textBaseline = baseline;\n    }\n    if (rotate) {\n        this._context.save();\n        this._context.translate(x, y);\n        this._context.rotate(rotate * Math.PI / 180);\n        this._context.fillText(text, 0, 0);\n        this._context.restore();\n    }\n    else {\n        this._context.fillText(text, x, y);\n    }\n};\n\n/**\n * Plot graph curve.\n * @public\n * @param {array} array - Input data. [[x, y], [x, y]]\n * @param {string} color - Color of stroked line.\n * @param {int} lineWidth - Width in pixels of stroked line.\n */\nCanvas.prototype.graph = function (array, color, lineWidth) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    this._context.beginPath();\n    this._context.moveTo(array[0][0], array[0][1]);\n    for (let i = 1; i < array.length; ++i) {\n        this._context.lineTo(array[i][0], array[0][1]);\n    }\n    this._context.stroke();\n};\n\n/**\n * Fill entire canvas with the given color.\n * @public\n * @param {string} color - Color to use.\n */\nCanvas.prototype.fill = function (color) {\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\n};\n\nCanvas.prototype.disableMouseInteraction = function () {\n    this._canvas.style[\"pointer-events\"] = \"none\";\n};\n\n/**\n * Calculate content X and Y.\n * @private\n */\nCanvas.prototype._calculateContentPosition = function () {\n    const compStyle = getComputedStyle(this._canvas);\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\n    this._contentX = this._x + this._contentOffsetX;\n    this._contentY = this._y + this._contentOffsetY;\n};\n\nexport default Canvas;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\nif (!Math.log10) {\n    Math.log10 = Static.log10;\n}\n\n/** \n * The Axis class is a single axis to the Graph class.\n */\n\n/**\n * Create new graph axis.\n * @public\n * @constructor\n * @param {Options} options - GraphOptions object.\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\n * @param {string} orientation - X or Y axis.\n * @returns {Axis}\n */\nfunction Axis(options, graphCanvas, axis) {\n    if (axis.toLowerCase() === \"x\") {\n        this._isX = true;\n        this._axis = options.axes.x;\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\n    }\n    else if (axis.toLowerCase() === \"y\") {\n        this._isX = false;\n        this._axis = options.axes.y;\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\n    }\n    else {\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\n        return;\n    }\n    this._options = options;\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\n}\n\n/**\n * Returns true if all bounds are set.\n * @public\n * @returns {bool}\n */\nAxis.prototype.hasBounds = function () {\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\n};\n\n/**\n * True of this axis is logarithmic.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isLog = function () {\n    return this._axis.log;\n};\n\n/**\n * True of this axis is inverted.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isInverted = function () {\n    return this._axis.inverted;\n};\n\n/**\n * Get min bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMin = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMin)) {\n        return this._overrideMin;\n    }\n    return this._min;\n};\n\n/**\n * Get max bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMax = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMax)) {\n        return this._overrideMax;\n    }\n    return this._max;\n};\n\n/**\n * Get the axis label. Uses the options value formatter if set.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabel = function () {\n    return this._axis.label;\n};\n\n/**\n * Get the font(family and size) for the tick labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getTickLabelsFont = function () {\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\n};\n\n/**\n * Get the font(family and size) for the axes labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabelFont = function () {\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\n};\n\n/**\n * Get bounds label width in pixels. Uses the options value formatter if set.\n * @public\n * @returns {int}\n */\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\n    if (pad) {\n        bound = Static.round(bound + 0.111111111111111, 3);\n    }\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\n};\n\n/**\n * Get the ticks array.\n * @public\n * @returns {array}\n */\nAxis.prototype.getTicks = function () {\n    return this._ticks;\n};\n\n/**\n * Return true if this axis has overridden bounds.\n * @public\n */\nAxis.prototype.hasZoom = function () {\n    return !Is.isNull(this._overrideMin) || !Is.isNull(this._overrideMax);\n};\n\n/**\n * Override bounds. Temporary override user given bounds. \n * @public\n */\nAxis.prototype.zoom = function (min, max) {\n    this._overrideMin = min;\n    this._overrideMax = max;\n    if (!Is.isNull(this.getMin()) || !Is.isNull(this.getMax())) {\n        this.calculateTicks();\n    }\n};\n\n/**\n * Remove overridden bounds.\n * @public\n */\nAxis.prototype.clearZoom = function () {\n    this.zoom();\n};\n\n/**\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\n * @public\n */\nAxis.prototype.calculateBounds = function () {\n    let newMin, newMax;\n\n    //Prioritize user given bounds.\n    if (!Is.isNull(this._axis.bounds.min)) {\n        newMin = this._axis.bounds.min;\n    }\n    if (!Is.isNull(this._axis.bounds.max)) {\n        newMax = this._axis.bounds.max;\n    }\n\n    //Both bounds are not set by the user. Calculate missing.\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\n        let calcBounds;\n        if (this._isX) {\n            calcBounds = this._calculateXBounds();\n        }\n        else {\n            calcBounds = this._calculateYBounds();\n        }\n\n        if (calcBounds) {\n            //Use both calculated bounds.\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\n                newMin = calcBounds.min;\n                newMax = calcBounds.max;\n                //Both values are calculated. Move both.\n                if (newMin === newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\n                    --newMin;\n                    ++newMax;\n                }\n            }\n            //Use only calculated min.\n            else if (Is.isNull(newMin)) {\n                newMin = calcBounds.min;\n                //Only move the calculated value.\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\n                    newMin = newMax - 1;\n                }\n            }\n            //use only calculated max.\n            else if (Is.isNull(newMax)) {\n                newMax = calcBounds.max;\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\n                    newMax = newMin + 1;\n                }\n            }\n        }\n    }\n\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\n        if (this._axis.log && newMin <= 0) {\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\n            newMin = newMax = undefined;\n        }\n    }\n    this._min = newMin;\n    this._max = newMax;\n};\n\n/**\n * Calculate graph axes ticks.\n * @public\n */\nAxis.prototype.calculateTicks = function () {\n    let ticks;\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\n    //Create ticks with user given options ticker.\n    if (this._axis.ticker) {\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n    //Create ticks with the default ticker.\n    else {\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n\n    if (!ticks.length) {\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\n    }\n\n    //Update ticks with pixel coordinates.\n    for (let i = 0; i < ticks.length; ++i) {\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\n    }\n    //Show tick markers.\n    if (this._options.axes.tickMarkers.show) {\n        ticks.markers = {\n            offset: this._options.axes.tickMarkers.offset,\n            length: this._options.axes.tickMarkers.length,\n            width: this._options.axes.tickMarkers.width,\n            color: this._options.axes.tickMarkers.color\n        };\n    }\n    //Show tick labels.\n    if (this._options.axes.tickLabels.show) {\n        ticks.labels = {\n            offset: this._options.axes.tickLabels.offset,\n            size: this._options.axes.tickLabels.size,\n            color: this._options.axes.tickLabels.color,\n            font: this.getTickLabelsFont(),\n            width: []\n        };\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\n        }\n    }\n    //Show grid.\n    if (this._axis.grid.width) {\n        ticks.grid = {\n            width: this._axis.grid.width,\n            color: this._axis.grid.color\n        };\n    }\n    this._ticks = ticks;\n};\n\n/**\n * Get value from given pixel coordinate.\n * @public\n * @returns {number}\n */\nAxis.prototype.pixelToValue = function (pixel) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\n        }\n        //Logarithmic normal orientation.\n        else {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\n        }\n        //Linear normal orientation.\n        else {\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\n        }\n    }\n};\n\n/**\n * Get pixel coordinate from given value.\n * @public\n * @returns {number}\n */\nAxis.prototype.valueToPixel = function (value) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\n        }\n        //Logarithmic normal orientation.\n        else {\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\n        }\n        //Linear normal orientation.\n        else {\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\n        }\n    }\n};\n\n/**\n * Format the given value. Uses value formatter in options if available.\n * @public\n * @param {number} value\n * @returns {string}\n */\nAxis.prototype.formatLegendValue = function (value) {\n    //Use user given formatter.\n    if (this._axis.legendValueFormatter) {\n        return this._axis.legendValueFormatter(value, defaultLegendValueFormatter);\n    }\n    //Use default value formatter.\n    else {\n        return defaultLegendValueFormatter(value);\n    }\n};\n\n/**\n * Callback function for getting pixel coordinate from a given value.\n * Much faster than asking this class valueToPixel function for each value.\n * Needs to be required if window changes size or new bounds are set.\n * Safest to aquire for each render pass.\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\n * @callback Axis~valueToPixelCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback to calculate the pixel coordinate for a given value.\n * Used by the graph render function to improve performance.\n * @public\n * @returns {Axis~valueToPixelCallback}\n */\nAxis.prototype.getValueToPixelCallback = function () {\n    let num, denom, numVar, numOp, logFunc;\n    const size = this._getSize() * this._getRatio();\n\n    //Inverted X or normal Y.\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n        numVar = this.getMax();\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\n    }\n    //Normal X or inverted Y.\n    else {\n        numVar = this.getMin();\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\n    }\n\n    //Axis is logarithmic.\n    if (this._axis.log) {\n        numOp = \"/\";\n        logFunc = \"Math.log10\";\n    }\n    //Axis is linear.\n    else {\n        numOp = \"-\";\n        logFunc = \"\";\n    }\n\n    //Only do the numerator operation on the numerator if the variable is not zero.\n    if (numVar) {\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\n    }\n    else {\n        num = logFunc + \"(value)\";\n    }\n\n    //Only do the fraction if the denominator is not 1.\n    if (denom !== 1) {\n        denom = \"/ \" + denom;\n    }\n    else {\n        denom = \"\";\n    }\n\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\n};\n\n/**\n * Calculate X-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateXBounds = function () {\n    //Calculate missing X-axis bounds from dataX values.\n    if (this._options.graph.dataX.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\n        }\n        let min = 4294967296;\n        let max = -4294967296;\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\n            const data = this._options.graph.dataX[i];\n            min = Math.min(min, data[0], data[data.length - 1]);\n            max = Math.max(max, data[0], data[data.length - 1]);\n        }\n        return { min: min, max: max };\n    }\n    //Calculate X-axis bounds from dataY length.\n    else if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\n        }\n        let max = 0;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            max = Math.max(max, this._options.graph.dataY[i].length);\n        }\n        return { min: 1, max };\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\n        return;\n    }\n};\n\n/**\n * Calculate Y-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateYBounds = function () {\n    //Calculate Y-axis bounds from dataY values.\n    if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\n        }\n        let min = null;\n        let max = null;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            const data = this._options.graph.dataY[i];\n            if (data.length && min === null) {\n                min = 4294967296;\n                max = -4294967296;\n            }\n            for (let j = 0; j < data.length; ++j) {\n                min = Math.min(min, data[j]);\n                max = Math.max(max, data[j]);\n            }\n        }\n        return min !== null\n            ? { min, max }\n            : null;\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\n        return;\n    }\n};\n\n/**\n * Default get ticks funciton. Used when no ticker is set in options.\n * @private\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{number, string}>}\n */\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\n    //Pre-format ticker values.\n    if (this._axis.tickerValuePreFormatter) {\n        minValue = this._axis.tickerValuePreFormatter(minValue);\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\n    }\n\n    let ticks;\n\n    //If the range is to small even a log axis will get linear values.\n    if (isLog && maxValue - minValue >= 4 * minValue) {\n        ticks = getDefaultLogTicks(minValue, maxValue);\n    }\n    else {\n        //Max number of ticks.\n        const numTicks = this._axis.numTicks || (graphSize / (labelSize * 1.5));\n        ticks = getDefaultLinTicks(minValue, maxValue, numTicks);\n    }\n\n    //Post-format ticker values.\n    if (this._axis.tickerValuePostFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\n        }\n    }\n\n    //Add user formatted labels.\n    if (this._axis.tickerLabelFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value, defaultTickerLabelFormatter);\n        }\n    }\n    //Add default formatted labels.\n    else {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\n        }\n    }\n\n    return ticks;\n};\n\nfunction defaultLegendValueFormatter(value) {\n    return Static.round(value, 5);\n}\n\nfunction defaultTickerLabelFormatter(value) {\n    if (value < 0) {\n        return '-' + defaultTickerLabelFormatter(-value);\n    }\n    let ranges = [];\n    if (value >= 1e3) {\n        ranges = [\n            { divider: 1e24, suffix: 'Y' },\n            { divider: 1e21, suffix: 'Z' },\n            { divider: 1e18, suffix: 'E' },\n            { divider: 1e15, suffix: 'P' },\n            { divider: 1e12, suffix: 'T' },\n            { divider: 1e9, suffix: 'G' },\n            { divider: 1e6, suffix: 'M' },\n            { divider: 1e3, suffix: 'k' }\n        ];\n    }\n    else if (value < 1e-2) {\n        ranges = [\n            { divider: 1e-3, suffix: 'm' },\n            { divider: 1e-6, suffix: 'µ' },\n            { divider: 1e-9, suffix: 'n' },\n            { divider: 1e-12, suffix: 'p' },\n            { divider: 1e-15, suffix: 'f' },\n            { divider: 1e-18, suffix: 'a' },\n            { divider: 1e-21, suffix: 'z' },\n            { divider: 1e-24, suffix: 'y' }\n        ];\n    }\n    for (let i = 0; i < ranges.length; i++) {\n        if (value >= ranges[i].divider) {\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\n        }\n    }\n    return Static.round(value, 3).toString();\n}\n\n//Get linear ticks.\nfunction getDefaultLinTicks(minValue, maxValue, numTicks) {\n    //Value range\n    const range = maxValue - minValue;\n    //Get ticker value step.\n    const step = getStepValue(false, range / numTicks);\n\n    //Calculate start pos.\n    let start = minValue;\n    //Make sure start is on a step position.\n    const diff = modf(start, step);\n    if (diff > 0) {\n        start += step - diff;\n    }\n    if (diff < 0) {\n        start -= diff;\n    }\n\n    //Start and end value is the same. Just return the one value.\n    if (secureFloat(start) === secureFloat(maxValue)) {\n        return [{ value: secureFloat(start) }];\n    }\n\n    const ticks = [];\n    for (; start <= maxValue; start += step) {\n        const value = secureFloat(start);\n        ticks.push({ value });\n        //Reached infinite loop.\n        if (start === value + step) {\n            break;\n        }\n        start = value;\n    }\n    return ticks;\n}\n\n//Get logarithmic ticks.\nfunction getDefaultLogTicks(minValue, maxValue) {\n    const ticks = [];\n    let step = getStepValue(true, minValue);\n    //Make sure we always start at or before min value to get all the low end ticks.\n    if (step > minValue) {\n        step /= 10;\n    }\n    for (; ;) {\n        for (let i = 1; i < 10; ++i) {\n            const value = i * step;\n            if (value > maxValue) {\n                return ticks;\n            }\n            if (value >= minValue) {\n                ticks.push({ value: secureFloat(value) });\n            }\n        }\n        step *= 10;\n    }\n}\n\n//For a given value calculate the best step value.\nfunction getStepValue(isLog, value) {\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\n    const exp = Math.pow(10, Math.floor(log10(value)));\n    for (let i = 0; i < mult.length; ++i) {\n        const newValue = mult[i] * exp;\n        if (newValue >= value) {\n            return newValue;\n        }\n    }\n}\n\nexport default Axis;\n\n/**\n * Secure float precision.\n * @public\n * @param {number} val\n * @returns {number}\n */\nfunction secureFloat(val) {\n    return parseFloat(val.toPrecision(15));\n}\n\n/**\n * Modulus for float.\n * @public\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction modf(a, b) {\n    return a - Math.round(a / b) * b;\n}\n\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","const Simplify = {\n\n    render: function (ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify, simplifyBy) {\n        switch (simplifyBy) {\n            case \"avg\":\n                renderAvg(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify);\n                break;\n            case \"min\":\n                renderMin(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify);\n                break;\n            case \"max\":\n                renderMax(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify);\n                break;\n            case \"minMax\":\n                renderMinMax(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify);\n                break;\n        }\n    },\n\n    calculateValue: function (index, length, getDataX, getDataY, valueToPixelX, simplify, simplifyBy) {\n        switch (simplifyBy) {\n            case \"avg\":\n                return calculateAvgValue(index, length, getDataX, getDataY, valueToPixelX, simplify);\n            case \"min\":\n                return calculateMinValue(index, length, getDataX, getDataY, valueToPixelX, simplify);\n            case \"max\":\n                return calculateMaxValue(index, length, getDataX, getDataY, valueToPixelX, simplify);\n            case \"minMax\":\n                return calculateMinMaxValue(index, length, getDataX, getDataY, valueToPixelX, simplify);\n        }\n    }\n\n};\n\nexport default Simplify;\n\nfunction renderAvg(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify) {\n    const abs = Math.abs;\n    let oldX = valueToPixelX(getDataX(start));\n    let sum = getDataY(start);\n    let count = 1;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(start);\n            ++count;\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(sum / count));\n            oldX = newX;\n            sum = getDataY(start);\n            count = 1;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(sum / count));\n}\n\nfunction renderMin(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify) {\n    const abs = Math.abs;\n    const min = Math.min;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            oldX = newX;\n            minVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n}\n\nfunction renderMax(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify) {\n    const abs = Math.abs;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let maxVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(maxVal));\n            oldX = newX;\n            maxVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(maxVal));\n}\n\nfunction renderMinMax(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, simplify) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    let maxVal = minVal;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            const valueY = getDataY(start);\n            minVal = min(minVal, valueY);\n            maxVal = max(maxVal, valueY);\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            //Only add the second point if it differs from the first.\n            if (minVal !== maxVal) {\n                ctx.lineTo(oldX, valueToPixelY(maxVal));\n            }\n            oldX = newX;\n            minVal = getDataY(start);\n            maxVal = minVal;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n    if (minVal !== maxVal) {\n        ctx.lineTo(oldX, valueToPixelY(maxVal));\n    }\n}\n\nfunction calculateAvgValue(index, length, getDataX, getDataY, valueToPixelX, simplify) {\n    const abs = Math.abs;\n    const oldX = valueToPixelX(getDataX(index));\n    let sum = getDataY(index);\n    let count = 1;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    return sum / count;\n}\n\nfunction calculateMinValue(index, length, getDataX, getDataY, valueToPixelX, simplify) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return minVal;\n}\n\nfunction calculateMaxValue(index, length, getDataX, getDataY, valueToPixelX, simplify) {\n    const abs = Math.abs;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let maxVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return maxVal;\n}\n\nfunction calculateMinMaxValue(index, length, getDataX, getDataY, valueToPixelX, simplify) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    let maxVal = minVal;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    return abs(minVal) > maxVal ? minVal : maxVal;\n}","import Static from \"./Static\";\nimport Input from \"./Input\";\nimport Simplify from \"./Simplify\";\n\n/** \n * Interaction is a class that handles the user interaction for the Graph class.\n */\n\n/**\n * Create a new Interaction.\n * @public\n * @constructor\n * @param {Graph} graph - Graph instance this interaction belongs to.\n * @returns {Interaction}\n */\nfunction Interaction(graph) {\n    this._graph = graph;\n}\n\n/**\n * Update(add/remove) interaction events.\n * @public\n */\nInteraction.prototype.updateOptions = function () {\n    //Resizing.\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\n        this._resizeCallback = this._addResizeEvent();\n    }\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\n        window.removeEventListener(\"resize\", this._resizeCallback);\n        this._resizeCallback = undefined;\n    }\n\n    //Mouse tracking.\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\n    }\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\n        const canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\n        this._mouseTrackingCallbacks = undefined;\n    }\n\n    //Zooming.\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\n        this._zoomCallbacks = this._addZoomEvents();\n    }\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\n        let canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\n        canvas = this._graph._canvas.background.getCanvas();\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\n        this._zoomCallbacks = undefined;\n    }\n\n    //Smooth option.\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\n        this._smoothingCallback = this._addSmoothingEvent();\n    }\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\n        this._smoothingCallback = undefined;\n        this._smoothingInput.remove();\n        this._smoothingInput = undefined;\n    }\n\n    //Every time options are updated. Update smoothing value if available.\n    if (this._smoothingInput) {\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\n    }\n\n    this._createInteractionData();\n};\n\n/**\n * Clear interaction data.\n * @public\n */\nInteraction.prototype.clear = function () {\n    this._graph._canvas.interaction.clear();\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"none\";\n    }\n};\n\n/**\n * Render interaction data.\n * @public\n */\nInteraction.prototype.render = function () {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Inform the activity class that the graph has changed size and/or position.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\n        this._smoothingInput.style.left = x + \"px\";\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Add a resize event.\n * @private\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addResizeEvent = function () {\n    const graph = this._graph;\n    const self = this;\n    let timeOutResize;\n    //Re-plots the graph on resize end.\n    function resizeEnd() {\n        graph._canvas.background.resize();\n        graph._calculateGraphSize();\n        graph._plot();\n        timeOutResize = undefined;\n        self._resizing = false;\n    }\n    //Clear graph, hightlight and spinner features on resize start.\n    function resizeStart() {\n        self._resizing = true;\n        graph._canvas.graph.clear();\n        graph._canvas.highlight.clear();\n        graph._canvas.interaction.clear();\n        graph._renderLegend();\n    }\n    let lastWidth = this._graph._canvas.background.getWidth();\n    let lastHeight = this._graph._canvas.background.getHeight();\n    let lastPixelRatio = window.devicePixelRatio;\n    function callback() {\n        //Make sure that the size actually have changed.\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\n            lastWidth = graph._canvas.background.getWidth();\n            lastHeight = graph._canvas.background.getHeight();\n            lastPixelRatio = window.devicePixelRatio;\n            //First time the function is called for this resize event.\n            if (!timeOutResize) {\n                resizeStart();\n            }\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\n            clearTimeout(timeOutResize);\n            timeOutResize = setTimeout(resizeEnd, 500);\n        }\n    }\n\n    window.addEventListener(\"resize\", callback);\n    return callback;\n};\n\n/**\n * Add mouse tracking events.\n * @private\n * @returns {object} Object containing callbacks.\n */\n// Interaction.prototype._addMouseTrackingEvents = function () {\n//     const self = this;\n//     const graph = this._graph;\n//     function mousemove(e) {\n//         if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\n//             return;\n//         }\n//         const valueX = graph._axes.x.pixelToValue(e.offsetX);\n//         const values = [valueX];\n//         graph._canvas.interaction.clear();\n//         for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\n//             const dataY = graph._options.graph.dataY[i];\n//             //Cant track unexisting values.\n//             if (!dataY.length) {\n//                 continue;\n//             }\n//             const getDataX = graph._options.getDataCallback(\"x\", i);\n//             const res = Static.binarySearch(getDataX, dataY.length, valueX);\n//             let valueY;\n//             //Found exaxt X-value.\n//             if (res.found !== undefined) {\n//                 if (graph._options.graph.smoothing) {\n//                     valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\n//                 }\n//                 else {\n//                     valueY = dataY[res.found];\n//                 }\n//             }\n//             //Binary search returned min and max at same value without a found.\n//             //There is no matching value. Just abort.\n//             else if (res.min === res.max) {\n//                 continue;\n//             }\n//             //Calculate Y-value from min max coordinates.\n//             else {\n//                 const valueXMin = getDataX(res.min);\n//                 const valueXMax = getDataX(res.max);\n//                 const span = valueXMax - valueXMin;\n//                 const weightMin = 1 - (valueX - valueXMin) / span;\n//                 const weightMax = 1 - (valueXMax - valueX) / span;\n//                 let valueMin, valueMax;\n//                 if (graph._options.graph.smoothing) {\n//                     valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\n//                     valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\n//                 }\n//                 else {\n//                     valueMin = dataY[res.min];\n//                     valueMax = dataY[res.max];\n//                 }\n//                 valueY = valueMin * weightMin + valueMax * weightMax;\n//             }\n\n//             values[i + 1] = valueY;\n//             const pixelY = graph._axes.y.valueToPixel(valueY);\n\n//             if (isFinite(pixelY)) {\n//                 self._interactionData[i].moveTo(e.offsetX, pixelY);\n//             }\n//         }\n//         graph._renderLegend(values);\n//     }\n//     function mouseout() {\n//         if (!self.mouseDown) {\n//             graph._canvas.interaction.clear();\n//             graph._renderLegend();\n//         }\n//     }\n//     const canvas = this._graph._canvas.interaction.getCanvas();\n//     canvas.addEventListener(\"mousemove\", mousemove);\n//     canvas.addEventListener(\"mouseout\", mouseout);\n//     return { mousemove, mouseout };\n// };\n\nInteraction.prototype._addMouseTrackingEvents = function () {\n    const self = this;\n    const graph = this._graph;\n    function mousemove(e) {\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\n            return;\n        }\n        const useSimplify = graph._options.renderSimplify() && graph._options.graph.simplify > 0.1;\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\n        const values = [valueX];\n        graph._canvas.interaction.clear();\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\n            const dataY = graph._options.graph.dataY[i];\n            //Cant track unexisting values.\n            if (!dataY.length) {\n                continue;\n            }\n            const getDataX = graph._options.getDataCallback(\"x\", i);\n            const res = Static.binarySearch(getDataX, dataY.length, valueX);\n            let valueY;\n            //Found exaxt X-value.\n            if (res.found !== undefined) {\n                if (useSimplify) {\n                    const valueToPixelX = graph._axes.x.getValueToPixelCallback();\n                    const getDataY = graph._options.getDataCallback(\"y\", i, res.min);\n                    valueY = Simplify.calculateValue(res.found, dataY.length, getDataX, getDataY, valueToPixelX, graph._options.graph.simplify, graph._options.graph.simplifyBy);\n                }\n                else if (graph._options.graph.smoothing) {\n                    valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\n                }\n                else {\n                    valueY = dataY[res.found];\n                }\n            }\n            //Binary search returned min and max at same value without a found.\n            //There is no matching value. Just abort.\n            else if (res.min === res.max) {\n                continue;\n            }\n            //Calculate Y-value from min max coordinates.\n            else {\n                const valueXMin = getDataX(res.min);\n                const valueXMax = getDataX(res.max);\n                const span = valueXMax - valueXMin;\n                const weightMin = 1 - (valueX - valueXMin) / span;\n                const weightMax = 1 - (valueXMax - valueX) / span;\n                let valueMin, valueMax;\n                //Calculate using simplify.\n                if (useSimplify) {\n                    const valueToPixelX = graph._axes.x.getValueToPixelCallback();\n                    const getDataY = graph._options.getDataCallback(\"y\", i, res.min);\n                    valueMin = Simplify.calculateValue(res.min, dataY.length, getDataX, getDataY, valueToPixelX, graph._options.graph.simplify, graph._options.graph.simplifyBy);\n                    valueMax = Simplify.calculateValue(res.max, dataY.length, getDataX, getDataY, valueToPixelX, graph._options.graph.simplify, graph._options.graph.simplifyBy);\n                }\n                else if (graph._options.graph.smoothing) {\n                    valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\n                    valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\n                }\n                else {\n                    valueMin = dataY[res.min];\n                    valueMax = dataY[res.max];\n                }\n                valueY = valueMin * weightMin + valueMax * weightMax;\n            }\n\n            values[i + 1] = valueY;\n            const pixelY = graph._axes.y.valueToPixel(valueY);\n\n            if (isFinite(pixelY)) {\n                self._interactionData[i].moveTo(e.offsetX, pixelY);\n            }\n        }\n        graph._renderLegend(values);\n    }\n    function mouseout() {\n        if (!self.mouseDown) {\n            graph._canvas.interaction.clear();\n            graph._renderLegend();\n        }\n    }\n    const canvas = this._graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseout\", mouseout);\n    return { mousemove, mouseout };\n};\n\n\n/**\n * Add zoom events.\n * @private\n * @returns {object} - object containing callbacks.\n */\nInteraction.prototype._addZoomEvents = function () {\n    const graph = this._graph;\n    const self = this;\n    this.mouseDown = false;\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\n    let startX, startY;\n    //true = horizontal. false = vertical.\n    let lastHorizontal;\n    const color = \"rgba(130, 130, 130, 0.2)\";\n    let lastX, lastY;\n\n    function mousedown(e) {\n        if (e.button === 0 && graph._axes.x.hasBounds() && graph._axes.y.hasBounds()) {\n            lastX = startX = e.offsetX;\n            lastY = startY = e.offsetY;\n            self.mouseDown = true;\n            lastHorizontal = undefined;\n            graph._renderLegend();\n        }\n    }\n    function mousemove(e) {\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\n            lastX = e.offsetX;\n            lastY = e.offsetY;\n            const diffX = Math.abs(startX - e.offsetX);\n            const diffY = Math.abs(startY - e.offsetY);\n            const newHorizontal = diffX > diffY;\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\n                lastHorizontal = newHorizontal;\n            }\n            graph._canvas.interaction.clear();\n            //Mark horizontally.\n            if (lastHorizontal) {\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\n            }\n            //Mark vertically.\n            else {\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\n            }\n        }\n    }\n    function mouseup(e) {\n        if (e.button === 0 && self.mouseDown) {\n            self.mouseDown = false;\n            if (startX !== e.offsetX || startY !== e.offsetY) {\n                graph._canvas.interaction.clear();\n                //X-axis.\n                if (lastHorizontal) {\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\n                    if (startX === x) {\n                        return;\n                    }\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\n                    graph._axes.x.zoom(min, max);\n                }\n                //Y-axis.\n                else {\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\n                    if (startY === y) {\n                        return;\n                    }\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\n                    graph._axes.y.zoom(min, max);\n                }\n                graph._plot();\n            }\n        }\n    }\n    function dblclick(e) {\n        //Prevents double click from selecting the div.\n        preventDefault(e);\n        if (graph._axes.x.hasZoom() || graph._axes.y.hasZoom()) {\n            graph._axes.x.clearZoom();\n            graph._axes.y.clearZoom();\n            graph._plot();\n        }\n    }\n    function mouseout(e) {\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\n            return;\n        }\n        graph._canvas.interaction.clear();\n        self.mouseDown = false;\n    }\n\n    let canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousedown\", mousedown);\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"dblclick\", dblclick);\n\n    canvas = this._graph._canvas.background.getCanvas();\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"mouseleave\", mouseout);\n\n    return { mousedown, mousemove, mouseup, dblclick, mouseout };\n};\n\n/**\n * Add smoothing input event.\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addSmoothingEvent = function () {\n    this._smoothingInput = Input({\n        type: \"number\",\n        tabIndex: -1,\n        maxLength: 6,\n        value: 0,\n        min: 0\n    });\n    this._smoothingInput.style[\"z-index\"] = 5;\n    this._smoothingInput.style.position = \"absolute\";\n    this._smoothingInput.style.width = \"50px\";\n    this._smoothingInput.style.height = \"21px\";\n    this._smoothingInput.style[\"background-color\"] = \"white\";\n    this._smoothingInput.style[\"border-radius\"] = 0;\n    this._smoothingInput.style.border = \"1px solid #ccc\";\n    this._smoothingInput.style.color = \"#555\";\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\n    this._smoothingInput.style.display = \"none\";\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\n    this._graph._container.append(this._smoothingInput);\n    const self = this;\n    function callbackDone() {\n        let value = parseInt(self._smoothingInput.value);\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\n        let length = 4294967296;\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\n        }\n        if (2 * value + 1 > length) {\n            value = Math.floor((length - 1) / 2);\n        }\n        self._smoothingInput.value = value;\n        self._graph._options.graph.smoothing = value;\n        self._graph._renderGraph();\n    }\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\n    return callbackDone;\n};\n\n/**\n * Create interaction data.\n * @private\n */\nInteraction.prototype._createInteractionData = function () {\n    const radius = 3;\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    this._interactionData = [];\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\n        //Clear area\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\n\n        //Draw solid circle\n        ctx.beginPath();\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\n        ctx.fill();\n\n        //If fill; draw black border to increase visibility.\n        if (this._graph._options.graph.fill) {\n            ctx.beginPath();\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n            ctx.strokeStyle = \"#000000\";\n            ctx.stroke();\n        }\n\n        //Get image data from tmp context.\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\n        //Add member data.\n        const canvas = this._graph._canvas.interaction;\n        imageData.moveTo = function (x, y) {\n            canvas.putImageData(this, x, y, -radius, -radius);\n        };\n        this._interactionData[i] = imageData;\n    }\n};\n\nexport default Interaction;\n\n/**\n * Clamp the given value to the given range.\n * @param {type} min - Min value.\n * @param {type} number - Value to clamp.\n * @param {type} max - Max value.\n * @returns {Number} - Clamped value.\n */\nfunction clamp(min, number, max) {\n    if (number < min) {\n        return min;\n    }\n    else if (number > max) {\n        return max;\n    }\n    else {\n        return number;\n    }\n}\n\nfunction preventDefault(e) {\n    //Firefox, Chrome, etc.\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n    //IE\n    else {\n        e.returnValue = false;\n        e.cancelBubble = true;\n    }\n}","/*\n* @author Andreas Arvidsson\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\n */\n\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\n}\n\nimport Spinner from \"./lib/spin.min\";\nimport Canvas from \"./Canvas\";\nimport Axis from \"./Axis\";\nimport Interaction from \"./Interaction\";\nimport Static from \"./Static\";\nimport Options from \"./Options\";\nimport Is from \"./Is\";\nimport Simplify from \"./Simplify\";\n\n/** \n * The Graph class is a 2D graph plotter.\n * Built with performance and customizability in mind. Supports multiple data\n * sets and all data sets are available as typed arrays.\n */\n\n/**\n * Create new graph.\n * @public\n * @constructor\n * @param {dom|string} container - Element.  DOM or ID string. Graph will fill this element.\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Graph}\n */\nfunction Graph(container, options) {\n    if (this instanceof Graph) {\n        this._init(container, options);\n    }\n    //The new keyword was omitted.\n    else {\n        return new Graph(container, options);\n    }\n}\n\n/**\n * Get dummy dataY array.\n * @public\n * @returns {array}\n */\nGraph.createDummyData = Static.createDummyData;\n\n/**\n * Get options instance.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.prototype.getOptions = function () {\n    return this._options;\n};\n\n/**\n * Get default options.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.getDefaultOptions = Options.getDefault;\n\n/**\n * Sets all options to their default values.\n * @public\n */\nGraph.prototype.setDefaultOptions = function () {\n    this._options.setDefault();\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n */\nGraph.prototype.setOptions = function (options) {\n    this._options.set(options);\n    this._hasCalculatedGraphSize = false;\n    if (this._options.isOk()) {\n        this._axes.x.zoom(this._options.zoom.xMin, this._options.zoom.xMax);\n        this._axes.y.zoom(this._options.zoom.yMin, this._options.zoom.yMax);\n        this._axes.x.calculateBounds();\n        this._axes.y.calculateBounds();\n        this._interaction.updateOptions();\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\n        this._initLegend();\n        this._plot();\n    }\n    else {\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\n    }\n};\n\n/* ********** PRIVATE ********** */\n\n/**\n * Implementation of the constructor.\n * @private\n */\nGraph.prototype._init = function (container, options) {\n    if (typeof el === \"string\") {\n        container = document.getElementById(container);\n    }\n    if (!parent) {\n        console.error(\"owp.graph ERROR: Element dom is null\");\n        return;\n    }\n\n    container.style.position = \"relative\";\n\n    this._container = container;\n    this._options = new Options();\n\n    this._canvas = {\n        background: new Canvas(container, \"background\"),\n        graph: new Canvas(container, \"graph\", true),\n        highlight: new Canvas(container, \"highlight\"),\n        interaction: new Canvas(container, \"interaction\")\n    };\n\n    this._canvas.background.setZIndex(0);\n    this._canvas.graph.setZIndex(1);\n    this._canvas.highlight.setZIndex(2);\n    //Spinner uses zIndex 3.\n    this._canvas.interaction.setZIndex(4);\n    //Smoothing input used zIndex 5.\n\n    this._axes = {\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\n        y: new Axis(this._options, this._canvas.graph, \"y\")\n    };\n\n    this._interaction = new Interaction(this);\n\n    if (options) {\n        this.setOptions(options);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\n        this.setOptions({});\n    }\n};\n\n/**\n * Create legend canvas and attach to parent dom.\n * @private\n */\nGraph.prototype._initLegend = function () {\n    const location = this._options.legend.location;\n    if (location && this._options.interaction.trackMouse) {\n        //DIV id.\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\n            const legendDiv = document.getElementById(location);\n            if (legendDiv) {\n                legendDiv.style.position = \"relative\";\n                //Reuse existing canvas.\n                if (this._canvas.legend) {\n                    this._canvas.legend.setParent(legendDiv);\n                }\n                //Create new canvas.\n                else {\n                    this._canvas.legend = new Canvas(legendDiv);\n                }\n            }\n            else {\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\n            }\n        }\n        else {\n            //Set same parent for legend as rest of graph.\n            if (this._canvas.legend) {\n                this._canvas.legend.setParent(this._container);\n            }\n            else {\n                this._canvas.legend = new Canvas(this._container);\n                this._canvas.legend.disableMouseInteraction();\n            }\n            if (location.toLowerCase() === \"top\") {\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\n            }\n            else if (location.toLowerCase() === \"right\") {\n                this._canvas.legend.setPosition(0, 0, true);\n                this._canvas.legend.setSize(200, \"100%\");\n            }\n        }\n    }\n    //Remove old legend.\n    else if (this._canvas.legend) {\n        this._canvas.legend.setParent();\n        this._canvas.legend = undefined;\n    }\n};\n\n/**\n * Renders the legend on the background canvas.\n * @private\n */\nGraph.prototype._renderLegend = function (values) {\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\n        return;\n    }\n\n    const settings = this._options.legend;\n    const canvas = this._canvas.legend;\n    canvas.clear();\n    canvas.set(\"font\", this._options.getLegendFont());\n    canvas.set(\"textBaseline\", \"top\");\n    canvas.set(\"textAlign\", settings.align);\n\n    const isTop = settings.location.toLowerCase() === \"top\";\n    const alignLeft = settings.align.toLowerCase() === \"left\";\n    //newLine is disabled for top location.\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\n    //OffsetY is disabled for top location.\n    let y = isTop ? 0 : this._options.legend.offsetY;\n\n    function printValue(color, name, value) {\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\n        canvas.text(str, x, y, null, color);\n        if (newLine) {\n            y += settings.size;\n        }\n        else {\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\n        }\n    }\n\n    const printX = () => {\n        printValue(\n            this._options.graph.colors[0],\n            this._options.getName(0),\n            values ? this._axes.x.formatLegendValue(values[0]) : undefined\n        );\n    }\n\n    const printY = (i) => {\n        printValue(\n            this._options.graph.colors[i],\n            this._options.getName(i),\n            values ? this._axes.y.formatLegendValue(values[i]) : undefined\n        );\n    }\n\n    if (alignLeft || newLine) {\n        printX();\n        for (let i = 1; i <= this._options.graph.dataY.length; ++i) {\n            printY(i);\n        }\n    }\n    else {\n        for (let i = this._options.graph.dataY.length; i >= 1; --i) {\n            printY(i);\n        }\n        printX();\n    }\n};\n\n/**\n * Plots/draws the graph.\n * @private\n */\nGraph.prototype._plot = function () {\n    if (this._options.debug) {\n        console.time(\"owp.graph DEBUG: Plot time\");\n    }\n\n    //If graph size has not yet been calculated. Do it.\n    if (!this._hasCalculatedGraphSize) {\n        this._calculateGraphSize();\n    }\n\n    //Clear plot.\n    this._canvas.background.clear();\n    this._canvas.graph.clear();\n    this._canvas.highlight.clear();\n    this._interaction.clear();\n\n    //Render non data related features.\n    this._renderTitle();\n    this._renderAxesLabels();\n    this._renderSpin();\n\n    //Has bounds. Render bounds related features.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._renderXAxis();\n        this._renderYAxis();\n        this._renderHighlight();\n\n        //Has graph data. Render graph data.\n        if (this._options.graph.dataY.length) {\n            this._renderLegend();\n            this._renderGraph();\n            this._interaction.render();\n        }\n        else if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: No data set available. Plotting available features.\");\n        }\n    }\n    //Has neither bounds or data.\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\n    }\n\n    if (this._options.debug) {\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\n    }\n};\n\n/**\n * Render the spinner\n * @private\n */\nGraph.prototype._renderSpin = function () {\n    //Can't update options so have to remove old spinner always.\n    if (this._spinner) {\n        this._spinner.stop();\n        this._spinner = null;\n    }\n    //Show spinner\n    if (this._options.spinner.show) {\n        //Spinner div does not exist. Create it.\n        if (!this._spinnerDiv) {\n            this._spinnerDiv = document.createElement(\"div\");\n            this._spinnerDiv.style.position = \"absolute\";\n            this._spinnerDiv.style[\"z-index\"] = 3;\n            this._container.append(this._spinnerDiv);\n            this._updateSpinnerSize();\n        }\n        this._spinner = new Spinner(this._options.spinner);\n        this._spinner.spin(this._spinnerDiv);\n    }\n    //Hide spinner. Remove old div.\n    else if (this._spinnerDiv) {\n        this._spinnerDiv.remove();\n        this._spinnerDiv = null;\n    }\n}\n\n/**\n * Updates the position and size of the spinner div based on the graph canvas.\n * @private\n */\nGraph.prototype._updateSpinnerSize = function () {\n    if (this._spinnerDiv) {\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\n    }\n};\n\n/**\n * Calculate graph canvas position and size.\n * @private\n */\nGraph.prototype._calculateGraphSize = function () {\n    let x = this._getOffset([\"left\"]);\n    let y = this._getOffset([\"top\"]);\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\n\n    //Set graph canvas.\n    this._canvas.graph.setPosition(x, y);\n    this._canvas.graph.setSize(width, height);\n\n    //Convert to content space.\n    x = this._canvas.graph.getContentX();\n    y = this._canvas.graph.getContentY();\n    width = this._canvas.graph.getContentWidth();\n    height = this._canvas.graph.getContentHeight();\n\n    //Set highlight canvas.\n    this._canvas.highlight.setPosition(x, y);\n    this._canvas.highlight.setSize(width, height);\n    //Set interaction canvas.\n    this._canvas.interaction.setPosition(x, y);\n    this._canvas.interaction.setSize(width, height);\n    //Set legend canvas if available.\n    if (this._canvas.legend) {\n        if (this._options.legend.location.toLowerCase() === \"top\") {\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\n            this._canvas.legend.setSize(width, this._options.legend.size);\n        }\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\n            this._canvas.legend.setPosition(0, y, true);\n            this._canvas.legend.setSize(200, height);\n        }\n    }\n\n    //Update interaction instance.\n    this._interaction.graphChangedSize(x, y, width, height);\n\n    //Updates the spinner div size.\n    this._updateSpinnerSize();\n\n    //Calculate new ticks for the new size.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._axes.x.calculateTicks();\n        this._axes.y.calculateTicks();\n    }\n    this._hasCalculatedGraphSize = true;\n};\n\n/**\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderXAxis = function () {\n    if (!this._options.axes.x.show) {\n        return;\n    }\n    const ticks = this._axes.x.getTicks();\n    let oldX, oldWidth;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\n        //Draw tick markers.\n        if (ticks.markers) {\n            y += ticks.markers.offset;\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\n            y += ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\n            y += ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\n            oldX = x;\n            oldWidth = ticks.labels.width[i];\n        }\n    }\n};\n\n/**\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderYAxis = function () {\n    if (!this._options.axes.y.show) {\n        return;\n    }\n    const ticks = this._axes.y.getTicks();\n    let oldY;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getX();\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\n        //Draw tick markers.\n        if (ticks.markers) {\n            x -= ticks.markers.offset;\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\n            x -= ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\n            x -= ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\n            oldY = y;\n        }\n    }\n};\n\n/**\n * Renders the axes(x and y) labels on the background canvas.\n * @private\n */\nGraph.prototype._renderAxesLabels = function () {\n    //Draw X label.\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\n    }\n    //Draw Y label.\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\n        const x = this._options.axes.labels.offset;\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\n    }\n};\n\n/**\n * Renders the graph title on the background canvas.\n * @private\n */\nGraph.prototype._renderTitle = function () {\n    if (!this._options.title.label.length) {\n        return;\n    }\n    let x;\n    if (this._options.title.align.toLowerCase() === \"left\") {\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"center\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"right\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\n    }\n    const y = this._options.title.offsetY;\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\n};\n\n/**\n * Renders the highligted area on the highligh canvas.\n * @private\n */\nGraph.prototype._renderHighlight = function () {\n    this._canvas.highlight.clear();\n    const h = this._options.highlight;\n    if (Is.isNull(h.xMin) && Is.isNull(h.xMax) && Is.isNull(h.yMin) && Is.isNull(h.yMax)) {\n        return;\n    }\n    //Convert values to pixels.\n    const x1 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMin) ? this._axes.x.getMin() : h.xMin\n    );\n    const x2 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMax) ? this._axes.x.getMax() : h.xMax\n    );\n    const y1 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMin) ? this._axes.y.getMin() : h.yMin\n    );\n    const y2 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMax) ? this._axes.y.getMax() : h.yMax\n    );\n    this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, h.color);\n};\n\n/**\n * Renders the graph curve on the graph canvas.\n * @private\n */\nGraph.prototype._renderGraph = function () {\n    if (this._options.debug && this._options.graph.smoothing > 1) {\n        console.debug(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\n    }\n    if (this._options.debug && this._options.graph.simplify) {\n        console.debug(`owp.graph DEBUG: Simplify rendering: ${this._options.graph.simplify} ${this._options.graph.simplifyBy}`);\n    }\n\n    //Clear old data so we can draw new.\n    this._canvas.graph.clear();\n    //Get value to pixel functions.\n    const valueToPixelX = this._axes.x.getValueToPixelCallback();\n    const valueToPixelY = this._axes.y.getValueToPixelCallback();\n    //Value bounds        \n    const min = this._axes.x.getMin();\n    const max = this._axes.x.getMax();\n    //Render parameters\n    const fillGraph = this._options.graph.fill;\n    const renderLine = !!this._options.graph.lineWidth;\n    //Get canvas context directly for increased performance.\n    const ctx = this._canvas.graph.getContext();\n    ctx.lineWidth = this._options.graph.lineWidth;\n    ctx.globalCompositeOperation = this._options.graph.compositeOperation;\n\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n        //Aquire callback for getting X-axis data values.\n        const getDataX = this._options.getDataCallback(\"x\", i);\n        //Find start and end indicies.\n        const length = this._options.graph.dataY[i].length;\n        const bsMin = Static.binarySearch(getDataX, length, min);\n        const bsMax = Static.binarySearch(getDataX, length, max);\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\n        //Aquire callback for getting Y-axis data values.\n        const getDataY = this._options.getDataCallback(\"y\", i, start);\n        //Start path.\n        ctx.beginPath();\n\n        //Render simplified data set. Can't combine with markers\n        if (this._options.renderSimplify()) {\n            Simplify.render(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, this._options.graph.simplify, this._options.graph.simplifyBy);\n        }\n        //Render full data set.\n        else {\n            this._renderFull(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, renderLine);\n        }\n\n        //Fill graph.\n        if (fillGraph) {\n            this._renderFill(ctx, i, renderLine);\n        }\n        //Stroke line.\n        else {\n            this._renderStroke(ctx, i);\n        }\n    }\n};\n\nGraph.prototype._renderFull = function (ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end, renderLine) {\n    const circleAngle = 2 * Math.PI;\n    const renderMarkers = this._options.renderMarkers();\n    const markerRadius = this._options.graph.markerRadius;\n    //Render line and markers\n    if (renderLine && renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.lineTo(x, y);\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n            ctx.moveTo(x, y);\n        }\n    }\n    //Render only line\n    else if (renderLine) {\n        for (; start <= end; ++start) {\n            ctx.lineTo(\n                valueToPixelX(getDataX(start)),\n                valueToPixelY(getDataY(start))\n            );\n        }\n    }\n    //Render only markers\n    else if (renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n        }\n    }\n};\n\nGraph.prototype._renderFill = function (ctx, channelIndex, renderLine) {\n    if (renderLine) {\n        if (this._options.axes.x.inverted) {\n            ctx.lineTo(0, this._canvas.graph.getContentHeight());\n            ctx.lineTo(this._canvas.graph.getContentWidth(), this._canvas.graph.getContentHeight());\n        }\n        else {\n            ctx.lineTo(this._canvas.graph.getContentWidth() * this._canvas.graph.getRatio(), this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n            ctx.lineTo(0, this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n        }\n        ctx.closePath();\n    }\n    ctx.fillStyle = this._options.getColor(channelIndex + 1);\n    ctx.fill();\n};\n\nGraph.prototype._renderStroke = function (ctx, channelIndex) {\n    //Set dashed options\n    if (this._options.graph.dashed[channelIndex]) {\n        let pattern = this._options.graph.dashed[channelIndex];\n        if (pattern === true) {\n            pattern = [5, 8];\n        }\n        ctx.setLineDash(pattern);\n    }\n    else {\n        ctx.setLineDash([]);\n    }\n\n    ctx.strokeStyle = this._options.getColor(channelIndex + 1);\n    ctx.stroke();\n};\n\n/**\n * Get offset for the given paramters.\n * @private\n */\nGraph.prototype._getOffset = function (array) {\n    let offset = 0;\n    for (let i = 0; i < array.length; ++i) {\n        switch (array[i]) {\n            case \"top\":\n                if (this._options.title.label.length) {\n                    offset += this._options.title.size;\n                    offset += this._options.title.offsetY;\n                    offset += this._options.title.padding;\n                }\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"bottom\":\n                if (this._options.axes.x.show) {\n                    if (this._options.axes.x.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.x.height) {\n                        offset += this._options.axes.x.height;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            offset += this._options.axes.tickLabels.size;\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"left\":\n                if (this._options.axes.y.show) {\n                    if (this._options.axes.y.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.y.width) {\n                        offset += this._options.axes.y.width;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\n                }\n                break;\n            case \"right\":\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\n                    offset += this._canvas.legend.getWidth();\n                }\n                else {\n                    const defaultOffset = 20;\n                    let boundOffset = 0;\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\n                    }\n                    offset += Math.max(defaultOffset, boundOffset);\n                }\n                break;\n        }\n    }\n    return Math.round(offset);\n};\n\nexport default Graph;"],"sourceRoot":""}