{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","obj","HTMLElement","isArray","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isTypedArray","div","document","createElement","style","borderColor","width","noCenter","toLowerCase","borderWidth","borderStyle","type","isNumber","isInt","isString","isBool","isAnyArray","isObject","isFunction","isColor","isSize","isAlignment","isCompositeOperation","isBorderStyle","isBorderWidth","isDOM","Error","callbacks","types","split","length","push","getCompareCallback","array","compareCallback","options","Static","size","seed","random","Math","sin","floor","data","buffer1","ArrayBuffer","buffer2","intY","floatY1","floatY2","mult","PI","cos","console","warn","index","smoothing","getSmoothingWindow","sum","low","high","diffToMin","max","diffToMax","diff","min","dataCallback","mid","found","context","getContext","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","Options","this","_isOk","_createMembers","set","getDefault","isOk","getColor","graph","colors","getName","undefined","names","getLegendFont","legend","debug","interaction","resize","trackMouse","zoom","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","dataX","dataY","lineWidth","simplify","fill","compositeOperation","axes","tickMarkers","show","offset","tickLabels","labels","x","inverted","log","height","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","path","_evalOptions","getDataCallback","axis","dataIndex","start","_getDataCallbackSmoothing","error","centralIndex","threshold","optionsOk","obj2","name2","paths","set2","msg","evalObject","res","evalBool","evalNumber","evalInt","evalString","evalArray","evalFunction","evalAlign","evalColor","evalFont","evalSize","evalBorderStyle","evalBorderWidth","evalCompositeOperation","evalArrayContains","isContent","evalCond","cond","eval","replaceAll","trim","isNull","b","arguments","appendChild","e","join","f","g","h","j","substring","indexOf","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","parent","id","dontScale","_parent","_canvas","append","_context","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","_isX","_axis","_getSize","_options","_getRatio","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","log10","newValue","hasBounds","getMin","getMax","isInverted","_overrideBounds","_min","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasOverridenBounds","overrideBounds","calculateTicks","clearOverridenBounds","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","canvas","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","highlight","_renderLegend","mouseMoveCallback","mouseDown","_axes","valueX","values","dataXCallback","binarySearch","valueY","calculateSmothingValue","valueXMin","valueXMax","span","weightMin","weightMax","valueMin","valueMax","pixelY","_interactionData","mouseOutCallback","startX","startY","lastHorizontal","lastX","lastY","callbackMouseDown","callbackMouseMove","diffX","abs","diffY","newHorizontal","callbackMouseUp","clamp","callbackDoubleClick","preventDefault","returnValue","cancelBubble","callbackMouseOut","toElement","tabIndex","maxLength","callbackDone","_renderGraph","ctx","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","_highlights","_interaction","setOptions","_initLegend","legendDiv","getElementById","settings","isTop","alignLeft","printValue","str","getOptions","setDefaultOptions","_hasCalculatedGraphSize","setData","resetZoom","clearHighlight","_renderHighlight","doSpin","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","isSpinning","time","_renderTitle","_renderAxesLabels","_renderXAxis","_renderYAxis","timeEnd","_getOffset","oldX","oldWidth","oldY","valueToPixelX","valueToPixelY","globalCompositeOperation","getDataX","bsMin","bsMax","end","getDataY","newX","minVal","maxVal","closePath","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset","createDummyData","getDefaultOptions"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\r\n\r\n/**\r\n * Check if the given object is a DOM element.\r\n * @param {object} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isDOM = function (obj) {\r\n    return obj instanceof HTMLElement;\r\n};\r\n\r\n/**\r\n * Check of the given object is null or undefined.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isNull = function (obj) {\r\n    return obj === undefined || obj === null;\r\n};\r\n\r\n/**\r\n * Check of the given object is a object.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isObject = function (obj) {\r\n    return obj !== null && typeof obj === 'object' && !Is.isArray(obj);\r\n};\r\n\r\n/**\r\n * Check of the given object is a function.\r\n * @private\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isFunction = function (obj) {\r\n    return typeof obj === \"function\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a bool.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isBool = function (obj) {\r\n    return typeof obj === \"boolean\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a number.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isNumber = function (obj) {\r\n    return typeof obj === \"number\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an integer.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isInt = function (obj) {\r\n    return typeof obj === \"number\" && obj % 1 === 0;\r\n};\r\n\r\n/**\r\n * Check of the given object is an unsigned integer.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isUint = function (obj) {\r\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\r\n};\r\n\r\n/**\r\n * Check of the given object is a string.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isString = function (obj) {\r\n    return typeof obj === \"string\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an Array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isArray = function (obj) {\r\n    return obj instanceof Array;\r\n};\r\n\r\n/**\r\n * Check of the given object is an typed array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isTypedArray = function (obj) {\r\n    return obj instanceof Int8Array\r\n        || obj instanceof Uint8Array\r\n        || obj instanceof Uint8ClampedArray\r\n        || obj instanceof Int16Array\r\n        || obj instanceof Uint16Array\r\n        || obj instanceof Int32Array\r\n        || obj instanceof Uint32Array\r\n        || obj instanceof Float32Array\r\n        || obj instanceof Float64Array;\r\n};\r\n\r\n/**\r\n * Check of the given object is an array or a typed array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isAnyArray = function (obj) {\r\n    return Is.isArray(obj) || Is.isTypedArray(obj);\r\n};\r\n\r\n/**\r\n * Check of the given object is a color.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isColor = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderColor = \"\";\r\n    div.style.borderColor = obj;\r\n    return div.style.borderColor !== \"\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a size.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isSize = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.width = \"\";\r\n    div.style.width = obj;\r\n    return div.style.width !== \"\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an alignment.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @param {bool} noCenter - If true the center alignment is not valid.\r\n * @returns {bool}\r\n */\r\nIs.isAlignment = function (obj, noCenter) {\r\n    obj = obj.toLowerCase();\r\n    if (noCenter) {\r\n        return obj === \"left\" || obj === \"right\";\r\n    } else {\r\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\r\n    }\r\n};\r\n\r\n/**\r\n * Check of the given object is an composite operation.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isCompositeOperation = function (obj) {\r\n    obj = obj.toLowerCase();\r\n    return obj === \"source-over\"\r\n        || obj === \"source-in\"\r\n        || obj === \"source-out\"\r\n        || obj === \"source-atop\"\r\n        || obj === \"destination-over\"\r\n        || obj === \"destination-in\"\r\n        || obj === \"destination-out\"\r\n        || obj === \"destination-atop\"\r\n        || obj === \"lighter\"\r\n        || obj === \"copy\"\r\n        || obj === \"xor\"\r\n        || obj === \"multiply\"\r\n        || obj === \"screen\"\r\n        || obj === \"overlay\"\r\n        || obj === \"darken\"\r\n        || obj === \"lighten\"\r\n        || obj === \"color-dodge\"\r\n        || obj === \"color-burn\"\r\n        || obj === \"hard-light\"\r\n        || obj === \"soft-light\"\r\n        || obj === \"difference\"\r\n        || obj === \"exclusion\"\r\n        || obj === \"hue\"\r\n        || obj === \"saturation\"\r\n        || obj === \"color\"\r\n        || obj === \"luminosity\";\r\n};\r\n\r\nIs.isBorderWidth = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderWidth = \"\";\r\n    div.style.borderWidth = obj;\r\n    return div.style.borderWidth !== \"\";\r\n};\r\n\r\nIs.isBorderStyle = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderStyle = \"\";\r\n    div.style.borderStyle = obj;\r\n    return div.style.borderStyle !== \"\";\r\n};\r\n\r\n\r\n/**\r\n * Get a callback to evaluate if the given data is of the specified type.\r\n * @param {string} type\r\n * @returns {function]\r\n * }\r\n */\r\nIs.getCompareCallback = function (type) {\r\n    switch (type) {\r\n        case \"number\":\r\n            return Is.isNumber;\r\n        case \"int\":\r\n            return Is.isInt;\r\n        case \"string\":\r\n            return Is.isString;\r\n        case \"bool\":\r\n            return Is.isBool;\r\n        case \"array\":\r\n            return Is.isArray;\r\n        case \"typedArray\":\r\n            return Is.isTypedArray;\r\n        case \"anyArray\":\r\n            return Is.isAnyArray;\r\n        case \"object\":\r\n            return Is.isObject;\r\n        case \"function\":\r\n            return Is.isFunction;\r\n        case \"color\":\r\n            return Is.isColor;\r\n        case \"size\":\r\n            return Is.isSize;\r\n        case 'alignment':\r\n            return Is.isAlignment;\r\n        case 'compositeOperation':\r\n            return Is.isCompositeOperation;\r\n        case 'borderStyle':\r\n            return Is.isBorderStyle;\r\n        case 'borderWidth':\r\n            return Is.isBorderWidth;\r\n        case 'dom':\r\n            return Is.isDOM;\r\n        default:\r\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\r\n    }\r\n};\r\n\r\n/**\r\n * Get a list of callbacks to evaluate if the given data is of the specified type.\r\n * @param {string} type. Separated by |\r\n * @returns {array<function>]}\r\n */\r\nIs.getCompareCallbacks = function (type) {\r\n    var callbacks = [];\r\n    var types = type.split(\"|\");\r\n    if (!types.length) {\r\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\r\n    }\r\n    for (var i = 0; i < types.length; ++i) {\r\n        callbacks.push(Is.getCompareCallback(types[i]));\r\n    }\r\n    return callbacks;\r\n};\r\n\r\n/**\r\n * Check if the array only contains items if the given type.\r\n * @public\r\n * @param {array} array - Array to check.\r\n * @param {string} type - Type to compare itmes against.\r\n * @returns {bool} - True if the array only contains items if the given type.\r\n */\r\nIs.isContent = function (array, type) {\r\n    var compareCallback = Is.getCompareCallback(type);\r\n    for (var i = 0; i < array.length; ++i) {\r\n        if (!compareCallback(array[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nIs.isInOptions = function (value, options) {\r\n    for (var i = 0; i < options.length; ++i) {\r\n        if (options[i] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport default Is;\r\n","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @param {string} type - float or int.\n * @returns {array}\n */\nStatic.createDummyData = function (size, type) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data = [];\n    const buffer1 = new ArrayBuffer(size * 4);\n    const buffer2 = new ArrayBuffer(size * 4);\n    if (type && type.toLowerCase() === \"int\") {\n        const intY = new Uint32Array(buffer1);\n        for (let i = 0; i < size; ++i) {\n            intY[i] = i + 1;\n        }\n        data.push(intY);\n    }\n    else if (type && type.toLowerCase() === \"float\") {\n        const floatY1 = new Float32Array(buffer1);\n        const floatY2 = new Float32Array(buffer2);\n        const mult = Math.PI / 100;\n        for (let i = 0; i < size; ++i) {\n            floatY1[i] = Math.sin(i * mult) * random();\n            floatY2[i] = Math.cos(i * mult) * random();\n        }\n        data.push(floatY1);\n        data.push(floatY2);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: Can't create dummy data. Invalid type: \\\"\" + type + \"\\\"\");\n    }\n    return data;\n};\n\n/**\n * Calculate the smoothed value for a given index.\n * @public\n * @param {array} data\n * @param {int} index\n * @param {int} smoothing\n * @returns {number}\n */\nStatic.calculateSmothingValue = function (index, smoothing, data) {\n    const window = Static.getSmoothingWindow(index, smoothing, data.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += data[window.low++];\n    }\n    return sum / window.length;\n};\n\n/**\n * Get the smoothing window indices.\n * @param {int} index - Index for central value.\n * @param {int} smoothing - Smootrhing value. Number of samples on each side of central value.\n * @param {int} length - Length of data set.\n * @returns {undefined}\n */\nStatic.getSmoothingWindow = function (index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return { low: index - diff, high: index + diff, length: 2 * diff + 1 };\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nexport default Static;","import Static from \"./Static\";\r\nimport Is from \"./Is\";\r\n\r\n/** \r\n * The Options class is the options and associated functions for the Graph class.\r\n * See setDefault() for a desciption of the possible option parameters.\r\n */\r\n\r\n/**\r\n * Create new Graph options.\r\n * @public\r\n * @constructor\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n * @returns {Options}\r\n */\r\nfunction Options(options) {\r\n    this._isOk = true;\r\n    this._createMembers();\r\n    this.set(Options.getDefault());\r\n    if (options) {\r\n        this.set(options);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the options are ok / valid.\r\n * @public\r\n * @returns {bool} - True if the options are ok.\r\n */\r\nOptions.prototype.isOk = function () {\r\n    return this._isOk;\r\n};\r\n\r\n/**\r\n * Get color for a data set.  Index = 0 is X axis.\r\n * @public\r\n * @param {int} index - Index of the data set.\r\n * @returns {string} - CSS color string.\r\n */\r\nOptions.prototype.getColor = function (index) {\r\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\r\n};\r\n\r\n/**\r\n * Get name for a data set. Index = 0 is X axis.\r\n * @public\r\n * @param {int} index - Index of the data set.\r\n * @returns {string}\r\n */\r\nOptions.prototype.getName = function (index) {\r\n    if (this.graph.names[index] !== undefined) {\r\n        return this.graph.names[index];\r\n    } \r\n    else if (index > 0) {\r\n        return \"DATA\" + (index);\r\n    } \r\n    else {\r\n        return \"X\";\r\n    }\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the legend label.\r\n * @public\r\n * @returns {string}\r\n */\r\nOptions.prototype.getLegendFont = function () {\r\n    return this.legend.size + \"px \" + this.legend.font;\r\n};\r\n\r\n/**\r\n * Get the default options object.\r\n * @public\r\n * @returns {OPTIONS_OBJECT}\r\n */\r\nOptions.getDefault = function () {\r\n    return {\r\n        debug: false,\r\n        interaction: {\r\n            resize: true,\r\n            trackMouse: true,\r\n            zoom: true,\r\n            smoothing: false\r\n        },\r\n        title: {\r\n            label: \"\",\r\n            bold: false,\r\n            size: 20,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            padding: 5,\r\n            font: \"verdana\",\r\n            color: \"black\",\r\n            align: \"center\"\r\n        },\r\n        legend: {\r\n            location: \"top\",\r\n            font: \"Arial\",\r\n            size: 15,\r\n            offsetX: 10,\r\n            offsetY: 2,\r\n            align: \"right\",\r\n            newLine: false\r\n        },\r\n        graph: {\r\n            dataX: [],\r\n            dataY: [],\r\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\r\n            names: [],\r\n            lineWidth: 1,\r\n            smoothing: 0,\r\n            simplify: 0.1,\r\n            fill: false,\r\n            compositeOperation: \"source-over\"\r\n        },\r\n        axes: {\r\n            tickMarkers: {\r\n                show: true,\r\n                length: 5,\r\n                width: 1,\r\n                offset: 0,\r\n                color: \"#BEBEBE\"\r\n            },\r\n            tickLabels: {\r\n                show: true,\r\n                color: \"black\",\r\n                font: \"Arial\",\r\n                size: 12,\r\n                width: 40,\r\n                offset: 2\r\n            },\r\n            labels: {\r\n                color: \"black\",\r\n                font: \"verdana\",\r\n                size: 15,\r\n                offset: 3,\r\n                padding: 0\r\n            },\r\n            x: {\r\n                show: true,\r\n                inverted: false,\r\n                log: false,\r\n                height: 0,\r\n                label: \"\",\r\n                legendValueFormatter: null,\r\n                tickerValuePreFormatter: null,\r\n                tickerValuePostFormatter: null,\r\n                tickerLabelFormatter: null,\r\n                ticker: null,\r\n                grid: {\r\n                    width: 1,\r\n                    color: \"#BEBEBE\"\r\n                },\r\n                bounds: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            y: {\r\n                show: true,\r\n                inverted: false,\r\n                log: false,\r\n                width: 0,\r\n                label: \"\",\r\n                legendValueFormatter: null,\r\n                tickerValuePreFormatter: null,\r\n                tickerValuePostFormatter: null,\r\n                tickerLabelFormatter: null,\r\n                ticker: null,\r\n                grid: {\r\n                    width: 1,\r\n                    color: \"#BEBEBE\"\r\n                },\r\n                bounds: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            }\r\n        },\r\n        border: {\r\n            style: \"solid\",\r\n            color: \"black\",\r\n            width: \"0 0 1px 1px\"\r\n        },\r\n        spinner: {//Options regarding the spinner.\r\n            show: true, //Automatically show spinner when plotting data. Can always be activated manually.\r\n            lines: 13, //The number of lines to draw.\r\n            length: 30, //The length of each line.\r\n            width: 10, //The line thickness.\r\n            radius: 30, //The radius of the inner circle.\r\n            corners: 1, //Corner roundness (0..1).\r\n            rotate: 0, //The rotation offset.\r\n            direction: 1, //1: clockwise, -1: counterclockwise\r\n            color: \"black\", //#rgb or #rrggbb or array of colors\r\n            speed: 1, //Revolutions per second\r\n            trail: 50, //Afterglow percentage\r\n            shadow: false, //If true a shadow is rendered.\r\n            hwaccel: true, //If true hardware acceleration is used.\r\n            position: 'relative', //Position type.\r\n            top: \"50%\", //CenterY position relative to parent\r\n            left: \"50%\"         //CenterX position relative to parent\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Set new options.\r\n * @public\r\n * @param {OPTIONS_OBJECT} options - The options to set.\r\n */\r\nOptions.prototype.set = function (options) {\r\n    function setMembers(oldObj, newObj, path) {\r\n        for (let i in newObj) {\r\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\r\n                //            if (!Array.isArray(oldObj) && !oldObj.hasOwnProperty(i)) { TODO\r\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\r\n                continue;\r\n            }\r\n            //Member is a new object. Call function recursivly.\r\n            if (Is.isObject(newObj[i])) {\r\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\r\n            }\r\n            //Member is null or a base type. Set it.\r\n            else {\r\n                oldObj[i] = newObj[i];\r\n            }\r\n        }\r\n    }\r\n    setMembers(this, options, \"\");\r\n\r\n    this._evalOptions();\r\n};\r\n\r\n/**\r\n * Callback function for getting data value for a given index.\r\n * Used instead of dataX[index] and dataY[index].\r\n * Has built in functionality for averaging. Implicit X-values and more.\r\n * @callback Options~getDataCallback\r\n * @param {int} index\r\n * @returns {number}\r\n */\r\n\r\n/**\r\n * Get a callback used to get correct X and X value data.\r\n * Used by the graph render function to improve performance.\r\n * @public\r\n * @param {string} axis - X or Y axis.\r\n * @param {int} dataIndex - The index in the data set.\r\n * @returns {function}\r\n */\r\nOptions.prototype.getDataCallback = function (axis, dataIndex, start) {\r\n    let data;\r\n    //X-axis.\r\n    if (axis.toLowerCase() === \"x\") {\r\n        //Has no dataX. Return index + 1.\r\n        if (this.graph.dataX.length === 0) {\r\n            return function (index) {\r\n                return index + 1;\r\n            };\r\n        }\r\n        //Have one dataX for all dataY. \r\n        if (this.graph.dataX.length === 1) {\r\n            data = this.graph.dataX[0];\r\n        }\r\n        //Have one dataX for each dataY. \r\n        else {\r\n            data = this.graph.dataX[dataIndex];\r\n        }\r\n    }\r\n    //Y-axis.\r\n    else if (axis.toLowerCase() === \"y\") {\r\n        data = this.graph.dataY[dataIndex];\r\n        //Use smoothing.\r\n        if (this.graph.smoothing) {\r\n            return this._getDataCallbackSmoothing(start, data);\r\n        }\r\n    }\r\n    else {\r\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\r\n    }\r\n    //Default\r\n    return function (index) {\r\n        return data[index];\r\n    };\r\n};\r\n\r\n/**\r\n * Return getDataCallback for smoothing\r\n * @private\r\n */\r\nOptions.prototype._getDataCallbackSmoothing = function (start, data) {\r\n    const centralIndex = Math.max(0, start - 1);\r\n    const window = Static.getSmoothingWindow(centralIndex, this.graph.smoothing, data.length);\r\n    let low = window.low;\r\n    let high = window.high;\r\n    let sum = 0;\r\n    for (let i = low; i <= high; ++i) {\r\n        sum += data[i];\r\n    }\r\n    const threshold = 2 * this.graph.smoothing;\r\n    return function (index) {\r\n        //Decrease window size.\r\n        if (high === data.length - 1) {\r\n            low = index + index - high;\r\n            sum = 0;\r\n            for (let i = low; i <= high; ++i) {\r\n                sum += data[i];\r\n            }\r\n        }\r\n        //Increase window size.\r\n        else if (high < threshold) {\r\n            high = index + index - low;\r\n            sum = 0;\r\n            for (let i = low; i <= high; ++i) {\r\n                sum += data[i];\r\n            }\r\n        }\r\n        //Move window.\r\n        else {\r\n            sum -= data[low];\r\n            ++low;\r\n            ++high;\r\n            sum += data[high];\r\n        }\r\n        //Calculate average value.\r\n        return sum / (high - low + 1);\r\n    };\r\n}\r\n\r\n/**\r\n * Evaluates the options and sets ok status flag.\r\n * @private\r\n */\r\nOptions.prototype._evalOptions = function () {\r\n    var optionsOk = true;\r\n    var obj, obj2, name, name2;\r\n    var options = this;\r\n    function set(path) {\r\n        name = path;\r\n        obj = options;\r\n        var paths = path.split(\".\");\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            obj = obj[paths[i]];\r\n        }\r\n    }\r\n    function set2(path) {\r\n        name2 = path;\r\n        obj2 = options;\r\n        var paths = path.split(\".\");\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            obj2 = obj2[paths[i]];\r\n        }\r\n    }\r\n    function error(msg) {\r\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\r\n        optionsOk = false;\r\n    }\r\n    function evalObject() {\r\n        var res = Is.isObject(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an object.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBool() {\r\n        var res = Is.isBool(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a bool.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalNumber() {\r\n        var res = Is.isNumber(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a number.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalInt() {\r\n        var res = Is.isInt(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an integer.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalString() {\r\n        var res = Is.isString(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a string.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalArray() {\r\n        var res = Is.isArray(obj);\r\n        res = true;\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an array.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalFunction() {\r\n        var res = Is.isFunction(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a function.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalAlign(noCenter) {\r\n        var res = Is.isAlignment(obj, noCenter);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalColor() {\r\n        var res = Is.isColor(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid color.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalFont() {\r\n        var res = Is.isString(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid font.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalSize() {\r\n        var res = Is.isSize(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid size.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBorderStyle() {\r\n        var res = Is.isBorderStyle(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid border style.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBorderWidth() {\r\n        var res = Is.isBorderWidth(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid border width.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalCompositeOperation() {\r\n        var res = Is.isCompositeOperation(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a composite operation.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalArrayContains(type) {\r\n        var res = Is.isContent(obj, type);\r\n        if (!res) {\r\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalCond(cond) {\r\n        var res = eval(cond);\r\n        if (!res) {\r\n            cond = cond.replaceAll(\"obj2\", name2).trim();\r\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\r\n            cond = cond.replaceAll(\"obj\", \"\").trim();\r\n            if (Is.isArray(obj)) {\r\n                error(\"Failed condition: \" + cond);\r\n            } \r\n            else {\r\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    set(\"debug\");\r\n    evalBool();\r\n\r\n    set(\"interaction\");\r\n    if (evalObject()) {\r\n        set(\"interaction.resize\");\r\n        evalBool();\r\n\r\n        set(\"interaction.trackMouse\");\r\n        evalBool();\r\n\r\n        set(\"interaction.zoom\");\r\n        evalBool();\r\n\r\n        set(\"interaction.smoothing\");\r\n        evalBool();\r\n    }\r\n\r\n    set(\"title\");\r\n    if (evalObject()) {\r\n        set(\"title.bold\");\r\n        evalBool();\r\n\r\n        set(\"title.label\");\r\n        evalString();\r\n\r\n        set(\"title.size\");\r\n        evalInt();\r\n        evalCond(\"obj > 0\");\r\n\r\n        set(\"title.offsetX\");\r\n        evalInt();\r\n\r\n        set(\"title.offsetY\");\r\n        evalInt();\r\n\r\n        set(\"title.padding\");\r\n        evalInt();\r\n\r\n        set(\"title.font\");\r\n        evalFont();\r\n\r\n        set(\"title.color\");\r\n        evalColor();\r\n\r\n        set(\"title.align\");\r\n        evalAlign();\r\n    }\r\n\r\n    set(\"legend\");\r\n    if (evalObject()) {\r\n        set(\"legend.location\");\r\n        evalString();\r\n\r\n        set(\"legend.font\");\r\n        evalFont();\r\n\r\n        set(\"legend.size\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"legend.offsetX\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"legend.offsetY\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"legend.align\");\r\n        evalAlign(true);\r\n\r\n        set(\"legend.newLine\");\r\n        evalBool();\r\n    }\r\n\r\n    set(\"graph\");\r\n    if (evalObject()) {\r\n        set(\"graph.dataX\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"anyArray\");\r\n\r\n            set2(\"graph.dataY\");\r\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\r\n                evalCond(\"obj.length <= obj2.length\");\r\n            }\r\n        }\r\n\r\n        set(\"graph.dataY\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"anyArray\");\r\n            set2(\"graph.dataX\");\r\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\r\n            if (obj2.length === 0 || obj2.length === 1) {\r\n                //Check so that all dataY are the same size.\r\n                for (let i = 0; i < obj.length; ++i) {\r\n                    if (obj[i].length !== obj[0].length) {\r\n                        error(\"Not all arrays are of the same size.\");\r\n                    }\r\n                }\r\n                //If dataX.length == 1. Check if same length as dataY.\r\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\r\n                    error(\"Size does not match dataX.\");\r\n                }\r\n            }\r\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\r\n            else if (obj.length === obj2.length) {\r\n                for (let i = 0; i < obj.length; ++i) {\r\n                    if (obj[i].length !== obj2[i].length) {\r\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        set(\"graph.colors\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"color\");\r\n        }\r\n\r\n        set(\"graph.names\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"string\");\r\n        }\r\n\r\n        set(\"graph.lineWidth\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"graph.smoothing\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"graph.simplify\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0 && obj <= 1\");\r\n        }\r\n\r\n        set(\"graph.fill\");\r\n        evalBool();\r\n\r\n        set(\"graph.compositeOperation\");\r\n        evalCompositeOperation();\r\n    }\r\n\r\n    set(\"axes\");\r\n    if (evalObject()) {\r\n        set(\"axes.tickMarkers\");\r\n        if (evalObject()) {\r\n            set(\"axes.tickMarkers.show\");\r\n            evalBool();\r\n\r\n            set(\"axes.tickMarkers.length\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.width\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.offset\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.color\");\r\n            evalColor();\r\n        }\r\n\r\n        set(\"axes.tickLabels\");\r\n        if (evalObject()) {\r\n            set(\"axes.tickLabels.show\");\r\n            evalBool();\r\n\r\n            set(\"axes.tickLabels.color\");\r\n            evalColor();\r\n\r\n            set(\"axes.tickLabels.font\");\r\n            evalFont();\r\n\r\n            set(\"axes.tickLabels.size\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickLabels.width\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickLabels.offset\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n        }\r\n\r\n        set(\"axes.labels\");\r\n        if (evalObject()) {\r\n            set(\"axes.labels.color\");\r\n            evalColor();\r\n\r\n            set(\"axes.labels.font\");\r\n            evalFont();\r\n\r\n            set(\"axes.labels.size\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.labels.offset\");\r\n            evalInt();\r\n\r\n            set(\"axes.labels.padding\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n        }\r\n\r\n        //axes x and y\r\n        var axes = [\"axes.x\", \"axes.y\"];\r\n        for (var i = 0; i < axes.length; ++i) {\r\n            set(axes[i]);\r\n            if (evalObject()) {\r\n                set(axes[i] + \".show\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".inverted\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".log\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\r\n                evalInt();\r\n                evalCond(\"obj >= 0\");\r\n\r\n                set(axes[i] + \".grid\");\r\n                if (evalObject()) {\r\n                    set(axes[i] + \".grid.width\");\r\n                    evalInt();\r\n                    evalCond(\"obj >= 0\");\r\n\r\n                    set(axes[i] + \".grid.color\");\r\n                    evalColor();\r\n                }\r\n\r\n                set(axes[i] + \".label\");\r\n                evalString();\r\n\r\n                set(axes[i] + \".bounds\");\r\n                if (evalObject()) {\r\n                    set(axes[i] + \".bounds.min\");\r\n                    if (!Is.isNull(obj)) {\r\n                        evalNumber();\r\n                        set2(axes[i] + \".log\");\r\n                        if (obj2 && obj <= 0) {\r\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\r\n                        }\r\n                    }\r\n\r\n                    set(axes[i] + \".bounds.max\");\r\n                    if (!Is.isNull(obj)) {\r\n                        evalNumber();\r\n                        set2(axes[i] + \".log\");\r\n                        if (obj2 && obj <= 0) {\r\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\r\n                        }\r\n                    }\r\n\r\n                    set(axes[i] + \".bounds.min\");\r\n                    set2(axes[i] + \".bounds.max\");\r\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\r\n                        evalCond(\"obj < obj2\");\r\n                    }\r\n                }\r\n\r\n                set(axes[i] + \".legendValueFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerValuePreFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerValuePostFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerLabelFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".ticker\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set(\"border\");\r\n    if (evalObject()) {\r\n        set(\"border.style\");\r\n        evalBorderStyle();\r\n\r\n        set(\"border.color\");\r\n        evalColor();\r\n\r\n        set(\"border.width\");\r\n        evalBorderWidth();\r\n    }\r\n\r\n    set(\"spinner\");\r\n    if (evalObject()) {\r\n        set(\"spinner.show\");\r\n        evalBool();\r\n\r\n        set(\"spinner.lines\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.length\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.width\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.radius\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.corners\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0 && obj <= 1\");\r\n        }\r\n\r\n        set(\"spinner.rotate\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"spinner.direction\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj === -1 || obj === 1\");\r\n        }\r\n\r\n        set(\"spinner.color\");\r\n        evalColor();\r\n\r\n        set(\"spinner.speed\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.trail\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"spinner.shadow\");\r\n        evalBool();\r\n\r\n        set(\"spinner.hwaccel\");\r\n        evalBool();\r\n\r\n        set(\"spinner.position\");\r\n        if (evalString()) {\r\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\r\n        }\r\n\r\n        set(\"spinner.top\");\r\n        evalSize();\r\n\r\n        set(\"spinner.left\");\r\n        evalSize();\r\n    }\r\n\r\n    this._isOk = optionsOk;\r\n};\r\n\r\n/**\r\n * Create all the members that contains the user given settings.\r\n * @private\r\n */\r\nOptions.prototype._createMembers = function () {\r\n    this.debug = null;\r\n    this.interaction = {\r\n        resize: null,\r\n        trackMouse: null,\r\n        zoom: null,\r\n        smoothing: null\r\n    };\r\n    this.title = {\r\n        show: null,\r\n        bold: null,\r\n        label: null,\r\n        size: null,\r\n        offsetX: null,\r\n        offsetY: null,\r\n        padding: null,\r\n        font: null,\r\n        color: null,\r\n        align: null\r\n    };\r\n    this.legend = {\r\n        location: null,\r\n        font: null,\r\n        size: null,\r\n        offsetX: null,\r\n        offsetY: null,\r\n        align: null,\r\n        newLine: null\r\n    };\r\n    this.graph = {\r\n        dataX: null,\r\n        dataY: null,\r\n        colors: null,\r\n        names: null,\r\n        lineWidth: null,\r\n        smoothing: null,\r\n        simplify: null,\r\n        fill: null,\r\n        compositeOperation: null\r\n    };\r\n    this.axes = {\r\n        tickMarkers: {\r\n            show: null,\r\n            length: null,\r\n            width: null,\r\n            offset: null,\r\n            color: null\r\n        },\r\n        tickLabels: {\r\n            show: null,\r\n            color: null,\r\n            font: null,\r\n            size: null,\r\n            width: null,\r\n            offset: null\r\n        },\r\n        labels: {\r\n            show: null,\r\n            color: null,\r\n            font: null,\r\n            size: null,\r\n            offset: null,\r\n            padding: null\r\n        },\r\n        x: {\r\n            show: null,\r\n            inverted: null,\r\n            log: null,\r\n            height: null,\r\n            label: null,\r\n            legendValueFormatter: null,\r\n            tickerValuePreFormatter: null,\r\n            tickerValuePostFormatter: null,\r\n            tickerLabelFormatter: null,\r\n            ticker: null,\r\n            grid: {\r\n                width: null,\r\n                color: null\r\n            },\r\n            bounds: {\r\n                min: null,\r\n                max: null\r\n            }\r\n        },\r\n        y: {\r\n            show: null,\r\n            inverted: null,\r\n            log: null,\r\n            width: null,\r\n            label: null,\r\n            legendValueFormatter: null,\r\n            tickerValuePreFormatter: null,\r\n            tickerValuePostFormatter: null,\r\n            tickerLabelFormatter: null,\r\n            ticker: null,\r\n            grid: {\r\n                width: null,\r\n                color: null\r\n            },\r\n            bounds: {\r\n                min: null,\r\n                max: null\r\n            }\r\n        }\r\n    };\r\n    this.border = {\r\n        style: null,\r\n        color: null,\r\n        width: null\r\n    };\r\n    this.spinner = {\r\n        show: null,\r\n        lines: null,\r\n        length: null,\r\n        width: null,\r\n        radius: null,\r\n        corners: null,\r\n        rotate: null,\r\n        direction: null,\r\n        color: null,\r\n        speed: null,\r\n        trail: null,\r\n        shadow: null,\r\n        hwaccel: null,\r\n        position: null,\r\n        top: null,\r\n        left: null\r\n    };\r\n};\r\n\r\n/**\r\n @typedef OPTIONS_OBJECT\r\n @type {object}\r\n\r\n @property {bool} debug - If true debug info will be outputted to the console.\r\n\r\n @property {object} interaction - Options regarding user interaction with the graph.\r\n @property {bool} resize - If true the graph will be resized automatically.\r\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\r\n @property {bool} zoom - If true zoom is enabled.\r\n @property {bool} smoothing - If true interactive smoothing input is enabled.\r\n\r\n @property {object} title - Options regarding the title.\r\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\r\n @property {bool} title.bold - If true the label font is bold.\r\n @property {int} title.size - Font height/size in pixels of the text.\r\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\r\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\r\n @property {int} title.padding - Padding in pixels. Between title and graph.\r\n @property {string} title.font - Font family of the text.\r\n @property {string} title.color - Color of the text.\r\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\r\n\r\n @property {object} legend - Options regarding the legend.\r\n @property {bool} legend.show - If true the legend is shown.\r\n @property {string} legend.font - Font family of the text.\r\n @property {int} legend.size - Font size/height in pixels.\r\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\r\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\r\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\r\n @property {int} legend.newLine -  If true a new line is made between each data set.\r\n\r\n @property {object} graph - Options regarding the graph curve.\r\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\r\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\r\n @property {array<string>} graph.colors - List of colors for each dataY set.\r\n @property {array<string>} graph.names - List of names for each dataY set.\r\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\r\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\r\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\r\n @property {bool} graph.fill - If true the area under the graph will be filled.\r\n @property {string} graph.compositeOperation - Context global composit operation.\r\n\r\n @property {object} axes - Options regarding the axes.\r\n\r\n @property {object} axes.tickMarkers - Options regarding the tick markers.\r\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\r\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\r\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\r\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\r\n @property {string} axes.tickMarkers.color - Color of the tick markers.\r\n\r\n @property {object} axes.tickLabels - Options regarding the tick labels.\r\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\r\n @property {string} axes.tickLabels.color - Color of the text.\r\n @property {string} axes.tickLabels.font - Font family of the text.\r\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\r\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\r\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\r\n\r\n @property {object} axes.labels - Options regarding the axes labels.\r\n @property {string} axes.labels.color - Color of the text.\r\n @property {string} axes.labels.font - Font family of the text.\r\n @property {int} axes.labels.size - Font size/height in pixels of the text.\r\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\r\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\r\n\r\n @property {object} axes.x - Options regarding the X-axis.\r\n @property {bool} axes.x.show - If true the X-axis is shown.\r\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\r\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\r\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\r\n @property {int} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\r\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the values. Null = default callback.\r\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\r\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\r\n\r\n @property {object} axes.x.grid - Options regarding the X-axis grid.\r\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\r\n @property {string} axes.x.grid.color - Color of the grid lines.\r\n\r\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\r\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\r\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\r\n\r\n @property {object} axes.y - Options regarding the Y-axis.\r\n @property {bool} axes.y.show - If true the X-axis is shown.\r\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\r\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\r\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\r\n @property {int} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\r\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the values. Null = default callback.\r\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\r\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\r\n\r\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\r\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\r\n @property {string} axes.y.grid.color - Color of the grid lines.\r\n\r\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\r\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\r\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\r\n\r\n @property {object} border - Options regarding the graph border.\r\n @property {string} border.style - Border style. solid, dotted...\r\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\r\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\r\n\r\n\r\n */\r\n\r\n/**\r\n * Callback function for formatting values.\r\n * @callback formatterCallback\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\n\r\n/**\r\n * Callback function for creating ticks.\r\n * @callback tickerCallback\r\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\r\n * @param {number} minValue - Min/lower bounds value.\r\n * @param {number} maxValue - Max/upper bounds value.\r\n * @param {int} graphSize - Size(width or height) of graph in pixels.\r\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\r\n * @returns {array<{value:number}>}\r\n */\r\n\r\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \r\n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\r\n * Used to automatically get pixel perfect canvas size \r\n * and to make it easier to draw simple elements.\r\n */\r\n\r\n/**\r\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\r\n * @public\r\n * @constructor\r\n * @param {parent} parent - Parent div.\r\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\r\n * @returns {Canvas}\r\n */\r\nfunction Canvas(parent, id, dontScale) {\r\n    this._parent = parent;\r\n\r\n    this._canvas = document.createElement(\"canvas\");\r\n    if (id) {\r\n        this._canvas.id = id;\r\n    }\r\n    parent.append(this._canvas);\r\n    this._context = this._canvas.getContext(\"2d\");\r\n\r\n    this._dontScale = dontScale;\r\n\r\n    this._canvas.style.position = \"absolute\";\r\n    this._canvas.style.margin = 0;\r\n    this._canvas.style.padding = 0;\r\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\r\n\r\n    //Set default position.\r\n    this.setPosition(0, 0);\r\n    //Fill parent div is default size.\r\n    this.setSize(\"100%\", \"100%\");\r\n}\r\n\r\n/**\r\n * Set a new parent for the canvas. Leave empty to only remove current parent.\r\n * @public\r\n * @param {parent} div - Parent div.\r\n */\r\nCanvas.prototype.setParent = function (parent) {\r\n    this._canvas.remove();\r\n    if (parent) {\r\n        parent.append(this._canvas);\r\n    }\r\n};\r\n\r\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\r\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\r\n};\r\n\r\n/**\r\n * Get the html5 canvas.\r\n * @public\r\n * @returns {canvas}\r\n */\r\nCanvas.prototype.getCanvas = function () {\r\n    return this._canvas;\r\n};\r\n\r\n/**\r\n * Get the html5 2D context. Used when performance and less function calls are needed.\r\n * @public\r\n * @returns {context}\r\n */\r\nCanvas.prototype.getContext = function () {\r\n    return this._context;\r\n};\r\n\r\n/**\r\n * Get the x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getX = function () {\r\n    return this._x;\r\n};\r\n\r\n/**\r\n * Get the y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getY = function () {\r\n    return this._y;\r\n};\r\n\r\n/**\r\n * Get the content x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentX = function () {\r\n    return this._contentX;\r\n};\r\n\r\n/**\r\n * Get the content y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentY = function () {\r\n    return this._contentY;\r\n};\r\n\r\n/**\r\n * Get the canvas width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getWidth = function () {\r\n    //return this._canvas.outerWidth(); TODO\r\n    return this._canvas.offsetWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getHeight = function () {\r\n    //return this._canvas.outerHeight(); TODO\r\n    return this._canvas.offsetHeight;\r\n};\r\n\r\n/**\r\n * Get the canvas content width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getContentWidth = function () {\r\n    //return this._canvas.width(); TODO\r\n    return this._canvas.clientWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas content height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getContentHeight = function () {\r\n    //return this._canvas.height(); TODO\r\n    return this._canvas.clientHeight;\r\n};\r\n\r\n/**\r\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetX = function () {\r\n    return this._contentOffsetX;\r\n};\r\n\r\n/**\r\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetY = function () {\r\n    return this._contentOffsetY;\r\n};\r\n\r\n\r\n/**\r\n * Get text with in pixels.\r\n * @public\r\n * @param {string} text - Text to measure.\r\n * @param {fontString} font - Font to use.\r\n * @returns {int} Width in pixels.\r\n */\r\nCanvas.prototype.getTextWidth = function (text, font) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    return this._context.measureText(text).width;\r\n};\r\n\r\n/**\r\n * Clear canvas.\r\n * @public\r\n */\r\nCanvas.prototype.clear = function () {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Clear area.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(x, y, width, height);\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Set z-index.\r\n * @public\r\n * @param {int} zIndex - The new Z-index.\r\n */\r\nCanvas.prototype.setZIndex = function (zIndex) {\r\n    this._canvas.style[\"z-index\"] = zIndex;\r\n};\r\n\r\n/**\r\n * Set any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @param {type} value - Member value.\r\n */\r\nCanvas.prototype.set = function (member, value) {\r\n    this._context[member] = value;\r\n};\r\n\r\n/**\r\n * Set canvas border parameters.\r\n * @param {string} style\r\n * @param {string} color\r\n * @param {string} width\r\n */\r\nCanvas.prototype.setBorder = function (style, color, width) {\r\n    this._canvas.style.borderStyle = style;\r\n    this._canvas.style.borderColor = color;\r\n    this._canvas.style.borderWidth = width;\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Get any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @returns {type}\r\n */\r\nCanvas.prototype.get = function (member) {\r\n    return this._context[member];\r\n};\r\n\r\n/**\r\n * Get scale ratio.\r\n * @public\r\n * @returns {number}\r\n */\r\nCanvas.prototype.getRatio = function () {\r\n    return this._ratio;\r\n};\r\n\r\n/**\r\n * Rotate the canvas.\r\n * @public\r\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\r\n */\r\nCanvas.prototype.rotate = function (rotateDegrees) {\r\n    this._context.rotate(rotateDegrees * Math.PI / 180);\r\n};\r\n\r\n/**\r\n * Set position of canvas relative to it's parent.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\r\n    this._x = x;\r\n    this._y = y;\r\n    if (alignRight) {\r\n        this._canvas.style.left = \"\";\r\n        this._canvas.style.right = x + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.left = x + \"px\";\r\n        this._canvas.style.right = \"\";\r\n    }\r\n    if (valignBottom) {\r\n        this._canvas.style.top = \"\";\r\n        this._canvas.style.bottom = y + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.top = y + \"px\";\r\n        this._canvas.style.bottom = \"\";\r\n    }\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Set size of canvas. \r\n * @public\r\n * @param {int} width - Width in pixels. \r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.setSize = function (width, height) {\r\n    if (width !== undefined) {\r\n        if (typeof width === \"number\") {\r\n            width = width + \"px\";\r\n        }\r\n        this._canvas.style.width = width;\r\n    }\r\n    if (height !== undefined) {\r\n        if (typeof height === \"number\") {\r\n            height = height + \"px\";\r\n        }\r\n        this._canvas.style.height = height;\r\n    }\r\n    this.resize();\r\n};\r\n\r\n/**\r\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\r\n * @public\r\n */\r\nCanvas.prototype.resize = function () {\r\n    //Calculate pixel ratio.\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const bsr = this._context.webkitBackingStorePixelRatio ||\r\n        this._context.mozBackingStorePixelRatio ||\r\n        this._context.msBackingStorePixelRatio ||\r\n        this._context.oBackingStorePixelRatio ||\r\n        this._context.backingStorePixelRatio || 1;\r\n    this._ratio = dpr / bsr;\r\n\r\n    //Update canvas.\r\n    this._canvas.width = this.getContentWidth() * this._ratio;\r\n    this._canvas.height = this.getContentHeight() * this._ratio;\r\n\r\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\r\n    if (!this._dontScale) {\r\n        this._context.scale(this._ratio, this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Draw a stroke/line rectangle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    //Line width build in both direction. Compensate coordinates.\r\n    x += this._context.lineWidth / 2;\r\n    y += this._context.lineWidth / 2;\r\n    width -= this._context.lineWidth;\r\n    height -= this._context.lineWidth;\r\n    this._context.strokeRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 1 coordinate.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 2 coordinates.\r\n * @public\r\n * @param {int} x1 - First X-axis pixel.\r\n * @param {int} y1 - First Y-axis pixel.\r\n * @param {int} x2 - Second X-axis pixel.\r\n * @param {int} y2 - Second Y-axis pixel.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\r\n};\r\n\r\n/**\r\n * Draw a stroked circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n * @param {int} width - Width of stroked line.\r\n */\r\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (width) {\r\n        this._context.lineWidth = width;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw a filled circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n */\r\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.fill();\r\n};\r\n\r\n/**\r\n * Draw a line.\r\n * @public\r\n * @param {int} x1 - First x-coordinate in pixels.\r\n * @param {int} y1 - First y-coordinate in pixels.\r\n * @param {int} x2 - Second x-coordinate in pixels.\r\n * @param {int} y2 - Second y-coordinate in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(x1, y1);\r\n    this._context.lineTo(x2, y2);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw filled text.\r\n * @public\r\n * @param {string} text - Text to draw.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {string} font - Font to use.\r\n * @param {string} color - Color to use.\r\n * @param {string} align - Alignment ot use.\r\n * @param {string} baseline - Baseline to use.\r\n * @param {number} rotate - Rotate text number of degrees.\r\n */\r\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    if (align) {\r\n        this._context.textAlign = align;\r\n    }\r\n    if (baseline) {\r\n        this._context.textBaseline = baseline;\r\n    }\r\n    if (rotate) {\r\n        this._context.save();\r\n        this._context.translate(x, y);\r\n        this._context.rotate(rotate * Math.PI / 180);\r\n        this._context.fillText(text, 0, 0);\r\n        this._context.restore();\r\n    }\r\n    else {\r\n        this._context.fillText(text, x, y);\r\n    }\r\n};\r\n\r\n/**\r\n * Plot graph curve.\r\n * @public\r\n * @param {array} array - Input data. [[x, y], [x, y]]\r\n * @param {string} color - Color of stroked line.\r\n * @param {int} lineWidth - Width in pixels of stroked line.\r\n */\r\nCanvas.prototype.graph = function (array, color, lineWidth) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(array[0][0], array[0][1]);\r\n    for (let i = 1; i < array.length; ++i) {\r\n        this._context.lineTo(array[i][0], array[0][1]);\r\n    }\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Fill entire canvas with the given color.\r\n * @public\r\n * @param {string} color - Color to use.\r\n */\r\nCanvas.prototype.fill = function (color) {\r\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\r\n};\r\n\r\nCanvas.prototype.disableMouseInteraction = function () {\r\n    this._canvas.style[\"pointer-events\"] = \"none\";\r\n};\r\n\r\n/**\r\n * Calculate content X and Y.\r\n * @private\r\n */\r\nCanvas.prototype._calculateContentPosition = function () {\r\n    const compStyle = getComputedStyle(this._canvas);\r\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\r\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\r\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\r\n    this._contentX = this._x + this._contentOffsetX;\r\n    this._contentY = this._y + this._contentOffsetY;\r\n};\r\n\r\nexport default Canvas;","import Static from \"./Static\";\r\nimport Is from \"./Is\";\r\n\r\n/** \r\n * The Axis class is a single axis to the Graph class.\r\n */\r\n\r\n/**\r\n * Create new graph axis.\r\n * @public\r\n * @constructor\r\n * @param {Options} options - GraphOptions object.\r\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\r\n * @param {string} orientation - X or Y axis.\r\n * @returns {Axis}\r\n */\r\nfunction Axis(options, graphCanvas, axis) {\r\n    if (axis.toLowerCase() === \"x\") {\r\n        this._isX = true;\r\n        this._axis = options.axes.x;\r\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\r\n    }\r\n    else if (axis.toLowerCase() === \"y\") {\r\n        this._isX = false;\r\n        this._axis = options.axes.y;\r\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\r\n    }\r\n    else {\r\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\r\n        return;\r\n    }\r\n    this._options = options;\r\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\r\n}\r\n\r\n/**\r\n * Returns true if all bounds are set.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.hasBounds = function () {\r\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\r\n};\r\n\r\n/**\r\n * True of this axis is logarithmic.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isLog = function () {\r\n    return this._axis.log;\r\n};\r\n\r\n/**\r\n * True of this axis is inverted.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isInverted = function () {\r\n    return this._axis.inverted;\r\n};\r\n\r\n/**\r\n * Get min bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMin = function () {\r\n    //Always prioritize override bounds.\r\n    if (this._overrideBounds) {\r\n        return this._overrideBounds.min;\r\n    }\r\n    return this._min;\r\n};\r\n\r\n/**\r\n * Get max bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMax = function () {\r\n    //Always prioritize override bounds.\r\n    if (this._overrideBounds) {\r\n        return this._overrideBounds.max;\r\n    }\r\n    return this._max;\r\n};\r\n\r\n/**\r\n * Get the axis label. Uses the options value formatter if set.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabel = function () {\r\n    return this._axis.label;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the tick labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getTickLabelsFont = function () {\r\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the axes labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabelFont = function () {\r\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\r\n};\r\n\r\n/**\r\n * Get bounds label width in pixels. Uses the options value formatter if set.\r\n * @public\r\n * @returns {int}\r\n */\r\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\r\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\r\n    if (pad) {\r\n        bound = Static.round(bound + 0.111111111111111, 3);\r\n    }\r\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\r\n};\r\n\r\n/**\r\n * Get the ticks array.\r\n * @public\r\n * @returns {array}\r\n */\r\nAxis.prototype.getTicks = function () {\r\n    return this._ticks;\r\n};\r\n\r\n/**\r\n * Return true if this axis has overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.hasOverridenBounds = function () {\r\n    return this._overrideBounds !== undefined;\r\n};\r\n\r\n/**\r\n * Override bounds. Temporary override user given bounds. \r\n * @public\r\n */\r\nAxis.prototype.overrideBounds = function (bounds) {\r\n    this._overrideBounds = bounds;\r\n    this.calculateTicks();\r\n};\r\n\r\n/**\r\n * Remove overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.clearOverridenBounds = function () {\r\n    this.overrideBounds();\r\n};\r\n\r\n/**\r\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\r\n * @public\r\n */\r\nAxis.prototype.calculateBounds = function () {\r\n    let newMin, newMax;\r\n\r\n    //Prioritize user given bounds.\r\n    if (!Is.isNull(this._axis.bounds.min)) {\r\n        newMin = this._axis.bounds.min;\r\n    }\r\n    if (!Is.isNull(this._axis.bounds.max)) {\r\n        newMax = this._axis.bounds.max;\r\n    }\r\n\r\n    //Both bounds are not set by the user. Calculate missing.\r\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\r\n        let calcBounds;\r\n        if (this._isX) {\r\n            calcBounds = this._calculateXBounds();\r\n        }\r\n        else {\r\n            calcBounds = this._calculateYBounds();\r\n        }\r\n\r\n        if (calcBounds) {\r\n            //Use both calculated bounds.\r\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\r\n                newMin = calcBounds.min;\r\n                newMax = calcBounds.max;\r\n                //Both values are calculated. Move both.\r\n                if (newMin === newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\r\n                    --newMin;\r\n                    ++newMax;\r\n                }\r\n            }\r\n            //Use only calculated min.\r\n            else if (Is.isNull(newMin)) {\r\n                newMin = calcBounds.min;\r\n                //Only move the calculated value.\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\r\n                    newMin = newMax - 1;\r\n                }\r\n            }\r\n            //use only calculated max.\r\n            else if (Is.isNull(newMax)) {\r\n                newMax = calcBounds.max;\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\r\n                    newMax = newMin + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\r\n        if (this._axis.log && newMin <= 0) {\r\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\r\n            newMin = newMax = undefined;\r\n        }\r\n    }\r\n    this._min = newMin;\r\n    this._max = newMax;\r\n};\r\n\r\n/**\r\n * Calculate graph axes ticks.\r\n * @public\r\n */\r\nAxis.prototype.calculateTicks = function () {\r\n    let ticks;\r\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\r\n    //Create ticks with user given options ticker.\r\n    if (this._axis.ticker) {\r\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n    //Create ticks with the default ticker.\r\n    else {\r\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n\r\n    if (!ticks.length) {\r\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\r\n    }\r\n\r\n    //Update ticks with pixel coordinates.\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\r\n    }\r\n    //Show tick markers.\r\n    if (this._options.axes.tickMarkers.show) {\r\n        ticks.markers = {\r\n            offset: this._options.axes.tickMarkers.offset,\r\n            length: this._options.axes.tickMarkers.length,\r\n            width: this._options.axes.tickMarkers.width,\r\n            color: this._options.axes.tickMarkers.color\r\n        };\r\n    }\r\n    //Show tick labels.\r\n    if (this._options.axes.tickLabels.show) {\r\n        ticks.labels = {\r\n            offset: this._options.axes.tickLabels.offset,\r\n            size: this._options.axes.tickLabels.size,\r\n            color: this._options.axes.tickLabels.color,\r\n            font: this.getTickLabelsFont(),\r\n            width: []\r\n        };\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\r\n        }\r\n    }\r\n    //Show grid.\r\n    if (this._axis.grid.width) {\r\n        ticks.grid = {\r\n            width: this._axis.grid.width,\r\n            color: this._axis.grid.color\r\n        };\r\n    }\r\n    this._ticks = ticks;\r\n};\r\n\r\n/**\r\n * Get value from given pixel coordinate.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.pixelToValue = function (pixel) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get pixel coordinate from given value.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.valueToPixel = function (value) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Format the given value. Uses value formatter in options if available.\r\n * @public\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\nAxis.prototype.formatLegendValue = function (value) {\r\n    //Use user given formatter.\r\n    if (this._axis.legendValueFormatter) {\r\n        return this._axis.legendValueFormatter(value);\r\n    }\r\n    //Use default value formatter.\r\n    else {\r\n        return Static.round(value, 5);\r\n    }\r\n};\r\n\r\n/**\r\n * Callback function for getting pixel coordinate from a given value.\r\n * Much faster than asking this class valueToPixel function for each value.\r\n * Needs to be required if window changes size or new bounds are set.\r\n * Safest to aquire for each render pass.\r\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\r\n * @callback Axis~valueToPixelCallback\r\n * @param {int} index\r\n * @returns {number}\r\n */\r\n\r\n/**\r\n * Get a callback to calculate the pixel coordinate for a given value.\r\n * Used by the graph render function to improve performance.\r\n * @public\r\n * @returns {Axis~valueToPixelCallback}\r\n */\r\nAxis.prototype.getValueToPixelCallback = function () {\r\n    let num, denom, numVar, numOp, logFunc;\r\n    const size = this._getSize() * this._getRatio();\r\n\r\n    //Inverted X or normal Y.\r\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n        numVar = this.getMax();\r\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\r\n    }\r\n    //Normal X or inverted Y.\r\n    else {\r\n        numVar = this.getMin();\r\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\r\n    }\r\n\r\n    //Axis is logarithmic.\r\n    if (this._axis.log) {\r\n        numOp = \"/\";\r\n        logFunc = \"Math.log10\";\r\n    }\r\n    //Axis is linear.\r\n    else {\r\n        numOp = \"-\";\r\n        logFunc = \"\";\r\n    }\r\n\r\n    //Only do the numerator operation on the numerator if the variable is not zero.\r\n    if (numVar) {\r\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\r\n    }\r\n    else {\r\n        num = logFunc + \"(value)\";\r\n    }\r\n\r\n    //Only do the fraction if the denominator is not 1.\r\n    if (denom !== 1) {\r\n        denom = \"/ \" + denom;\r\n    }\r\n    else {\r\n        denom = \"\";\r\n    }\r\n\r\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\r\n};\r\n\r\n/**\r\n * Calculate X-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateXBounds = function () {\r\n    //Calculate missing X-axis bounds from dataX values.\r\n    if (this._options.graph.dataX.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\r\n        }\r\n        let min = 4294967296;\r\n        let max = -4294967296;\r\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\r\n            const data = this._options.graph.dataX[i];\r\n            min = Math.min(min, data[0], data[data.length - 1]);\r\n            max = Math.max(max, data[0], data[data.length - 1]);\r\n        }\r\n        return { min: min, max: max };\r\n    }\r\n    //Calculate X-axis bounds from dataY length.\r\n    else if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\r\n        }\r\n        let max = 0;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            max = Math.max(max, this._options.graph.dataY[i].length);\r\n        }\r\n        return { min: 1, max };\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate Y-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateYBounds = function () {\r\n    //Calculate Y-axis bounds from dataY values.\r\n    if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\r\n        }\r\n        let min = null;\r\n        let max = null;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            const data = this._options.graph.dataY[i];\r\n            if (data.length && min === null) {\r\n                min = 4294967296;\r\n                max = -4294967296;\r\n            }\r\n            for (let j = 0; j < data.length; ++j) {\r\n                min = Math.min(min, data[j]);\r\n                max = Math.max(max, data[j]);\r\n            }\r\n        }\r\n        return min !== null\r\n            ? { min, max }\r\n            : null;\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Default get ticks funciton. Used when no ticker is set in options.\r\n * @private\r\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\r\n * @param {number} minValue - Min/lower bounds value.\r\n * @param {number} maxValue - Max/upper bounds value.\r\n * @param {int} graphSize - Size(width or height) of graph in pixels.\r\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\r\n * @returns {array<{number, string}>}\r\n */\r\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\r\n    //Pre-format ticker values.\r\n    if (this._axis.tickerValuePreFormatter) {\r\n        minValue = this._axis.tickerValuePreFormatter(minValue);\r\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\r\n    }\r\n\r\n    let ticks;\r\n\r\n    //If the range is to small even a log axis will get linear values.\r\n    if (isLog && maxValue - minValue >= 4 * minValue) {\r\n        ticks = getDefaultLogTicks(minValue, maxValue);\r\n    }\r\n    else {\r\n        ticks = getDefaultLinTicks(minValue, maxValue, graphSize, labelSize);\r\n    }\r\n\r\n    //Post-format ticker values.\r\n    if (this._axis.tickerValuePostFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    //Add user formatted labels.\r\n    if (this._axis.tickerLabelFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n    //Add default formatted labels.\r\n    else {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    return ticks;\r\n};\r\n\r\n\r\nfunction defaultTickerLabelFormatter(value) {\r\n    if (value < 0) {\r\n        return '-' + defaultTickerLabelFormatter(-value);\r\n    }\r\n    let ranges = [];\r\n    if (value >= 1e3) {\r\n        ranges = [\r\n            { divider: 1e24, suffix: 'Y' },\r\n            { divider: 1e21, suffix: 'Z' },\r\n            { divider: 1e18, suffix: 'E' },\r\n            { divider: 1e15, suffix: 'P' },\r\n            { divider: 1e12, suffix: 'T' },\r\n            { divider: 1e9, suffix: 'G' },\r\n            { divider: 1e6, suffix: 'M' },\r\n            { divider: 1e3, suffix: 'k' }\r\n        ];\r\n    }\r\n    else if (value < 1e-2) {\r\n        ranges = [\r\n            { divider: 1e-3, suffix: 'm' },\r\n            { divider: 1e-6, suffix: 'µ' },\r\n            { divider: 1e-9, suffix: 'n' },\r\n            { divider: 1e-12, suffix: 'p' },\r\n            { divider: 1e-15, suffix: 'f' },\r\n            { divider: 1e-18, suffix: 'a' },\r\n            { divider: 1e-21, suffix: 'z' },\r\n            { divider: 1e-24, suffix: 'y' }\r\n        ];\r\n    }\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        if (value >= ranges[i].divider) {\r\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\r\n        }\r\n    }\r\n    return value.toString();\r\n}\r\n\r\n//For a given value calculate the best step value.\r\nfunction getStepValue(isLog, value) {\r\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\r\n    const exp = Math.floor(log10(value));\r\n    for (let i = 0; i < mult.length; ++i) {\r\n        const newValue = Math.pow(10, exp) * mult[i];\r\n        if (newValue >= value) {\r\n            return newValue;\r\n        }\r\n    }\r\n}\r\n\r\n//Get linear ticks.\r\nfunction getDefaultLinTicks(minValue, maxValue, graphSize, labelSize) {\r\n    //Max number of labels.\r\n    const maxNumLabels = graphSize / (labelSize * 1.5);\r\n    //Value range\r\n    const range = maxValue - minValue;\r\n    //Get ticker value step.\r\n    const step = getStepValue(false, range / maxNumLabels);\r\n    //Calculate start pos.\r\n    let start = minValue;\r\n    //Make sure start is on a step position.\r\n    const diff = modf(start, step);\r\n    if (diff > 0) {\r\n        start += step - diff;\r\n    }\r\n    if (diff < 0) {\r\n        start -= diff;\r\n    }\r\n    const ticks = [];\r\n    for (; start <= maxValue; start += step) {\r\n        start = secureFloat(start);\r\n        ticks.push({ value: start });\r\n    }\r\n    return ticks;\r\n}\r\n\r\n/**\r\n * Modulus for float.\r\n * @public\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {number}\r\n */\r\nfunction modf(a, b) {\r\n    return a - Math.round(a / b) * b;\r\n}\r\n\r\n//Get logarithmic ticks.\r\nfunction getDefaultLogTicks(minValue, maxValue) {\r\n    const ticks = [];\r\n    let step = getStepValue(true, minValue);\r\n    for (; ;) {\r\n        for (let i = 1; i < 10; ++i) {\r\n            let value = i * step;\r\n            if (value > maxValue) {\r\n                return ticks;\r\n            }\r\n            value = secureFloat(value);\r\n            ticks.push({ value: value });\r\n        }\r\n        step *= 10;\r\n    }\r\n}\r\n\r\nexport default Axis;\r\n\r\n/**\r\n * Secure float precision.\r\n * @public\r\n * @param {number} val\r\n * @returns {number}\r\n */\r\nfunction secureFloat(val) {\r\n    return parseFloat(val.toPrecision(15));\r\n}\r\n\r\nconst log10 = Math.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\r\nimport Input from \"./Input\";\r\n\r\n/** \r\n * Interaction is a class that handles the user interaction for the Graph class.\r\n */\r\n\r\n/**\r\n * Create a new Interaction.\r\n * @public\r\n * @constructor\r\n * @param {Graph} graph - Graph instance this interaction belongs to.\r\n * @returns {Interaction}\r\n */\r\nfunction Interaction(graph) {\r\n    this._graph = graph;\r\n}\r\n\r\n/**\r\n * Update(add/remove) interaction events.\r\n * @public\r\n */\r\nInteraction.prototype.updateOptions = function () {\r\n    //Resizing.\r\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\r\n        this._resizeCallback = this._addResizeEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\r\n        window.removeEventListener(\"resize\", this._resizeCallback);\r\n        this._resizeCallback = undefined;\r\n    }\r\n\r\n    //Mouse tracking.\r\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\r\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\r\n        const canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\r\n        this._mouseTrackingCallbacks = undefined;\r\n    }\r\n\r\n    //Zooming.\r\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\r\n        this._zoomCallbacks = this._addZoomEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\r\n        let canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\r\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\r\n        canvas = this._graph._canvas.graph.getCanvas();\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas = this._graph._canvas.background.getCanvas();\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\r\n        this._zoomCallbacks = undefined;\r\n    }\r\n\r\n    //Smooth option.\r\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\r\n        this._smoothingCallback = this._addSmoothingEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\r\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\r\n        this._smoothingCallback = undefined;\r\n        this._smoothingInput.remove();\r\n        this._smoothingInput = undefined;\r\n    }\r\n\r\n    //Every time options are updated. Update smoothing value if available.\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\r\n    }\r\n\r\n    this._createInteractionData();\r\n};\r\n\r\n/**\r\n * Clear interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.clear = function () {\r\n    this._graph._canvas.interaction.clear();\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"none\";\r\n    }\r\n};\r\n\r\n/**\r\n * Render interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.render = function () {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Inform the activity class that the graph has changed size and/or position.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\r\n        this._smoothingInput.style.left = x + \"px\";\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Add a resize event.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addResizeEvent = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    let timeOutResize;\r\n    //Re-plots the graph on resize end.\r\n    function resizeEnd() {\r\n        graph._canvas.background.resize();\r\n        graph._calculateGraphSize();\r\n        graph._plot();\r\n        timeOutResize = undefined;\r\n        self._resizing = false;\r\n    }\r\n    //Clear graph, hightlight and spinner features on resize start.\r\n    function resizeStart() {\r\n        self._resizing = true;\r\n        graph._canvas.graph.clear();\r\n        graph._canvas.highlight.clear();\r\n        graph._canvas.interaction.clear();\r\n        graph._renderLegend();\r\n    }\r\n    let lastWidth = this._graph._canvas.background.getWidth();\r\n    let lastHeight = this._graph._canvas.background.getHeight();\r\n    let lastPixelRatio = window.devicePixelRatio;\r\n    function callback() {\r\n        //Make sure that the size actually have changed.\r\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\r\n            lastWidth = graph._canvas.background.getWidth();\r\n            lastHeight = graph._canvas.background.getHeight();\r\n            lastPixelRatio = window.devicePixelRatio;\r\n            //First time the function is called for this resize event.\r\n            if (!timeOutResize) {\r\n                resizeStart();\r\n            }\r\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\r\n            clearTimeout(timeOutResize);\r\n            timeOutResize = setTimeout(resizeEnd, 500);\r\n        }\r\n    }\r\n    window.addEventListener(\"resize\", callback);\r\n    return callback;\r\n};\r\n\r\n/**\r\n * Add mouse tracking events.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addMouseTrackingEvents = function () {\r\n    const self = this;\r\n    const graph = this._graph;\r\n    function mouseMoveCallback(e) {\r\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\r\n            return;\r\n        }\r\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\r\n        const values = [valueX];\r\n        graph._canvas.interaction.clear();\r\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\r\n            const dataY = graph._options.graph.dataY[i];\r\n            //Cant track unexisting values.\r\n            if (!dataY.length) {\r\n                break;\r\n            }\r\n            const dataXCallback = graph._options.getDataCallback(\"x\", i);\r\n            const res = Static.binarySearch(dataXCallback, dataY.length, valueX);\r\n            let valueY;\r\n            //Found exaxt X-value.\r\n            if (res.found !== undefined) {\r\n                if (graph._options.graph.smoothing) {\r\n                    valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueY = dataY[res.found];\r\n                }\r\n            }\r\n            //Calculate Y-value from min max coordinates.\r\n            else {\r\n                const valueXMin = dataXCallback(res.min);\r\n                const valueXMax = dataXCallback(res.max);\r\n                const span = valueXMax - valueXMin;\r\n                const weightMin = 1 - (valueX - valueXMin) / span;\r\n                const weightMax = 1 - (valueXMax - valueX) / span;\r\n                let valueMin, valueMax;\r\n                if (graph._options.graph.smoothing) {\r\n                    valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\r\n                    valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueMin = dataY[res.min];\r\n                    valueMax = dataY[res.max];\r\n                }\r\n                valueY = valueMin * weightMin + valueMax * weightMax;\r\n            }\r\n            const pixelY = graph._axes.y.valueToPixel(valueY);\r\n            self._interactionData[i].moveTo(e.offsetX, pixelY);\r\n            values[i + 1] = valueY;\r\n        }\r\n        graph._renderLegend(values);\r\n    }\r\n    function mouseOutCallback() {\r\n        if (!self.mouseDown) {\r\n            graph._canvas.interaction.clear();\r\n            graph._renderLegend();\r\n        }\r\n    }\r\n    const canvas = this._graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousemove\", mouseMoveCallback);\r\n    canvas.addEventListener(\"mouseout\", mouseOutCallback);\r\n    return { mousemove: mouseMoveCallback, mouseout: mouseOutCallback };\r\n};\r\n\r\n/**\r\n * Add zoom events.\r\n * @private\r\n * @returns {object} - object containing callbacks.\r\n */\r\nInteraction.prototype._addZoomEvents = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    this.mouseDown = false;\r\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\r\n    let startX, startY;\r\n    //true = horizontal. false = vertical.\r\n    let lastHorizontal;\r\n    const color = \"rgba(130, 130, 130, 0.2)\";\r\n    let lastX, lastY;\r\n    function callbackMouseDown(e) {\r\n        if (!graph._axes.x.hasBounds() || !graph._axes.y.hasBounds()) {\r\n            return;\r\n        }\r\n        lastX = startX = e.offsetX;\r\n        lastY = startY = e.offsetY;\r\n        self.mouseDown = true;\r\n        lastHorizontal = undefined;\r\n        graph._renderLegend();\r\n    }\r\n    function callbackMouseMove(e) {\r\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\r\n            lastX = e.offsetX;\r\n            lastY = e.offsetY;\r\n            const diffX = Math.abs(startX - e.offsetX);\r\n            const diffY = Math.abs(startY - e.offsetY);\r\n            const newHorizontal = diffX > diffY;\r\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\r\n                lastHorizontal = newHorizontal;\r\n            }\r\n            graph._canvas.interaction.clear();\r\n            //Mark horizontally.\r\n            if (lastHorizontal) {\r\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\r\n            }\r\n            //Mark vertically.\r\n            else {\r\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\r\n            }\r\n        }\r\n    }\r\n    function callbackMouseUp(e) {\r\n        if (self.mouseDown) {\r\n            if (startX !== e.offsetX || startY !== e.offsetY) {\r\n                graph._canvas.interaction.clear();\r\n                //X-axis.\r\n                if (lastHorizontal) {\r\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\r\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\r\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\r\n                    graph._axes.x.overrideBounds({ min: min, max: max });\r\n                }\r\n                //Y-axis.\r\n                else {\r\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\r\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\r\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\r\n                    graph._axes.y.overrideBounds({ min: min, max: max });\r\n                }\r\n                graph._plot();\r\n            }\r\n            self.mouseDown = false;\r\n        }\r\n    }\r\n    function callbackDoubleClick(e) {\r\n        //Prevents double click from selecting the div.\r\n        //Firefox, Chrome, etc.\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        //IE\r\n        else {\r\n            e.returnValue = false;\r\n            e.cancelBubble = true;\r\n        }\r\n        if (graph._axes.x.hasOverridenBounds() || graph._axes.y.hasOverridenBounds()) {\r\n            graph._axes.x.clearOverridenBounds();\r\n            graph._axes.y.clearOverridenBounds();\r\n            graph._plot();\r\n        }\r\n    }\r\n    function callbackMouseOut(e) {\r\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\r\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\r\n            return;\r\n        }\r\n        graph._canvas.interaction.clear();\r\n        self.mouseDown = false;\r\n    }\r\n\r\n    let canvas = graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousedown\", callbackMouseDown);\r\n    canvas.addEventListener(\"mousemove\", callbackMouseMove);\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas.addEventListener(\"dblclick\", callbackDoubleClick);\r\n    canvas = this._graph._canvas.graph.getCanvas();\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas = this._graph._canvas.background.getCanvas();\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas.addEventListener(\"mouseleave\", callbackMouseOut);\r\n    return { mousedown: callbackMouseDown, mousemove: callbackMouseMove, mouseup: callbackMouseUp, dblclick: callbackDoubleClick, mouseout: callbackMouseOut };\r\n};\r\n\r\n/**\r\n * Add smoothing input event.\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addSmoothingEvent = function () {\r\n    this._smoothingInput = Input({\r\n        type: \"number\",\r\n        tabIndex: -1,\r\n        maxLength: 6,\r\n        value: 0,\r\n        min: 0\r\n    });\r\n    this._smoothingInput.style[\"z-index\"] = 5;\r\n    this._smoothingInput.style.position = \"absolute\";\r\n    this._smoothingInput.style.width = \"50px\";\r\n    this._smoothingInput.style.height = \"21px\";\r\n    this._smoothingInput.style[\"background-color\"] = \"white\";\r\n    this._smoothingInput.style[\"border-radius\"] = 0;\r\n    this._smoothingInput.style.border = \"1px solid #ccc\";\r\n    this._smoothingInput.style.color = \"#555\";\r\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\r\n    this._smoothingInput.style.display = \"none\";\r\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\r\n    this._graph._parent.append(this._smoothingInput);\r\n    const self = this;\r\n    function callbackDone() {\r\n        let value = parseInt(self._smoothingInput.value);\r\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\r\n        let length = 4294967296;\r\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\r\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\r\n        }\r\n        if (2 * value + 1 > length) {\r\n            value = Math.floor((length - 1) / 2);\r\n        }\r\n        self._smoothingInput.value = value;\r\n        self._graph._options.graph.smoothing = value;\r\n        self._graph._renderGraph();\r\n    }\r\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\r\n    return callbackDone;\r\n};\r\n\r\n/**\r\n * Create interaction data.\r\n * @private\r\n */\r\nInteraction.prototype._createInteractionData = function () {\r\n    const radius = 3;\r\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    this._interactionData = [];\r\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\r\n        //Clear area\r\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\r\n\r\n        //Draw solid circle\r\n        ctx.beginPath();\r\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\r\n        ctx.fill();\r\n\r\n        //If fill; draw black border to increase visibility.\r\n        if (this._graph._options.graph.fill) {\r\n            ctx.beginPath();\r\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n            ctx.strokeStyle = \"#000000\";\r\n            ctx.stroke();\r\n        }\r\n\r\n        //Get image data from tmp context.\r\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\r\n        //Add member data.\r\n        const canvas = this._graph._canvas.interaction;\r\n        imageData.moveTo = function (x, y) {\r\n            canvas.putImageData(this, x, y, -radius, -radius);\r\n        };\r\n        this._interactionData[i] = imageData;\r\n    }\r\n};\r\n\r\nexport default Interaction;\r\n\r\n/**\r\n * Clamp the given value to the given range.\r\n * @param {type} min - Min value.\r\n * @param {type} number - Value to clamp.\r\n * @param {type} max - Max value.\r\n * @returns {Number} - Clamped value.\r\n */\r\nfunction clamp(min, number, max) {\r\n    if (number < min) {\r\n        return min;\r\n    } else if (number > max) {\r\n        return max;\r\n    } else {\r\n        return number;\r\n    }\r\n}","/*\r\n* @author Andreas Arvidsson\r\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\r\n */\r\n\r\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\r\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\r\n}\r\n\r\nimport Spinner from \"./lib/spin.min\";\r\nimport Canvas from \"./Canvas\";\r\nimport Axis from \"./Axis\";\r\nimport Interaction from \"./Interaction\";\r\nimport Static from \"./Static\";\r\nimport Options from \"./Options\";\r\nimport Is from \"./Is\";\r\n\r\n/** \r\n * The Graph class is a 2D graph plotter.\r\n * Built with performance and customizability in mind. Supports multiple data\r\n * sets and all data sets are available as typed arrays.\r\n */\r\n\r\n/**\r\n * Create new graph.\r\n * @public\r\n * @constructor\r\n * @param {dom} parent - Parent div.  DOM or ID string. Graph will fill this div.\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n * @returns {Graph}\r\n */\r\nfunction Graph(parent, options) {\r\n    if (this instanceof Graph) {\r\n        this._init(parent, options);\r\n    }\r\n    //The new keyword was omitted.\r\n    else {\r\n        return new Graph(parent, options);\r\n    }\r\n}\r\n\r\n/**\r\n * Implementation of the constructor.\r\n * @private\r\n * @param {dom} parent - Parent div. DOM or ID string. Graph will fill this div.\r\n * @param {OPTIONS} options - Options to customize the graph.\r\n */\r\nGraph.prototype._init = function (parent, options) {\r\n    if (!parent) {\r\n        console.error(\"owp.graph ERROR: Parent dom is null\");\r\n        return;\r\n    }\r\n\r\n    parent.style.position = \"relative\";\r\n\r\n    this._parent = parent;\r\n    this._options = new Options();\r\n\r\n    this._highlights = [];\r\n\r\n    this._canvas = {\r\n        background: new Canvas(parent, \"background\"),\r\n        graph: new Canvas(parent, \"graph\", true),\r\n        highlight: new Canvas(parent, \"highlight\"),\r\n        interaction: new Canvas(parent, \"interaction\")\r\n    };\r\n\r\n    this._canvas.background.setZIndex(0);\r\n    this._canvas.graph.setZIndex(1);\r\n    this._canvas.highlight.setZIndex(2);\r\n    //Spinner uses zIndex 3.\r\n    this._canvas.interaction.setZIndex(4);\r\n    //Smoothing input used zIndex 5.\r\n\r\n    this._axes = {\r\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\r\n        y: new Axis(this._options, this._canvas.graph, \"y\")\r\n    };\r\n\r\n    this._interaction = new Interaction(this);\r\n\r\n    if (options) {\r\n        this.setOptions(options);\r\n    }\r\n    else {\r\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\r\n        this.setOptions({});\r\n    }\r\n};\r\n\r\n/**\r\n * Create legend canvas and attach to parent dom.\r\n * @private\r\n */\r\nGraph.prototype._initLegend = function () {\r\n    const location = this._options.legend.location;\r\n    if (location && this._options.interaction.trackMouse) {\r\n        //DIV id.\r\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\r\n            const legendDiv = document.getElementById(location);\r\n            if (legendDiv) {\r\n                legendDiv.style.position = \"relative\";\r\n                //Reuse existing canvas.\r\n                if (this._canvas.legend) {\r\n                    this._canvas.legend.setParent(legendDiv);\r\n                }\r\n                //Create new canvas.\r\n                else {\r\n                    this._canvas.legend = new Canvas(legendDiv);\r\n                }\r\n            }\r\n            else {\r\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\r\n            }\r\n        }\r\n        else {\r\n            //Set same parent for legend as rest of graph.\r\n            if (this._canvas.legend) {\r\n                this._canvas.legend.setParent(this._parent);\r\n            }\r\n            else {\r\n                this._canvas.legend = new Canvas(this._parent);\r\n                this._canvas.legend.disableMouseInteraction();\r\n            }\r\n            if (location.toLowerCase() === \"top\") {\r\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\r\n            }\r\n            else if (location.toLowerCase() === \"right\") {\r\n                this._canvas.legend.setPosition(0, 0, true);\r\n                this._canvas.legend.setSize(200, \"100%\");\r\n            }\r\n        }\r\n    }\r\n    //Remove old legend.\r\n    else if (this._canvas.legend) {\r\n        this._canvas.legend.setParent();\r\n        this._canvas.legend = undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the legend on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderLegend = function (values) {\r\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\r\n        return;\r\n    }\r\n\r\n    const settings = this._options.legend;\r\n    const canvas = this._canvas.legend;\r\n    canvas.clear();\r\n    canvas.set(\"font\", this._options.getLegendFont());\r\n    canvas.set(\"textBaseline\", \"top\");\r\n    canvas.set(\"textAlign\", settings.align);\r\n\r\n    const isTop = settings.location.toLowerCase() === \"top\";\r\n    const alignLeft = settings.align.toLowerCase() === \"left\";\r\n    //newLine is disabled for top location.\r\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\r\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\r\n    //OffsetY is disabled for top location.\r\n    let y = isTop ? 0 : this._options.legend.offsetY;\r\n\r\n    function printValue(color, name, value) {\r\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\r\n        canvas.text(str, x, y, null, color);\r\n        if (newLine) {\r\n            y += settings.size;\r\n        }\r\n        else {\r\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\r\n        }\r\n    }\r\n\r\n    if (alignLeft || newLine) {\r\n        for (let i = 0; i <= this._options.graph.dataY.length; ++i) {\r\n            printValue(\r\n                this._options.graph.colors[i],\r\n                this._options.getName(i),\r\n                values && values[i] !== undefined\r\n                    ? this._axes.y.formatLegendValue(values[i])\r\n                    : undefined\r\n            );\r\n        }\r\n    }\r\n    else {\r\n        for (let i = this._options.graph.dataY.length; i >= 0; --i) {\r\n            printValue(\r\n                this._options.graph.colors[i],\r\n                this._options.getName(i),\r\n                values && values[i] !== undefined\r\n                    ? this._axes.y.formatLegendValue(values[i])\r\n                    : undefined\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Get options instance.\r\n * @public\r\n * @returns {Options}\r\n */\r\nGraph.prototype.getOptions = function () {\r\n    return this._options;\r\n};\r\n\r\n/**\r\n * Sets all options to their default values.\r\n * @public\r\n */\r\nGraph.prototype.setDefaultOptions = function () {\r\n    this.setOptions(Options.getDefault());\r\n};\r\n\r\n/**\r\n * Set new options.\r\n * @public\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n */\r\nGraph.prototype.setOptions = function (options) {\r\n    this._options.set(options);\r\n    this._hasCalculatedGraphSize = false;\r\n    if (this._options.isOk()) {\r\n        this._axes.x.calculateBounds();\r\n        this._axes.y.calculateBounds();\r\n        this._interaction.updateOptions();\r\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\r\n        this._initLegend();\r\n        this._plot();\r\n    }\r\n};\r\n\r\n/**\r\n * Set new data.\r\n * @public\r\n */\r\nGraph.prototype.setData = function (dataX, dataY) {\r\n    const options = { graph: {} };\r\n    if (dataX) {\r\n        options.graph.dataX = dataX;\r\n    }\r\n    if (dataY) {\r\n        options.graph.dataY = dataY;\r\n    }\r\n    this.setOptions(options);\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} x1 - Min X value.\r\n * @param {number} y1 - Min Y value.\r\n * @param {number} x2 - Max X-value.\r\n * @param {number} y2 - Max Y-value.\r\n * @returns {undefined}\r\n */\r\nGraph.prototype.zoom = function (x1, y1, x2, y2) {\r\n    this._axes.x.overrideBounds({ min: x1, max: x2 });\r\n    this._axes.y.overrideBounds({ min: y1, max: y2 });\r\n    this._plot();\r\n};\r\n\r\n/**\r\n * Reset zoom level to zero.\r\n * @returns {undefined}\r\n */\r\nGraph.prototype.resetZoom = function () {\r\n    this._axes.x.clearOverridenBounds();\r\n    this._axes.y.clearOverridenBounds();\r\n    this._plot();\r\n};\r\n\r\n/**\r\n * Clears/removes current highlight.\r\n * @public\r\n */\r\nGraph.prototype.clearHighlight = function () {\r\n    this._canvas.highlight.clear();\r\n    this._highlights = [];\r\n};\r\n\r\n/**\r\n * Highlight the given are of the graph.\r\n * @public\r\n * @param {number} x1 - First x-axis value.\r\n * @param {number} y1 - First y-axis value.\r\n * @param {number} x2 - Second x-axis value.\r\n * @param {number} y2 - Second y-axis value.\r\n * @param {string} color - Color of the selected area.\r\n */\r\nGraph.prototype.highlight = function (x1, y1, x2, y2, color) {\r\n    this._highlights.push({\r\n        x1: x1,\r\n        y1: y1,\r\n        x2: x2,\r\n        y2: y2,\r\n        color: color ? color : \"rgba(0, 0, 255, 0.2)\"\r\n    });\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._renderHighlight();\r\n    }\r\n};\r\n\r\n/**\r\n * Manually start or stop spinner.\r\n * @public\r\n * @param {bool} doSpin - If true the spinner will start.\r\n */\r\nGraph.prototype.spin = function (doSpin) {\r\n    if (doSpin) {\r\n        //Spinner does not exist. Create it.\r\n        if (!this._spinner) {\r\n            this._spinnerDiv = document.createElement(\"div\");\r\n            this._parent.append(this._spinnerDiv);\r\n            this._spinnerDiv.style.position = \"absolute\";\r\n            this._spinnerDiv.style[\"z-index\"] = 3;\r\n            this._updateSpinnerSize();\r\n            this._spinner = new Spinner(this._options.spinner);\r\n        }\r\n        if (!this._spinner.isSpinning) {\r\n            this._spinner.spin(this._spinnerDiv);\r\n            this._spinner.isSpinning = true;\r\n        }\r\n    }\r\n    else if (this._spinner) {\r\n        this._spinner.stop();\r\n        this._spinner.isSpinning = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Plots/draws the graph.\r\n * @private\r\n */\r\nGraph.prototype._plot = function () {\r\n    if (!this._options.isOk()) {\r\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\r\n        return;\r\n    }\r\n\r\n    if (this._options.debug) {\r\n        console.time(\"owp.graph DEBUG: Plot time\");\r\n    }\r\n\r\n    //If graph size has not yet been calculated. Do it.\r\n    if (!this._hasCalculatedGraphSize) {\r\n        this._calculateGraphSize();\r\n    }\r\n\r\n    //Clear plot.\r\n    this._canvas.background.clear();\r\n    this._canvas.graph.clear();\r\n    this._canvas.highlight.clear();\r\n    this._interaction.clear();\r\n\r\n    //Render non data related features.\r\n    this._renderTitle();\r\n    this._renderAxesLabels();\r\n\r\n    //Has bounds. Render bounds related features.\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._renderXAxis();\r\n        this._renderYAxis();\r\n        this._renderHighlight();\r\n\r\n        //Has graph data. Render graph data.\r\n        if (this._options.graph.dataY.length) {\r\n            this._renderLegend();\r\n            this._renderGraph();\r\n            this._interaction.render();\r\n        }\r\n        else if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: No data set available. Plotting available features.\");\r\n        }\r\n    }\r\n    //Has neither bounds or data.\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\r\n    }\r\n\r\n    if (this._options.debug) {\r\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\r\n    }\r\n};\r\n\r\n/**\r\n * Updates the position and size of the spinner div based on the graph canvas.\r\n * @private\r\n */\r\nGraph.prototype._updateSpinnerSize = function () {\r\n    if (this._spinnerDiv) {\r\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\r\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\r\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\r\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate graph canvas position and size.\r\n * @private\r\n */\r\nGraph.prototype._calculateGraphSize = function () {\r\n    let x = this._getOffset([\"left\"]);\r\n    let y = this._getOffset([\"top\"]);\r\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\r\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\r\n\r\n    //Set graph canvas.\r\n    this._canvas.graph.setPosition(x, y);\r\n    this._canvas.graph.setSize(width, height);\r\n\r\n    //Convert to content space.\r\n    x = this._canvas.graph.getContentX();\r\n    y = this._canvas.graph.getContentY();\r\n    width = this._canvas.graph.getContentWidth();\r\n    height = this._canvas.graph.getContentHeight();\r\n\r\n    //Set highlight canvas.\r\n    this._canvas.highlight.setPosition(x, y);\r\n    this._canvas.highlight.setSize(width, height);\r\n    //Set interaction canvas.\r\n    this._canvas.interaction.setPosition(x, y);\r\n    this._canvas.interaction.setSize(width, height);\r\n    //Set legend canvas if available.\r\n    if (this._canvas.legend) {\r\n        if (this._options.legend.location.toLowerCase() === \"top\") {\r\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\r\n            this._canvas.legend.setSize(width, this._options.legend.size);\r\n        }\r\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\r\n            this._canvas.legend.setPosition(0, y, true);\r\n            this._canvas.legend.setSize(200, height);\r\n        }\r\n    }\r\n\r\n    //Update interaction instance.\r\n    this._interaction.graphChangedSize(x, y, width, height);\r\n\r\n    //Updates the spinner div size.\r\n    this._updateSpinnerSize();\r\n\r\n    //Calculate new ticks for the new size.\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._axes.x.calculateTicks();\r\n        this._axes.y.calculateTicks();\r\n    }\r\n    this._hasCalculatedGraphSize = true;\r\n};\r\n\r\n/**\r\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderXAxis = function () {\r\n    if (!this._options.axes.x.show) {\r\n        return;\r\n    }\r\n    const ticks = this._axes.x.getTicks();\r\n    let oldX, oldWidth;\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\r\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\r\n        //Draw tick markers.\r\n        if (ticks.markers) {\r\n            y += ticks.markers.offset;\r\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\r\n            y += ticks.markers.length;\r\n        }\r\n        //Draw grid line.\r\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\r\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\r\n        }\r\n        //Draw tick label.\r\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\r\n            y += ticks.labels.offset;\r\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\r\n            oldX = x;\r\n            oldWidth = ticks.labels.width[i];\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderYAxis = function () {\r\n    if (!this._options.axes.y.show) {\r\n        return;\r\n    }\r\n    const ticks = this._axes.y.getTicks();\r\n    let oldY;\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        let x = this._canvas.graph.getX();\r\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\r\n        //Draw tick markers.\r\n        if (ticks.markers) {\r\n            x -= ticks.markers.offset;\r\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\r\n            x -= ticks.markers.length;\r\n        }\r\n        //Draw grid line.\r\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\r\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\r\n        }\r\n        //Draw tick label.\r\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\r\n            x -= ticks.labels.offset;\r\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\r\n            oldY = y;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the axes(x and y) labels on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderAxesLabels = function () {\r\n    //Draw X label.\r\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\r\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\r\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\r\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\r\n    }\r\n    //Draw Y label.\r\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\r\n        const x = this._options.axes.labels.offset;\r\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\r\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the graph title on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderTitle = function () {\r\n    if (!this._options.title.label.length) {\r\n        return;\r\n    }\r\n    let x;\r\n    if (this._options.title.align.toLowerCase() === \"left\") {\r\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\r\n    } else if (this._options.title.align.toLowerCase() === \"center\") {\r\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\r\n    } else if (this._options.title.align.toLowerCase() === \"right\") {\r\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\r\n    }\r\n    const y = this._options.title.offsetY;\r\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\r\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\r\n};\r\n\r\n/**\r\n * Renders the highligted area on the highligh canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderHighlight = function () {\r\n    this._canvas.highlight.clear();\r\n    for (let i = 0; i < this._highlights.length; ++i) {\r\n        let x1, y1, x2, y2;\r\n        //Convert values to pixels.\r\n        if (Is.isNull(this._highlights[i].x1)) {\r\n            x1 = 0;\r\n        }\r\n        else {\r\n            x1 = this._axes.x.valueToPixel(this._highlights[i].x1);\r\n        }\r\n        if (Is.isNull(this._highlights[i].y1)) {\r\n            y1 = 0;\r\n        }\r\n        else {\r\n            y1 = this._axes.y.valueToPixel(this._highlights[i].y1);\r\n        }\r\n        if (Is.isNull(this._highlights[i].x2)) {\r\n            x2 = this._canvas.graph.getContentWidth();\r\n        }\r\n        else {\r\n            x2 = this._axes.x.valueToPixel(this._highlights[i].x2);\r\n        }\r\n        if (Is.isNull(this._highlights[i].y2)) {\r\n            y2 = this._canvas.graph.getContentHeight();\r\n        }\r\n        else {\r\n            y2 = this._axes.y.valueToPixel(this._highlights[i].y2);\r\n        }\r\n        this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, this._highlights[i].color);\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the graph curve on the graph canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderGraph = function () {\r\n    if (this._options.debug && this._options.graph.smoothing > 1) {\r\n        console.log(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\r\n    }\r\n\r\n    if (this._options.debug && this._options.graph.simplify) {\r\n        console.log(\"owp.graph DEBUG: Simplify rendering: \" + this._options.graph.simplify);\r\n    }\r\n\r\n    this._canvas.graph.clear();\r\n\r\n    //Get value to pixel functions.\r\n    const valueToPixelX = this._axes.x.getValueToPixelCallback();\r\n    const valueToPixelY = this._axes.y.getValueToPixelCallback();\r\n    //Value bounds        \r\n    const min = this._axes.x.getMin();\r\n    const max = this._axes.x.getMax();\r\n    //Get canvas context directly for increased performance.\r\n    const context = this._canvas.graph.getContext();\r\n    context.lineWidth = this._options.graph.lineWidth;\r\n    context.globalCompositeOperation = this._options.graph.compositeOperation;\r\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n        //Aquire callback for getting X-axis data values.\r\n        const getDataX = this._options.getDataCallback(\"x\", i);\r\n\r\n        //Find start and end indicies.\r\n        const length = this._options.graph.dataY[i].length;\r\n        const bsMin = Static.binarySearch(getDataX, length, min);\r\n        const bsMax = Static.binarySearch(getDataX, length, max);\r\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\r\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\r\n\r\n        //Aquire callback for getting Y-axis data values.\r\n        const getDataY = this._options.getDataCallback(\"y\", i, start);\r\n\r\n        //Start path.\r\n        context.beginPath();\r\n\r\n        //Render simplified data set.\r\n        if (this._options.graph.simplify) {\r\n            const simplify = this._options.graph.simplify;\r\n            let oldX = valueToPixelX(getDataX(start));\r\n            let minVal = getDataY(start);\r\n            let maxVal = minVal;\r\n            let newX, y;\r\n            ++start;\r\n            for (; start <= end; ++start) {\r\n                newX = valueToPixelX(getDataX(start));\r\n                if (Math.abs(oldX - newX) <= simplify) {\r\n                    y = getDataY(start);\r\n                    minVal = Math.min(minVal, y);\r\n                    maxVal = Math.max(maxVal, y);\r\n                    continue;\r\n                }\r\n                context.lineTo(oldX, valueToPixelY(minVal));\r\n                //Only add the second point if it differs from the first.\r\n                if (minVal !== maxVal) {\r\n                    context.lineTo(oldX, valueToPixelY(maxVal));\r\n                }\r\n                oldX = newX;\r\n                minVal = getDataY(start);\r\n                maxVal = minVal;\r\n            }\r\n            //Needed to add the last step.\r\n            context.lineTo(oldX, valueToPixelY(minVal));\r\n            if (minVal !== maxVal) {\r\n                context.lineTo(oldX, valueToPixelY(maxVal));\r\n            }\r\n        }\r\n        //Render full data set.\r\n        else {\r\n            for (; start <= end; ++start) {\r\n                context.lineTo(valueToPixelX(getDataX(start)), valueToPixelY(getDataY(start)));\r\n            }\r\n        }\r\n\r\n        //Fill under graph.\r\n        if (this._options.graph.fill) {\r\n            if (this._options.axes.x.inverted) {\r\n                context.lineTo(0, this._canvas.graph.getContentHeight());\r\n                context.lineTo(this._canvas.graph.getContentWidth(), this._canvas.graph.getContentHeight());\r\n            } else {\r\n                context.lineTo(this._canvas.graph.getContentWidth() * this._canvas.graph.getRatio(), this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\r\n                context.lineTo(0, this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\r\n            }\r\n            context.closePath();\r\n            context.fillStyle = this._options.getColor(i + 1);\r\n            context.fill();\r\n        }\r\n        //Stroke line.\r\n        else {\r\n            context.strokeStyle = this._options.getColor(i + 1);\r\n            context.stroke();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get offset for the given paramters.\r\n * @private\r\n * @param {array} array - List of string parameters to get offset for.\r\n * @returns {int} - Offset in number of pixels.\r\n */\r\nGraph.prototype._getOffset = function (array) {\r\n    let offset = 0;\r\n    for (let i = 0; i < array.length; ++i) {\r\n        switch (array[i]) {\r\n            case \"top\":\r\n                if (this._options.title.label.length) {\r\n                    offset += this._options.title.size;\r\n                    offset += this._options.title.offsetY;\r\n                    offset += this._options.title.padding;\r\n                }\r\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\r\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\r\n                }\r\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._options.axes.tickLabels.size / 2;\r\n                }\r\n                break;\r\n            case \"bottom\":\r\n                if (this._options.axes.x.show) {\r\n                    if (this._options.axes.x.label.length) {\r\n                        offset += this._options.axes.labels.size;\r\n                        offset += this._options.axes.labels.offset;\r\n                        offset += this._options.axes.labels.padding;\r\n                    }\r\n                    if (this._options.axes.x.height) {\r\n                        offset += this._options.axes.x.height;\r\n                    }\r\n                    else {\r\n                        if (this._options.axes.tickLabels.show) {\r\n                            offset += this._options.axes.tickLabels.size;\r\n                            offset += this._options.axes.tickLabels.offset;\r\n                        }\r\n                        if (this._options.axes.tickMarkers.show) {\r\n                            offset += this._options.axes.tickMarkers.length;\r\n                            offset += this._options.axes.tickMarkers.offset;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._options.axes.tickLabels.size / 2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if (this._options.axes.y.show) {\r\n                    if (this._options.axes.y.label.length) {\r\n                        offset += this._options.axes.labels.size;\r\n                        offset += this._options.axes.labels.offset;\r\n                        offset += this._options.axes.labels.padding;\r\n                    }\r\n                    if (this._options.axes.y.width) {\r\n                        offset += this._options.axes.y.width;\r\n                    }\r\n                    else {\r\n                        if (this._options.axes.tickLabels.show) {\r\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\r\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\r\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\r\n                            offset += this._options.axes.tickLabels.offset;\r\n                        }\r\n                        if (this._options.axes.tickMarkers.show) {\r\n                            offset += this._options.axes.tickMarkers.length;\r\n                            offset += this._options.axes.tickMarkers.offset;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\r\n                    offset += this._canvas.legend.getWidth();\r\n                }\r\n                else {\r\n                    const defaultOffset = 20;\r\n                    let boundOffset = 0;\r\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\r\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\r\n                    }\r\n                    offset += Math.max(defaultOffset, boundOffset);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return Math.round(offset);\r\n};\r\n\r\nGraph.createDummyData = Static.createDummyData;\r\nGraph.getDefaultOptions = Options.getDefault;\r\n\r\nexport default Graph;"],"sourceRoot":""}