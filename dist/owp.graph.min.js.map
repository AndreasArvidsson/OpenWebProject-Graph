{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","obj","HTMLElement","isArray","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isTypedArray","div","document","createElement","style","borderColor","width","noCenter","toLowerCase","borderWidth","borderStyle","type","isNumber","isInt","isString","isBool","isAnyArray","isObject","isFunction","isColor","isSize","isAlignment","isCompositeOperation","isBorderStyle","isBorderWidth","isDOM","isNull","Error","callbacks","types","split","length","push","getCompareCallback","getCompareCallbacks","array","compareCallback","options","Static","size","seed","random","Math","sin","floor","data","buffer1","ArrayBuffer","buffer2","intY","floatY1","floatY2","mult","PI","cos","console","warn","index","smoothing","getSmoothingWindow","sum","low","high","diffToMin","max","diffToMax","diff","min","dataCallback","mid","found","context","getContext","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","log10","x","log","LN10","Options","this","setDefault","set","isOk","_isOk","getColor","graph","colors","getName","undefined","names","getLegendFont","legend","getDefault","debug","interaction","resize","trackMouse","zoom","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","highlight","xMin","xMax","yMin","yMax","dataX","dataY","lineWidth","simplify","fill","compositeOperation","axes","tickMarkers","show","offset","tickLabels","labels","inverted","height","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","path","_evalOptions","assign","getDataCallback","axis","dataIndex","start","_getDataCallbackSmoothing","error","centralIndex","threshold","optionsOk","obj2","name2","paths","set2","msg","evalType","res","isOfType","evalArrayContains","isContent","evalAlign","evalCond","cond","eval","replaceAll","trim","b","arguments","appendChild","e","join","f","g","h","j","substring","indexOf","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","container","id","dontScale","_canvas","append","_context","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","_isX","_axis","_getSize","_options","_getRatio","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideMin","_min","_overrideMax","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasZoom","calculateTicks","clearZoom","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","canvas","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","_renderLegend","mouseMoveCallback","mouseDown","_axes","valueX","values","dataXCallback","binarySearch","valueY","calculateSmothingValue","valueXMin","valueXMax","span","weightMin","weightMax","valueMin","valueMax","pixelY","isFinite","_interactionData","mouseOutCallback","startX","startY","lastHorizontal","lastX","lastY","button","diffX","abs","diffY","newHorizontal","clamp","preventDefault","returnValue","cancelBubble","toElement","tabIndex","maxLength","_container","callbackDone","_renderGraph","ctx","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","createDummyData","getOptions","getDefaultOptions","setDefaultOptions","setOptions","_hasCalculatedGraphSize","_interaction","_initLegend","getElementById","parent","legendDiv","settings","isTop","alignLeft","printValue","str","time","_renderTitle","_renderAxesLabels","_renderSpin","_renderXAxis","_renderYAxis","_renderHighlight","timeEnd","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","_getOffset","oldX","oldWidth","oldY","valueToPixelX","valueToPixelY","globalCompositeOperation","getDataX","bsMin","bsMax","end","getDataY","newX","minVal","maxVal","closePath","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\n\n/**\n * Check if the given object is a DOM element.\n * @param {object} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isDOM = function (obj) {\n    return obj instanceof HTMLElement;\n};\n\n/**\n * Check of the given object is null or undefined.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNull = function (obj) {\n    return obj === undefined || obj === null;\n};\n\n/**\n * Check of the given object is a object.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isObject = function (obj) {\n    return obj !== null && typeof obj === \"object\" && !Is.isArray(obj);\n};\n\n/**\n * Check of the given object is a function.\n * @private\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFunction = function (obj) {\n    return typeof obj === \"function\";\n};\n\n/**\n * Check of the given object is a bool.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isBool = function (obj) {\n    return typeof obj === \"boolean\";\n};\n\n/**\n * Check of the given object is a number.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNumber = function (obj) {\n    return typeof obj === \"number\";\n};\n\n/**\n * Check of the given object is an integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isInt = function (obj) {\n    return typeof obj === \"number\" && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is an unsigned integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isUint = function (obj) {\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is a string.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isString = function (obj) {\n    return typeof obj === \"string\";\n};\n\n/**\n * Check of the given object is an Array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isArray = function (obj) {\n    return obj instanceof Array;\n};\n\n/**\n * Check of the given object is an typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isTypedArray = function (obj) {\n    return obj instanceof Int8Array\n        || obj instanceof Uint8Array\n        || obj instanceof Uint8ClampedArray\n        || obj instanceof Int16Array\n        || obj instanceof Uint16Array\n        || obj instanceof Int32Array\n        || obj instanceof Uint32Array\n        || obj instanceof Float32Array\n        || obj instanceof Float64Array;\n};\n\n/**\n * Check of the given object is an array or a typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isAnyArray = function (obj) {\n    return Is.isArray(obj) || Is.isTypedArray(obj);\n};\n\n/**\n * Check of the given object is a color.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isColor = function (obj) {\n    var div = document.createElement(\"div\");\n    div.style.borderColor = \"\";\n    div.style.borderColor = obj;\n    return div.style.borderColor !== \"\";\n};\n\n/**\n * Check of the given object is a size.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isSize = function (obj) {\n    var div = document.createElement(\"div\");\n    div.style.width = \"\";\n    div.style.width = obj;\n    return div.style.width !== \"\";\n};\n\n/**\n * Check of the given object is an alignment.\n * @public\n * @param {string} obj - Object to evaluate.\n * @param {bool} noCenter - If true the center alignment is not valid.\n * @returns {bool}\n */\nIs.isAlignment = function (obj, noCenter) {\n    obj = obj.toLowerCase();\n    if (noCenter) {\n        return obj === \"left\" || obj === \"right\";\n    } else {\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\n    }\n};\n\n/**\n * Check of the given object is an composite operation.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isCompositeOperation = function (obj) {\n    obj = obj.toLowerCase();\n    return obj === \"source-over\"\n        || obj === \"source-in\"\n        || obj === \"source-out\"\n        || obj === \"source-atop\"\n        || obj === \"destination-over\"\n        || obj === \"destination-in\"\n        || obj === \"destination-out\"\n        || obj === \"destination-atop\"\n        || obj === \"lighter\"\n        || obj === \"copy\"\n        || obj === \"xor\"\n        || obj === \"multiply\"\n        || obj === \"screen\"\n        || obj === \"overlay\"\n        || obj === \"darken\"\n        || obj === \"lighten\"\n        || obj === \"color-dodge\"\n        || obj === \"color-burn\"\n        || obj === \"hard-light\"\n        || obj === \"soft-light\"\n        || obj === \"difference\"\n        || obj === \"exclusion\"\n        || obj === \"hue\"\n        || obj === \"saturation\"\n        || obj === \"color\"\n        || obj === \"luminosity\";\n};\n\nIs.isBorderWidth = function (obj) {\n    var div = document.createElement(\"div\");\n    div.style.borderWidth = \"\";\n    div.style.borderWidth = obj;\n    return div.style.borderWidth !== \"\";\n};\n\nIs.isBorderStyle = function (obj) {\n    var div = document.createElement(\"div\");\n    div.style.borderStyle = \"\";\n    div.style.borderStyle = obj;\n    return div.style.borderStyle !== \"\";\n};\n\n\n/**\n * Get a callback to evaluate if the given data is of the specified type.\n * @param {string} type\n * @returns {function]\n * }\n */\nIs.getCompareCallback = function (type) {\n    switch (type) {\n        case \"number\":\n            return Is.isNumber;\n        case \"int\":\n            return Is.isInt;\n        case \"string\":\n        case \"font\": //TODO\n            return Is.isString;\n        case \"bool\":\n            return Is.isBool;\n        case \"array\":\n            return Is.isArray;\n        case \"typedArray\":\n            return Is.isTypedArray;\n        case \"anyArray\":\n            return Is.isAnyArray;\n        case \"object\":\n            return Is.isObject;\n        case \"function\":\n            return Is.isFunction;\n        case \"color\":\n            return Is.isColor;\n        case \"size\":\n            return Is.isSize;\n        case \"alignment\":\n            return Is.isAlignment;\n        case \"compositeOperation\":\n            return Is.isCompositeOperation;\n        case \"borderStyle\":\n            return Is.isBorderStyle;\n        case \"borderWidth\":\n            return Is.isBorderWidth;\n        case \"dom\":\n            return Is.isDOM;\n        case \"null\":\n            return Is.isNull;\n        default:\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\n    }\n};\n\n/**\n * Get a list of callbacks to evaluate if the given data is of the specified type.\n * @param {string} type. Separated by |\n * @returns {array<function>]}\n */\nIs.getCompareCallbacks = function (type) {\n    var callbacks = [];\n    var types = type.split(\"|\");\n    if (!types.length) {\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\n    }\n    for (var i = 0; i < types.length; ++i) {\n        callbacks.push(Is.getCompareCallback(types[i]));\n    }\n    return callbacks;\n};\n\n/**\n * True if object is of type\n * @param {string} type. Separated by |\n * @returns {bool}\n */\nIs.isOfType = function (obj, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if the array only contains items if the given type.\n * @public\n * @param {array} array - Array to check.\n * @param {string} type - Type to compare itmes against.\n * @returns {bool} - True if the array only contains items if the given type.\n */\nIs.isContent = function (array, type) {\n    var compareCallback = Is.getCompareCallback(type);\n    for (var i = 0; i < array.length; ++i) {\n        if (!compareCallback(array[i])) {\n            return false;\n        }\n    }\n    return true;\n};\n\nIs.isInOptions = function (value, options) {\n    for (var i = 0; i < options.length; ++i) {\n        if (options[i] === value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default Is;\n","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @param {string} type - float or int.\n * @returns {array}\n */\nStatic.createDummyData = function (size, type) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data = [];\n    const buffer1 = new ArrayBuffer(size * 4);\n    const buffer2 = new ArrayBuffer(size * 4);\n    if (type && type.toLowerCase() === \"int\") {\n        const intY = new Uint32Array(buffer1);\n        for (let i = 0; i < size; ++i) {\n            intY[i] = i + 1;\n        }\n        data.push(intY);\n    }\n    else if (type && type.toLowerCase() === \"float\") {\n        const floatY1 = new Float32Array(buffer1);\n        const floatY2 = new Float32Array(buffer2);\n        const mult = Math.PI / 100;\n        for (let i = 0; i < size; ++i) {\n            floatY1[i] = Math.sin(i * mult) * random();\n            floatY2[i] = Math.cos(i * mult) * random();\n        }\n        data.push(floatY1);\n        data.push(floatY2);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: Can't create dummy data. Invalid type: \\\"\" + type + \"\\\"\");\n    }\n    return data;\n};\n\n/**\n * Calculate the smoothed value for a given index.\n * @public\n * @param {array} data\n * @param {int} index\n * @param {int} smoothing\n * @returns {number}\n */\nStatic.calculateSmothingValue = function (index, smoothing, data) {\n    const window = Static.getSmoothingWindow(index, smoothing, data.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += data[window.low++];\n    }\n    return sum / window.length;\n};\n\n/**\n * Get the smoothing window indices.\n * @param {int} index - Index for central value.\n * @param {int} smoothing - Smootrhing value. Number of samples on each side of central value.\n * @param {int} length - Length of data set.\n * @returns {undefined}\n */\nStatic.getSmoothingWindow = function (index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return { low: index - diff, high: index + diff, length: 2 * diff + 1 };\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nexport default Static;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\n/** \n * The Options class is the options and associated functions for the Graph class.\n * See setDefault() for a desciption of the possible option parameters.\n */\n\n/**\n * Create new Graph options.\n * @public\n * @constructor\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Options}\n */\nfunction Options(options) {\n    this.setDefault();\n    if (options) {\n        this.set(options);\n    }\n}\n\n/**\n * Check if the options are ok / valid.\n * @public\n * @returns {bool} - True if the options are ok.\n */\nOptions.prototype.isOk = function () {\n    return this._isOk;\n};\n\n/**\n * Get color for a data set.  Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string} - CSS color string.\n */\nOptions.prototype.getColor = function (index) {\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\n};\n\n/**\n * Get name for a data set. Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string}\n */\nOptions.prototype.getName = function (index) {\n    if (this.graph.names[index] !== undefined) {\n        return this.graph.names[index];\n    }\n    else if (index > 0) {\n        return \"DATA\" + (index);\n    }\n    else {\n        return \"X\";\n    }\n};\n\n/**\n * Get the font(family and size) for the legend label.\n * @public\n * @returns {string}\n */\nOptions.prototype.getLegendFont = function () {\n    return this.legend.size + \"px \" + this.legend.font;\n};\n\n/**\n * Get the default options object.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nOptions.getDefault = function () {\n    return {\n        debug: false,\n        interaction: {\n            resize: true,\n            trackMouse: true,\n            zoom: true,\n            smoothing: false\n        },\n        title: {\n            label: \"\",\n            bold: false,\n            size: 20,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 5,\n            font: \"verdana\",\n            color: \"black\",\n            align: \"center\"\n        },\n        legend: {\n            location: \"top\",\n            font: \"Arial\",\n            size: 15,\n            offsetX: 10,\n            offsetY: 2,\n            align: \"right\",\n            newLine: false\n        },\n        highlight: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null,\n            color: \"rgba(0, 0, 255, 0.2)\"\n        },\n        zoom: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null\n        },\n        graph: {\n            dataX: [],\n            dataY: [],\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\n            names: [],\n            lineWidth: 1,\n            smoothing: 0,\n            simplify: 0.1,\n            fill: false,\n            compositeOperation: \"source-over\"\n        },\n        axes: {\n            tickMarkers: {\n                show: true,\n                length: 5,\n                width: 1,\n                offset: 0,\n                color: \"#BEBEBE\"\n            },\n            tickLabels: {\n                show: true,\n                color: \"black\",\n                font: \"Arial\",\n                size: 12,\n                width: 40,\n                offset: 2\n            },\n            labels: {\n                color: \"black\",\n                font: \"verdana\",\n                size: 15,\n                offset: 3,\n                padding: 0\n            },\n            x: {\n                show: true,\n                inverted: false,\n                log: false,\n                height: 0,\n                label: \"\",\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            },\n            y: {\n                show: true,\n                inverted: false,\n                log: false,\n                width: 0,\n                label: \"\",\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            }\n        },\n        border: {\n            style: \"solid\",\n            color: \"black\",\n            width: \"0 0 1px 1px\"\n        },\n        spinner: {//Options regarding the spinner.\n            show: false, //Automatically show spinner when plotting data. Can always be activated manually.\n            lines: 13, //The number of lines to draw.\n            length: 30, //The length of each line.\n            width: 10, //The line thickness.\n            radius: 30, //The radius of the inner circle.\n            corners: 1, //Corner roundness (0..1).\n            rotate: 0, //The rotation offset.\n            direction: 1, //1: clockwise, -1: counterclockwise\n            color: \"black\", //#rgb or #rrggbb or array of colors\n            speed: 1, //Revolutions per second\n            trail: 50, //Afterglow percentage\n            shadow: false, //If true a shadow is rendered.\n            hwaccel: true, //If true hardware acceleration is used.\n            position: 'relative', //Position type.\n            top: \"50%\", //CenterY position relative to parent\n            left: \"50%\"         //CenterX position relative to parent\n        }\n    };\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - The options to set.\n */\nOptions.prototype.set = function (options) {\n    function setMembers(oldObj, newObj, path) {\n        for (let i in newObj) {\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\n                continue;\n            }\n            //Member is a new object. Call function recursivly.\n            if (Is.isObject(newObj[i])) {\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\n            }\n            //Member is null or a base type. Set it.\n            else {\n                oldObj[i] = newObj[i];\n            }\n        }\n    }\n    setMembers(this, options, \"\");\n\n    this._evalOptions();\n};\n\n/**\n * Sets all options to their default values.\n * @public\n */\nOptions.prototype.setDefault = function () {\n    Object.assign(this, Options.getDefault());\n    this._isOk = true;\n};\n\n/**\n * Callback function for getting data value for a given index.\n * Used instead of dataX[index] and dataY[index].\n * Has built in functionality for averaging. Implicit X-values and more.\n * @callback Options~getDataCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback used to get correct X and X value data.\n * Used by the graph render function to improve performance.\n * @public\n * @param {string} axis - X or Y axis.\n * @param {int} dataIndex - The index in the data set.\n * @returns {function}\n */\nOptions.prototype.getDataCallback = function (axis, dataIndex, start) {\n    let data;\n    //X-axis.\n    if (axis.toLowerCase() === \"x\") {\n        //Has no dataX. Return index + 1.\n        if (this.graph.dataX.length === 0) {\n            return function (index) {\n                return index + 1;\n            };\n        }\n        //Have one dataX for all dataY. \n        if (this.graph.dataX.length === 1) {\n            data = this.graph.dataX[0];\n        }\n        //Have one dataX for each dataY. \n        else {\n            data = this.graph.dataX[dataIndex];\n        }\n    }\n    //Y-axis.\n    else if (axis.toLowerCase() === \"y\") {\n        data = this.graph.dataY[dataIndex];\n        //Use smoothing.\n        if (this.graph.smoothing) {\n            return this._getDataCallbackSmoothing(start, data);\n        }\n    }\n    else {\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\n    }\n    //Default\n    return function (index) {\n        return data[index];\n    };\n};\n\n/**\n * Return getDataCallback for smoothing\n * @private\n */\nOptions.prototype._getDataCallbackSmoothing = function (start, data) {\n    const centralIndex = Math.max(0, start - 1);\n    const window = Static.getSmoothingWindow(centralIndex, this.graph.smoothing, data.length);\n    let low = window.low;\n    let high = window.high;\n    let sum = 0;\n    for (let i = low; i <= high; ++i) {\n        sum += data[i];\n    }\n    const threshold = 2 * this.graph.smoothing;\n    return function (index) {\n        //Decrease window size.\n        if (high === data.length - 1) {\n            low = index + index - high;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Increase window size.\n        else if (high < threshold) {\n            high = index + index - low;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Move window.\n        else {\n            sum -= data[low];\n            ++low;\n            ++high;\n            sum += data[high];\n        }\n        //Calculate average value.\n        return sum / (high - low + 1);\n    };\n}\n\n/**\n * Evaluates the options and sets ok status flag.\n * @private\n */\nOptions.prototype._evalOptions = function () {\n    var optionsOk = true;\n    var obj, obj2, name, name2;\n    var options = this;\n    function set(path) {\n        name = path;\n        obj = options;\n        var paths = path.split(\".\");\n        for (var i = 0; i < paths.length; ++i) {\n            obj = obj[paths[i]];\n        }\n    }\n    function set2(path) {\n        name2 = path;\n        obj2 = options;\n        var paths = path.split(\".\");\n        for (var i = 0; i < paths.length; ++i) {\n            obj2 = obj2[paths[i]];\n        }\n    }\n    function error(msg) {\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\n        optionsOk = false;\n    }\n    function evalType(type) {\n        const res = Is.isOfType(obj, type);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of type: \" + type);\n        }\n        return res;\n    }\n    function evalArrayContains(type) {\n        const res = Is.isContent(obj, type);\n        if (!res) {\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\n        }\n        return res;\n    }\n    function evalAlign(noCenter) {\n        const res = Is.isAlignment(obj, noCenter);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\n        }\n        return res;\n    }\n    function evalCond(cond) {\n        const res = eval(cond);\n        if (!res) {\n            cond = cond.replaceAll(\"obj2\", name2).trim();\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\n            cond = cond.replaceAll(\"obj\", \"\").trim();\n            if (Is.isArray(obj)) {\n                error(\"Failed condition: \" + cond);\n            }\n            else {\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\n            }\n        }\n        return res;\n    }\n\n    set(\"debug\");\n    evalType(\"bool\");\n\n    set(\"interaction\");\n    if (evalType(\"object\")) {\n        set(\"interaction.resize\");\n        evalType(\"bool\");\n\n        set(\"interaction.trackMouse\");\n        evalType(\"bool\");\n\n        set(\"interaction.zoom\");\n        evalType(\"bool\");\n\n        set(\"interaction.smoothing\");\n        evalType(\"bool\");\n    }\n\n    set(\"title\");\n    if (evalType(\"object\")) {\n        set(\"title.bold\");\n        evalType(\"bool\");\n\n        set(\"title.label\");\n        evalType(\"string\");\n\n        set(\"title.size\");\n        evalType(\"int\");\n        evalCond(\"obj > 0\");\n\n        set(\"title.offsetX\");\n        evalType(\"int\");\n\n        set(\"title.offsetY\");\n        evalType(\"int\");\n\n        set(\"title.padding\");\n        evalType(\"int\");\n\n        set(\"title.font\");\n        evalType(\"font\");\n\n        set(\"title.color\");\n        evalType(\"color\");\n\n        set(\"title.align\");\n        evalAlign();\n    }\n\n    set(\"legend\");\n    if (evalType(\"object\")) {\n        set(\"legend.location\");\n        evalType(\"string\");\n\n        set(\"legend.font\");\n        evalType(\"font\");\n\n        set(\"legend.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"legend.offsetX\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.offsetY\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.align\");\n        evalAlign(true);\n\n        set(\"legend.newLine\");\n        evalType(\"bool\");\n    }\n\n    set(\"highlight\");\n    if (evalType(\"object\")) {\n        set(\"highlight.xMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.xMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.color\");\n        evalType(\"color\");\n    }\n\n    set(\"zoom\");\n    if (evalType(\"object\")) {\n        set(\"zoom.xMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.xMax\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMax\");\n        evalType(\"number|null\");\n    }\n\n    set(\"graph\");\n    if (evalType(\"object\")) {\n        set(\"graph.dataX\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n\n            set2(\"graph.dataY\");\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\n                evalCond(\"obj.length <= obj2.length\");\n            }\n        }\n\n        set(\"graph.dataY\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n            set2(\"graph.dataX\");\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\n            if (obj2.length === 0 || obj2.length === 1) {\n                //Check so that all dataY are the same size.\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj[0].length) {\n                        error(\"Not all arrays are of the same size.\");\n                    }\n                }\n                //If dataX.length == 1. Check if same length as dataY.\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\n                    error(\"Size does not match dataX.\");\n                }\n            }\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\n            else if (obj.length === obj2.length) {\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj2[i].length) {\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\n                    }\n                }\n            }\n        }\n\n        set(\"graph.colors\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"color\");\n        }\n\n        set(\"graph.names\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"string\");\n        }\n\n        set(\"graph.lineWidth\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.smoothing\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.simplify\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"graph.fill\");\n        evalType(\"bool\");\n\n        set(\"graph.compositeOperation\");\n        evalType(\"compositeOperation\");\n    }\n\n    set(\"axes\");\n    if (evalType(\"object\")) {\n        set(\"axes.tickMarkers\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickMarkers.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickMarkers.length\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickMarkers.color\");\n            evalType(\"color\");\n        }\n\n        set(\"axes.tickLabels\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickLabels.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickLabels.color\");\n            evalType(\"color\");\n\n            set(\"axes.tickLabels.font\");\n            evalType(\"font\");\n\n            set(\"axes.tickLabels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        set(\"axes.labels\");\n        if (evalType(\"object\")) {\n            set(\"axes.labels.color\");\n            evalType(\"color\");\n\n            set(\"axes.labels.font\");\n            evalType(\"font\");\n\n            set(\"axes.labels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.labels.offset\");\n            evalType(\"int\");\n\n            set(\"axes.labels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        //axes x and y\n        var axes = [\"axes.x\", \"axes.y\"];\n        for (var i = 0; i < axes.length; ++i) {\n            set(axes[i]);\n            if (evalType(\"object\")) {\n                set(axes[i] + \".show\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".inverted\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".log\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\n                evalType(\"int\");\n                evalCond(\"obj >= 0\");\n\n                set(axes[i] + \".grid\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".grid.width\");\n                    evalType(\"int\");\n                    evalCond(\"obj >= 0\");\n\n                    set(axes[i] + \".grid.color\");\n                    evalType(\"color\");\n                }\n\n                set(axes[i] + \".label\");\n                evalType(\"string\");\n\n                set(axes[i] + \".bounds\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".bounds.min\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.min\");\n                    set2(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\n                        evalCond(\"obj < obj2\");\n                    }\n                }\n\n                set(axes[i] + \".legendValueFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerValuePreFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerValuePostFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".tickerLabelFormatter\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n\n                set(axes[i] + \".ticker\");\n                if (!Is.isNull(obj)) {\n                    evalType(\"function\");\n                }\n            }\n        }\n    }\n\n    set(\"border\");\n    if (evalType(\"object\")) {\n        set(\"border.style\");\n        evalType(\"borderStyle\");\n\n        set(\"border.color\");\n        evalType(\"color\");\n\n        set(\"border.width\");\n        evalType(\"borderWidth\");\n    }\n\n    set(\"spinner\");\n    if (evalType(\"object\")) {\n        set(\"spinner.show\");\n        evalType(\"bool\");\n\n        set(\"spinner.lines\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.length\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.width\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.radius\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.corners\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"spinner.rotate\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.direction\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj === -1 || obj === 1\");\n        }\n\n        set(\"spinner.color\");\n        evalType(\"color\");\n\n        set(\"spinner.speed\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.trail\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.shadow\");\n        evalType(\"bool\");\n\n        set(\"spinner.hwaccel\");\n        evalType(\"bool\");\n\n        set(\"spinner.position\");\n        if (evalType(\"string\")) {\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\n        }\n\n        set(\"spinner.top\");\n        evalType(\"size\");\n\n        set(\"spinner.left\");\n        evalType(\"size\");\n    }\n\n    this._isOk = optionsOk;\n};\n\n/**\n @typedef OPTIONS_OBJECT\n @type {object}\n\n @property {bool} debug - If true debug info will be outputted to the console.\n\n @property {object} interaction - Options regarding user interaction with the graph.\n @property {bool} resize - If true the graph will be resized automatically.\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\n @property {bool} zoom - If true zoom is enabled.\n @property {bool} smoothing - If true interactive smoothing input is enabled.\n\n @property {object} title - Options regarding the title.\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\n @property {bool} title.bold - If true the label font is bold.\n @property {int} title.size - Font height/size in pixels of the text.\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\n @property {int} title.padding - Padding in pixels. Between title and graph.\n @property {string} title.font - Font family of the text.\n @property {string} title.color - Color of the text.\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\n\n @property {object} legend - Options regarding the legend.\n @property {bool} legend.show - If true the legend is shown.\n @property {string} legend.font - Font family of the text.\n @property {int} legend.size - Font size/height in pixels.\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\n @property {int} legend.newLine -  If true a new line is made between each data set.\n\n @property {object} highlight - Options regarding highlighting.\n @property {bool} highlight.xMin - X-axis low value. \n @property {int} highlight.xMax - X-axis high value.\n @property {string} highlight.yMin - Y-axis low value.\n @property {int} highlight.yMax - Y-axis high value.\n @property {string} highlight.color - Color of the highlight.\n\n @property {object} zoom - Options regarding default zoom.\n @property {bool} zoom.xMIn - X-axis low value. \n @property {int} zoom.xMax - X-axis high value.\n @property {string} zoom.yMin - Y-axis low value.\n @property {int} zoom.yMax - Y-axis high value.\n\n @property {object} graph - Options regarding the graph curve.\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\n @property {array<string>} graph.colors - List of colors for each dataY set.\n @property {array<string>} graph.names - List of names for each dataY set.\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\n @property {bool} graph.fill - If true the area under the graph will be filled.\n @property {string} graph.compositeOperation - Context global composit operation.\n\n @property {object} axes - Options regarding the axes.\n\n @property {object} axes.tickMarkers - Options regarding the tick markers.\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\n @property {string} axes.tickMarkers.color - Color of the tick markers.\n\n @property {object} axes.tickLabels - Options regarding the tick labels.\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\n @property {string} axes.tickLabels.color - Color of the text.\n @property {string} axes.tickLabels.font - Font family of the text.\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\n\n @property {object} axes.labels - Options regarding the axes labels.\n @property {string} axes.labels.color - Color of the text.\n @property {string} axes.labels.font - Font family of the text.\n @property {int} axes.labels.size - Font size/height in pixels of the text.\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\n\n @property {object} axes.x - Options regarding the X-axis.\n @property {bool} axes.x.show - If true the X-axis is shown.\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\n @property {int} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the values. Null = default callback.\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.x.grid - Options regarding the X-axis grid.\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.x.grid.color - Color of the grid lines.\n\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} axes.y - Options regarding the Y-axis.\n @property {bool} axes.y.show - If true the X-axis is shown.\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\n @property {int} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the values. Null = default callback.\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.y.grid.color - Color of the grid lines.\n\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} border - Options regarding the graph border.\n @property {string} border.style - Border style. solid, dotted...\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\n\n\n */\n\n/**\n * Callback function for formatting values.\n * @callback formatterCallback\n * @param {number} value\n * @returns {string}\n */\n\n/**\n * Callback function for creating ticks.\n * @callback tickerCallback\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{value:number}>}\n */\n\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \r\n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\r\n * Used to automatically get pixel perfect canvas size \r\n * and to make it easier to draw simple elements.\r\n */\r\n\r\n/**\r\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\r\n * @public\r\n * @constructor\r\n * @param {dom} container - Container dom.\r\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\r\n * @returns {Canvas}\r\n */\r\nfunction Canvas(container, id, dontScale) {\r\n    this._canvas = document.createElement(\"canvas\");\r\n    if (id) {\r\n        this._canvas.id = id;\r\n    }\r\n    container.append(this._canvas);\r\n    this._context = this._canvas.getContext(\"2d\");\r\n\r\n    this._dontScale = dontScale;\r\n\r\n    this._canvas.style.position = \"absolute\";\r\n    this._canvas.style.margin = 0;\r\n    this._canvas.style.padding = 0;\r\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\r\n\r\n    //Set default position.\r\n    this.setPosition(0, 0);\r\n    //Fill parent div is default size.\r\n    this.setSize(\"100%\", \"100%\");\r\n}\r\n\r\n/**\r\n * Set a new parent for the canvas. Leave empty to only remove current parent.\r\n * @public\r\n * @param {dom} container - Container dom.\r\n */\r\nCanvas.prototype.setParent = function (container) {\r\n    this._canvas.remove();\r\n    if (container) {\r\n        container.append(this._canvas);\r\n    }\r\n};\r\n\r\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\r\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\r\n};\r\n\r\n/**\r\n * Get the html5 canvas.\r\n * @public\r\n * @returns {canvas}\r\n */\r\nCanvas.prototype.getCanvas = function () {\r\n    return this._canvas;\r\n};\r\n\r\n/**\r\n * Get the html5 2D context. Used when performance and less function calls are needed.\r\n * @public\r\n * @returns {context}\r\n */\r\nCanvas.prototype.getContext = function () {\r\n    return this._context;\r\n};\r\n\r\n/**\r\n * Get the x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getX = function () {\r\n    return this._x;\r\n};\r\n\r\n/**\r\n * Get the y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getY = function () {\r\n    return this._y;\r\n};\r\n\r\n/**\r\n * Get the content x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentX = function () {\r\n    return this._contentX;\r\n};\r\n\r\n/**\r\n * Get the content y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentY = function () {\r\n    return this._contentY;\r\n};\r\n\r\n/**\r\n * Get the canvas width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getWidth = function () {\r\n    //return this._canvas.outerWidth(); TODO\r\n    return this._canvas.offsetWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getHeight = function () {\r\n    //return this._canvas.outerHeight(); TODO\r\n    return this._canvas.offsetHeight;\r\n};\r\n\r\n/**\r\n * Get the canvas content width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getContentWidth = function () {\r\n    //return this._canvas.width(); TODO\r\n    return this._canvas.clientWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas content height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getContentHeight = function () {\r\n    //return this._canvas.height(); TODO\r\n    return this._canvas.clientHeight;\r\n};\r\n\r\n/**\r\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetX = function () {\r\n    return this._contentOffsetX;\r\n};\r\n\r\n/**\r\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetY = function () {\r\n    return this._contentOffsetY;\r\n};\r\n\r\n\r\n/**\r\n * Get text with in pixels.\r\n * @public\r\n * @param {string} text - Text to measure.\r\n * @param {fontString} font - Font to use.\r\n * @returns {int} Width in pixels.\r\n */\r\nCanvas.prototype.getTextWidth = function (text, font) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    return this._context.measureText(text).width;\r\n};\r\n\r\n/**\r\n * Clear canvas.\r\n * @public\r\n */\r\nCanvas.prototype.clear = function () {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Clear area.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(x, y, width, height);\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Set z-index.\r\n * @public\r\n * @param {int} zIndex - The new Z-index.\r\n */\r\nCanvas.prototype.setZIndex = function (zIndex) {\r\n    this._canvas.style[\"z-index\"] = zIndex;\r\n};\r\n\r\n/**\r\n * Set any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @param {type} value - Member value.\r\n */\r\nCanvas.prototype.set = function (member, value) {\r\n    this._context[member] = value;\r\n};\r\n\r\n/**\r\n * Set canvas border parameters.\r\n * @param {string} style\r\n * @param {string} color\r\n * @param {string} width\r\n */\r\nCanvas.prototype.setBorder = function (style, color, width) {\r\n    this._canvas.style.borderStyle = style;\r\n    this._canvas.style.borderColor = color;\r\n    this._canvas.style.borderWidth = width;\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Get any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @returns {type}\r\n */\r\nCanvas.prototype.get = function (member) {\r\n    return this._context[member];\r\n};\r\n\r\n/**\r\n * Get scale ratio.\r\n * @public\r\n * @returns {number}\r\n */\r\nCanvas.prototype.getRatio = function () {\r\n    return this._ratio;\r\n};\r\n\r\n/**\r\n * Rotate the canvas.\r\n * @public\r\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\r\n */\r\nCanvas.prototype.rotate = function (rotateDegrees) {\r\n    this._context.rotate(rotateDegrees * Math.PI / 180);\r\n};\r\n\r\n/**\r\n * Set position of canvas relative to it's parent.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\r\n    this._x = x;\r\n    this._y = y;\r\n    if (alignRight) {\r\n        this._canvas.style.left = \"\";\r\n        this._canvas.style.right = x + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.left = x + \"px\";\r\n        this._canvas.style.right = \"\";\r\n    }\r\n    if (valignBottom) {\r\n        this._canvas.style.top = \"\";\r\n        this._canvas.style.bottom = y + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.top = y + \"px\";\r\n        this._canvas.style.bottom = \"\";\r\n    }\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Set size of canvas. \r\n * @public\r\n * @param {int} width - Width in pixels. \r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.setSize = function (width, height) {\r\n    if (width !== undefined) {\r\n        if (typeof width === \"number\") {\r\n            width = width + \"px\";\r\n        }\r\n        this._canvas.style.width = width;\r\n    }\r\n    if (height !== undefined) {\r\n        if (typeof height === \"number\") {\r\n            height = height + \"px\";\r\n        }\r\n        this._canvas.style.height = height;\r\n    }\r\n    this.resize();\r\n};\r\n\r\n/**\r\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\r\n * @public\r\n */\r\nCanvas.prototype.resize = function () {\r\n    //Calculate pixel ratio.\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const bsr = this._context.webkitBackingStorePixelRatio ||\r\n        this._context.mozBackingStorePixelRatio ||\r\n        this._context.msBackingStorePixelRatio ||\r\n        this._context.oBackingStorePixelRatio ||\r\n        this._context.backingStorePixelRatio || 1;\r\n    this._ratio = dpr / bsr;\r\n\r\n    //Update canvas.\r\n    this._canvas.width = this.getContentWidth() * this._ratio;\r\n    this._canvas.height = this.getContentHeight() * this._ratio;\r\n\r\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\r\n    if (!this._dontScale) {\r\n        this._context.scale(this._ratio, this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Draw a stroke/line rectangle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    //Line width build in both direction. Compensate coordinates.\r\n    x += this._context.lineWidth / 2;\r\n    y += this._context.lineWidth / 2;\r\n    width -= this._context.lineWidth;\r\n    height -= this._context.lineWidth;\r\n    this._context.strokeRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 1 coordinate.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 2 coordinates.\r\n * @public\r\n * @param {int} x1 - First X-axis pixel.\r\n * @param {int} y1 - First Y-axis pixel.\r\n * @param {int} x2 - Second X-axis pixel.\r\n * @param {int} y2 - Second Y-axis pixel.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\r\n};\r\n\r\n/**\r\n * Draw a stroked circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n * @param {int} width - Width of stroked line.\r\n */\r\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (width) {\r\n        this._context.lineWidth = width;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw a filled circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n */\r\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.fill();\r\n};\r\n\r\n/**\r\n * Draw a line.\r\n * @public\r\n * @param {int} x1 - First x-coordinate in pixels.\r\n * @param {int} y1 - First y-coordinate in pixels.\r\n * @param {int} x2 - Second x-coordinate in pixels.\r\n * @param {int} y2 - Second y-coordinate in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(x1, y1);\r\n    this._context.lineTo(x2, y2);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw filled text.\r\n * @public\r\n * @param {string} text - Text to draw.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {string} font - Font to use.\r\n * @param {string} color - Color to use.\r\n * @param {string} align - Alignment ot use.\r\n * @param {string} baseline - Baseline to use.\r\n * @param {number} rotate - Rotate text number of degrees.\r\n */\r\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    if (align) {\r\n        this._context.textAlign = align;\r\n    }\r\n    if (baseline) {\r\n        this._context.textBaseline = baseline;\r\n    }\r\n    if (rotate) {\r\n        this._context.save();\r\n        this._context.translate(x, y);\r\n        this._context.rotate(rotate * Math.PI / 180);\r\n        this._context.fillText(text, 0, 0);\r\n        this._context.restore();\r\n    }\r\n    else {\r\n        this._context.fillText(text, x, y);\r\n    }\r\n};\r\n\r\n/**\r\n * Plot graph curve.\r\n * @public\r\n * @param {array} array - Input data. [[x, y], [x, y]]\r\n * @param {string} color - Color of stroked line.\r\n * @param {int} lineWidth - Width in pixels of stroked line.\r\n */\r\nCanvas.prototype.graph = function (array, color, lineWidth) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(array[0][0], array[0][1]);\r\n    for (let i = 1; i < array.length; ++i) {\r\n        this._context.lineTo(array[i][0], array[0][1]);\r\n    }\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Fill entire canvas with the given color.\r\n * @public\r\n * @param {string} color - Color to use.\r\n */\r\nCanvas.prototype.fill = function (color) {\r\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\r\n};\r\n\r\nCanvas.prototype.disableMouseInteraction = function () {\r\n    this._canvas.style[\"pointer-events\"] = \"none\";\r\n};\r\n\r\n/**\r\n * Calculate content X and Y.\r\n * @private\r\n */\r\nCanvas.prototype._calculateContentPosition = function () {\r\n    const compStyle = getComputedStyle(this._canvas);\r\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\r\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\r\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\r\n    this._contentX = this._x + this._contentOffsetX;\r\n    this._contentY = this._y + this._contentOffsetY;\r\n};\r\n\r\nexport default Canvas;","import Static from \"./Static\";\r\nimport Is from \"./Is\";\r\n\r\nif (!Math.log10) {\r\n    Math.log10 = Static.log10;\r\n}\r\n\r\n/** \r\n * The Axis class is a single axis to the Graph class.\r\n */\r\n\r\n/**\r\n * Create new graph axis.\r\n * @public\r\n * @constructor\r\n * @param {Options} options - GraphOptions object.\r\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\r\n * @param {string} orientation - X or Y axis.\r\n * @returns {Axis}\r\n */\r\nfunction Axis(options, graphCanvas, axis) {\r\n    if (axis.toLowerCase() === \"x\") {\r\n        this._isX = true;\r\n        this._axis = options.axes.x;\r\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\r\n    }\r\n    else if (axis.toLowerCase() === \"y\") {\r\n        this._isX = false;\r\n        this._axis = options.axes.y;\r\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\r\n    }\r\n    else {\r\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\r\n        return;\r\n    }\r\n    this._options = options;\r\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\r\n}\r\n\r\n/**\r\n * Returns true if all bounds are set.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.hasBounds = function () {\r\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\r\n};\r\n\r\n/**\r\n * True of this axis is logarithmic.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isLog = function () {\r\n    return this._axis.log;\r\n};\r\n\r\n/**\r\n * True of this axis is inverted.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isInverted = function () {\r\n    return this._axis.inverted;\r\n};\r\n\r\n/**\r\n * Get min bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMin = function () {\r\n    //Always prioritize override bounds.\r\n    if (!Is.isNull(this._overrideMin)) {\r\n        return this._overrideMin;\r\n    }\r\n    return this._min;\r\n};\r\n\r\n/**\r\n * Get max bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMax = function () {\r\n    //Always prioritize override bounds.\r\n    if (!Is.isNull(this._overrideMax)) {\r\n        return this._overrideMax;\r\n    }\r\n    return this._max;\r\n};\r\n\r\n/**\r\n * Get the axis label. Uses the options value formatter if set.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabel = function () {\r\n    return this._axis.label;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the tick labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getTickLabelsFont = function () {\r\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the axes labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabelFont = function () {\r\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\r\n};\r\n\r\n/**\r\n * Get bounds label width in pixels. Uses the options value formatter if set.\r\n * @public\r\n * @returns {int}\r\n */\r\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\r\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\r\n    if (pad) {\r\n        bound = Static.round(bound + 0.111111111111111, 3);\r\n    }\r\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\r\n};\r\n\r\n/**\r\n * Get the ticks array.\r\n * @public\r\n * @returns {array}\r\n */\r\nAxis.prototype.getTicks = function () {\r\n    return this._ticks;\r\n};\r\n\r\n/**\r\n * Return true if this axis has overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.hasZoom = function () {\r\n    return !Is.isNull(this._overrideMin) || !Is.isNull(this._overrideMax);\r\n};\r\n\r\n/**\r\n * Override bounds. Temporary override user given bounds. \r\n * @public\r\n */\r\nAxis.prototype.zoom = function (min, max) {\r\n    this._overrideMin = min;\r\n    this._overrideMax = max;\r\n    if (!Is.isNull(this.getMin()) || !Is.isNull(this.getMax())) {\r\n        this.calculateTicks();\r\n    }\r\n};\r\n\r\n/**\r\n * Remove overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.clearZoom = function () {\r\n    this.zoom();\r\n};\r\n\r\n/**\r\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\r\n * @public\r\n */\r\nAxis.prototype.calculateBounds = function () {\r\n    let newMin, newMax;\r\n\r\n    //Prioritize user given bounds.\r\n    if (!Is.isNull(this._axis.bounds.min)) {\r\n        newMin = this._axis.bounds.min;\r\n    }\r\n    if (!Is.isNull(this._axis.bounds.max)) {\r\n        newMax = this._axis.bounds.max;\r\n    }\r\n\r\n    //Both bounds are not set by the user. Calculate missing.\r\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\r\n        let calcBounds;\r\n        if (this._isX) {\r\n            calcBounds = this._calculateXBounds();\r\n        }\r\n        else {\r\n            calcBounds = this._calculateYBounds();\r\n        }\r\n\r\n        if (calcBounds) {\r\n            //Use both calculated bounds.\r\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\r\n                newMin = calcBounds.min;\r\n                newMax = calcBounds.max;\r\n                //Both values are calculated. Move both.\r\n                if (newMin === newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\r\n                    --newMin;\r\n                    ++newMax;\r\n                }\r\n            }\r\n            //Use only calculated min.\r\n            else if (Is.isNull(newMin)) {\r\n                newMin = calcBounds.min;\r\n                //Only move the calculated value.\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\r\n                    newMin = newMax - 1;\r\n                }\r\n            }\r\n            //use only calculated max.\r\n            else if (Is.isNull(newMax)) {\r\n                newMax = calcBounds.max;\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\r\n                    newMax = newMin + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\r\n        if (this._axis.log && newMin <= 0) {\r\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\r\n            newMin = newMax = undefined;\r\n        }\r\n    }\r\n    this._min = newMin;\r\n    this._max = newMax;\r\n};\r\n\r\n/**\r\n * Calculate graph axes ticks.\r\n * @public\r\n */\r\nAxis.prototype.calculateTicks = function () {\r\n    let ticks;\r\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\r\n    //Create ticks with user given options ticker.\r\n    if (this._axis.ticker) {\r\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n    //Create ticks with the default ticker.\r\n    else {\r\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n\r\n    if (!ticks.length) {\r\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\r\n    }\r\n\r\n    //Update ticks with pixel coordinates.\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\r\n    }\r\n    //Show tick markers.\r\n    if (this._options.axes.tickMarkers.show) {\r\n        ticks.markers = {\r\n            offset: this._options.axes.tickMarkers.offset,\r\n            length: this._options.axes.tickMarkers.length,\r\n            width: this._options.axes.tickMarkers.width,\r\n            color: this._options.axes.tickMarkers.color\r\n        };\r\n    }\r\n    //Show tick labels.\r\n    if (this._options.axes.tickLabels.show) {\r\n        ticks.labels = {\r\n            offset: this._options.axes.tickLabels.offset,\r\n            size: this._options.axes.tickLabels.size,\r\n            color: this._options.axes.tickLabels.color,\r\n            font: this.getTickLabelsFont(),\r\n            width: []\r\n        };\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\r\n        }\r\n    }\r\n    //Show grid.\r\n    if (this._axis.grid.width) {\r\n        ticks.grid = {\r\n            width: this._axis.grid.width,\r\n            color: this._axis.grid.color\r\n        };\r\n    }\r\n    this._ticks = ticks;\r\n};\r\n\r\n/**\r\n * Get value from given pixel coordinate.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.pixelToValue = function (pixel) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get pixel coordinate from given value.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.valueToPixel = function (value) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Format the given value. Uses value formatter in options if available.\r\n * @public\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\nAxis.prototype.formatLegendValue = function (value) {\r\n    //Use user given formatter.\r\n    if (this._axis.legendValueFormatter) {\r\n        return this._axis.legendValueFormatter(value);\r\n    }\r\n    //Use default value formatter.\r\n    else {\r\n        return Static.round(value, 5);\r\n    }\r\n};\r\n\r\n/**\r\n * Callback function for getting pixel coordinate from a given value.\r\n * Much faster than asking this class valueToPixel function for each value.\r\n * Needs to be required if window changes size or new bounds are set.\r\n * Safest to aquire for each render pass.\r\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\r\n * @callback Axis~valueToPixelCallback\r\n * @param {int} index\r\n * @returns {number}\r\n */\r\n\r\n/**\r\n * Get a callback to calculate the pixel coordinate for a given value.\r\n * Used by the graph render function to improve performance.\r\n * @public\r\n * @returns {Axis~valueToPixelCallback}\r\n */\r\nAxis.prototype.getValueToPixelCallback = function () {\r\n    let num, denom, numVar, numOp, logFunc;\r\n    const size = this._getSize() * this._getRatio();\r\n\r\n    //Inverted X or normal Y.\r\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n        numVar = this.getMax();\r\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\r\n    }\r\n    //Normal X or inverted Y.\r\n    else {\r\n        numVar = this.getMin();\r\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\r\n    }\r\n\r\n    //Axis is logarithmic.\r\n    if (this._axis.log) {\r\n        numOp = \"/\";\r\n        logFunc = \"Math.log10\";\r\n    }\r\n    //Axis is linear.\r\n    else {\r\n        numOp = \"-\";\r\n        logFunc = \"\";\r\n    }\r\n\r\n    //Only do the numerator operation on the numerator if the variable is not zero.\r\n    if (numVar) {\r\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\r\n    }\r\n    else {\r\n        num = logFunc + \"(value)\";\r\n    }\r\n\r\n    //Only do the fraction if the denominator is not 1.\r\n    if (denom !== 1) {\r\n        denom = \"/ \" + denom;\r\n    }\r\n    else {\r\n        denom = \"\";\r\n    }\r\n\r\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\r\n};\r\n\r\n/**\r\n * Calculate X-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateXBounds = function () {\r\n    //Calculate missing X-axis bounds from dataX values.\r\n    if (this._options.graph.dataX.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\r\n        }\r\n        let min = 4294967296;\r\n        let max = -4294967296;\r\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\r\n            const data = this._options.graph.dataX[i];\r\n            min = Math.min(min, data[0], data[data.length - 1]);\r\n            max = Math.max(max, data[0], data[data.length - 1]);\r\n        }\r\n        return { min: min, max: max };\r\n    }\r\n    //Calculate X-axis bounds from dataY length.\r\n    else if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\r\n        }\r\n        let max = 0;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            max = Math.max(max, this._options.graph.dataY[i].length);\r\n        }\r\n        return { min: 1, max };\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate Y-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateYBounds = function () {\r\n    //Calculate Y-axis bounds from dataY values.\r\n    if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\r\n        }\r\n        let min = null;\r\n        let max = null;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            const data = this._options.graph.dataY[i];\r\n            if (data.length && min === null) {\r\n                min = 4294967296;\r\n                max = -4294967296;\r\n            }\r\n            for (let j = 0; j < data.length; ++j) {\r\n                min = Math.min(min, data[j]);\r\n                max = Math.max(max, data[j]);\r\n            }\r\n        }\r\n        return min !== null\r\n            ? { min, max }\r\n            : null;\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Default get ticks funciton. Used when no ticker is set in options.\r\n * @private\r\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\r\n * @param {number} minValue - Min/lower bounds value.\r\n * @param {number} maxValue - Max/upper bounds value.\r\n * @param {int} graphSize - Size(width or height) of graph in pixels.\r\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\r\n * @returns {array<{number, string}>}\r\n */\r\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\r\n    //Pre-format ticker values.\r\n    if (this._axis.tickerValuePreFormatter) {\r\n        minValue = this._axis.tickerValuePreFormatter(minValue);\r\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\r\n    }\r\n\r\n    let ticks;\r\n\r\n    //If the range is to small even a log axis will get linear values.\r\n    if (isLog && maxValue - minValue >= 4 * minValue) {\r\n        ticks = getDefaultLogTicks(minValue, maxValue);\r\n    }\r\n    else {\r\n        ticks = getDefaultLinTicks(minValue, maxValue, graphSize, labelSize);\r\n    }\r\n\r\n    //Post-format ticker values.\r\n    if (this._axis.tickerValuePostFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    //Add user formatted labels.\r\n    if (this._axis.tickerLabelFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n    //Add default formatted labels.\r\n    else {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    return ticks;\r\n};\r\n\r\nfunction defaultTickerLabelFormatter(value) {\r\n    if (value < 0) {\r\n        return '-' + defaultTickerLabelFormatter(-value);\r\n    }\r\n    let ranges = [];\r\n    if (value >= 1e3) {\r\n        ranges = [\r\n            { divider: 1e24, suffix: 'Y' },\r\n            { divider: 1e21, suffix: 'Z' },\r\n            { divider: 1e18, suffix: 'E' },\r\n            { divider: 1e15, suffix: 'P' },\r\n            { divider: 1e12, suffix: 'T' },\r\n            { divider: 1e9, suffix: 'G' },\r\n            { divider: 1e6, suffix: 'M' },\r\n            { divider: 1e3, suffix: 'k' }\r\n        ];\r\n    }\r\n    else if (value < 1e-2) {\r\n        ranges = [\r\n            { divider: 1e-3, suffix: 'm' },\r\n            { divider: 1e-6, suffix: 'µ' },\r\n            { divider: 1e-9, suffix: 'n' },\r\n            { divider: 1e-12, suffix: 'p' },\r\n            { divider: 1e-15, suffix: 'f' },\r\n            { divider: 1e-18, suffix: 'a' },\r\n            { divider: 1e-21, suffix: 'z' },\r\n            { divider: 1e-24, suffix: 'y' }\r\n        ];\r\n    }\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        if (value >= ranges[i].divider) {\r\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\r\n        }\r\n    }\r\n    return value.toString();\r\n}\r\n\r\n//For a given value calculate the best step value.\r\nfunction getStepValue(isLog, value) {\r\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\r\n    const exp = Math.floor(log10(value));\r\n    for (let i = 0; i < mult.length; ++i) {\r\n        const newValue = Math.pow(10, exp) * mult[i];\r\n        if (newValue >= value) {\r\n            return newValue;\r\n        }\r\n    }\r\n}\r\n\r\n//Get linear ticks.\r\nfunction getDefaultLinTicks(minValue, maxValue, graphSize, labelSize) {\r\n    //Max number of labels.\r\n    const maxNumLabels = graphSize / (labelSize * 1.5);\r\n    //Value range\r\n    const range = maxValue - minValue;\r\n    //Get ticker value step.\r\n    const step = getStepValue(false, range / maxNumLabels);\r\n\r\n    //Calculate start pos.\r\n    let start = minValue;\r\n    //Make sure start is on a step position.\r\n    const diff = modf(start, step);\r\n    if (diff > 0) {\r\n        start += step - diff;\r\n    }\r\n    if (diff < 0) {\r\n        start -= diff;\r\n    }\r\n\r\n    //Start and end value is the same. Just return the one value.\r\n    if (secureFloat(start) === secureFloat(maxValue)) {\r\n        return [{ value: secureFloat(start) }];\r\n    }\r\n\r\n    const ticks = [];\r\n    for (; start <= maxValue; start += step) {\r\n        const value = secureFloat(start);\r\n        ticks.push({ value });\r\n        //Reached infinite loop.\r\n        if (start === value + step) {\r\n            break;\r\n        }\r\n        start = value;\r\n    }\r\n    return ticks;\r\n}\r\n\r\n/**\r\n * Modulus for float.\r\n * @public\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {number}\r\n */\r\nfunction modf(a, b) {\r\n    return a - Math.round(a / b) * b;\r\n}\r\n\r\n//Get logarithmic ticks.\r\nfunction getDefaultLogTicks(minValue, maxValue) {\r\n    const ticks = [];\r\n    let step = getStepValue(true, minValue);\r\n    for (; ;) {\r\n        for (let i = 1; i < 10; ++i) {\r\n            let value = i * step;\r\n            if (value > maxValue) {\r\n                return ticks;\r\n            }\r\n            ticks.push({ value: secureFloat(value) });\r\n        }\r\n        step *= 10;\r\n    }\r\n}\r\n\r\nexport default Axis;\r\n\r\n/**\r\n * Secure float precision.\r\n * @public\r\n * @param {number} val\r\n * @returns {number}\r\n */\r\nfunction secureFloat(val) {\r\n    return parseFloat(val.toPrecision(15));\r\n}\r\n\r\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\r\nimport Input from \"./Input\";\r\n\r\n/** \r\n * Interaction is a class that handles the user interaction for the Graph class.\r\n */\r\n\r\n/**\r\n * Create a new Interaction.\r\n * @public\r\n * @constructor\r\n * @param {Graph} graph - Graph instance this interaction belongs to.\r\n * @returns {Interaction}\r\n */\r\nfunction Interaction(graph) {\r\n    this._graph = graph;\r\n}\r\n\r\n/**\r\n * Update(add/remove) interaction events.\r\n * @public\r\n */\r\nInteraction.prototype.updateOptions = function () {\r\n    //Resizing.\r\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\r\n        this._resizeCallback = this._addResizeEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\r\n        window.removeEventListener(\"resize\", this._resizeCallback);\r\n        this._resizeCallback = undefined;\r\n    }\r\n\r\n    //Mouse tracking.\r\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\r\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\r\n        const canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\r\n        this._mouseTrackingCallbacks = undefined;\r\n    }\r\n\r\n    //Zooming.\r\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\r\n        this._zoomCallbacks = this._addZoomEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\r\n        let canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\r\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\r\n        canvas = this._graph._canvas.background.getCanvas();\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\r\n        this._zoomCallbacks = undefined;\r\n    }\r\n\r\n    //Smooth option.\r\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\r\n        this._smoothingCallback = this._addSmoothingEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\r\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\r\n        this._smoothingCallback = undefined;\r\n        this._smoothingInput.remove();\r\n        this._smoothingInput = undefined;\r\n    }\r\n\r\n    //Every time options are updated. Update smoothing value if available.\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\r\n    }\r\n\r\n    this._createInteractionData();\r\n};\r\n\r\n/**\r\n * Clear interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.clear = function () {\r\n    this._graph._canvas.interaction.clear();\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"none\";\r\n    }\r\n};\r\n\r\n/**\r\n * Render interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.render = function () {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Inform the activity class that the graph has changed size and/or position.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\r\n        this._smoothingInput.style.left = x + \"px\";\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Add a resize event.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addResizeEvent = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    let timeOutResize;\r\n    //Re-plots the graph on resize end.\r\n    function resizeEnd() {\r\n        graph._canvas.background.resize();\r\n        graph._calculateGraphSize();\r\n        graph._plot();\r\n        timeOutResize = undefined;\r\n        self._resizing = false;\r\n    }\r\n    //Clear graph, hightlight and spinner features on resize start.\r\n    function resizeStart() {\r\n        self._resizing = true;\r\n        graph._canvas.graph.clear();\r\n        graph._canvas.highlight.clear();\r\n        graph._canvas.interaction.clear();\r\n        graph._renderLegend();\r\n    }\r\n    let lastWidth = this._graph._canvas.background.getWidth();\r\n    let lastHeight = this._graph._canvas.background.getHeight();\r\n    let lastPixelRatio = window.devicePixelRatio;\r\n    function callback() {\r\n        //Make sure that the size actually have changed.\r\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\r\n            lastWidth = graph._canvas.background.getWidth();\r\n            lastHeight = graph._canvas.background.getHeight();\r\n            lastPixelRatio = window.devicePixelRatio;\r\n            //First time the function is called for this resize event.\r\n            if (!timeOutResize) {\r\n                resizeStart();\r\n            }\r\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\r\n            clearTimeout(timeOutResize);\r\n            timeOutResize = setTimeout(resizeEnd, 500);\r\n        }\r\n    }\r\n\r\n    window.addEventListener(\"resize\", callback);\r\n    return callback;\r\n};\r\n\r\n/**\r\n * Add mouse tracking events.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addMouseTrackingEvents = function () {\r\n    const self = this;\r\n    const graph = this._graph;\r\n    function mouseMoveCallback(e) {\r\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\r\n            return;\r\n        }\r\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\r\n        const values = [valueX];\r\n        graph._canvas.interaction.clear();\r\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\r\n            const dataY = graph._options.graph.dataY[i];\r\n            //Cant track unexisting values.\r\n            if (!dataY.length) {\r\n                continue;\r\n            }\r\n            const dataXCallback = graph._options.getDataCallback(\"x\", i);\r\n            const res = Static.binarySearch(dataXCallback, dataY.length, valueX);\r\n            let valueY;\r\n            //Found exaxt X-value.\r\n            if (res.found !== undefined) {\r\n                if (graph._options.graph.smoothing) {\r\n                    valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueY = dataY[res.found];\r\n                }\r\n            }\r\n            //Binary search returned min and max at same value without a found.\r\n            //There is no matching value. Just abort.\r\n            else if (res.min === res.max) {\r\n                continue;\r\n            }\r\n            //Calculate Y-value from min max coordinates.\r\n            else {\r\n                const valueXMin = dataXCallback(res.min);\r\n                const valueXMax = dataXCallback(res.max);\r\n                const span = valueXMax - valueXMin;\r\n                const weightMin = 1 - (valueX - valueXMin) / span;\r\n                const weightMax = 1 - (valueXMax - valueX) / span;\r\n                let valueMin, valueMax;\r\n                if (graph._options.graph.smoothing) {\r\n                    valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\r\n                    valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueMin = dataY[res.min];\r\n                    valueMax = dataY[res.max];\r\n                }\r\n                valueY = valueMin * weightMin + valueMax * weightMax;\r\n            }\r\n\r\n            values[i + 1] = valueY;\r\n            const pixelY = graph._axes.y.valueToPixel(valueY);\r\n\r\n            if (isFinite(pixelY)) {\r\n                self._interactionData[i].moveTo(e.offsetX, pixelY);\r\n            }\r\n        }\r\n        graph._renderLegend(values);\r\n    }\r\n    function mouseOutCallback() {\r\n        if (!self.mouseDown) {\r\n            graph._canvas.interaction.clear();\r\n            graph._renderLegend();\r\n        }\r\n    }\r\n    const canvas = this._graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousemove\", mouseMoveCallback);\r\n    canvas.addEventListener(\"mouseout\", mouseOutCallback);\r\n    return { mousemove: mouseMoveCallback, mouseout: mouseOutCallback };\r\n};\r\n\r\n/**\r\n * Add zoom events.\r\n * @private\r\n * @returns {object} - object containing callbacks.\r\n */\r\nInteraction.prototype._addZoomEvents = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    this.mouseDown = false;\r\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\r\n    let startX, startY;\r\n    //true = horizontal. false = vertical.\r\n    let lastHorizontal;\r\n    const color = \"rgba(130, 130, 130, 0.2)\";\r\n    let lastX, lastY;\r\n\r\n    function mousedown(e) {\r\n        if (e.button === 0 && graph._axes.x.hasBounds() && graph._axes.y.hasBounds()) {\r\n            lastX = startX = e.offsetX;\r\n            lastY = startY = e.offsetY;\r\n            self.mouseDown = true;\r\n            lastHorizontal = undefined;\r\n            graph._renderLegend();\r\n        }\r\n    }\r\n    function mousemove(e) {\r\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\r\n            lastX = e.offsetX;\r\n            lastY = e.offsetY;\r\n            const diffX = Math.abs(startX - e.offsetX);\r\n            const diffY = Math.abs(startY - e.offsetY);\r\n            const newHorizontal = diffX > diffY;\r\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\r\n                lastHorizontal = newHorizontal;\r\n            }\r\n            graph._canvas.interaction.clear();\r\n            //Mark horizontally.\r\n            if (lastHorizontal) {\r\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\r\n            }\r\n            //Mark vertically.\r\n            else {\r\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\r\n            }\r\n        }\r\n    }\r\n    function mouseup(e) {\r\n        if (e.button === 0 && self.mouseDown) {\r\n            self.mouseDown = false;\r\n            if (startX !== e.offsetX || startY !== e.offsetY) {\r\n                graph._canvas.interaction.clear();\r\n                //X-axis.\r\n                if (lastHorizontal) {\r\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\r\n                    if (startX === x) {\r\n                        return;\r\n                    }\r\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\r\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\r\n                    graph._axes.x.zoom(min, max);\r\n                }\r\n                //Y-axis.\r\n                else {\r\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\r\n                    if (startY === y) {\r\n                        return;\r\n                    }\r\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\r\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\r\n                    graph._axes.y.zoom(min, max);\r\n                }\r\n                graph._plot();\r\n            }\r\n        }\r\n    }\r\n    function dblclick(e) {\r\n        //Prevents double click from selecting the div.\r\n        preventDefault(e);\r\n        if (graph._axes.x.hasZoom() || graph._axes.y.hasZoom()) {\r\n            graph._axes.x.clearZoom();\r\n            graph._axes.y.clearZoom();\r\n            graph._plot();\r\n        }\r\n    }\r\n    function mouseout(e) {\r\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\r\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\r\n            return;\r\n        }\r\n        graph._canvas.interaction.clear();\r\n        self.mouseDown = false;\r\n    }\r\n\r\n    let canvas = graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousedown\", mousedown);\r\n    canvas.addEventListener(\"mousemove\", mousemove);\r\n    canvas.addEventListener(\"mouseup\", mouseup);\r\n    canvas.addEventListener(\"dblclick\", dblclick);\r\n\r\n    canvas = this._graph._canvas.background.getCanvas();\r\n    canvas.addEventListener(\"mouseup\", mouseup);\r\n    canvas.addEventListener(\"mouseleave\", mouseout);\r\n\r\n    return { mousedown, mousemove, mouseup, dblclick, mouseout };\r\n};\r\n\r\n/**\r\n * Add smoothing input event.\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addSmoothingEvent = function () {\r\n    this._smoothingInput = Input({\r\n        type: \"number\",\r\n        tabIndex: -1,\r\n        maxLength: 6,\r\n        value: 0,\r\n        min: 0\r\n    });\r\n    this._smoothingInput.style[\"z-index\"] = 5;\r\n    this._smoothingInput.style.position = \"absolute\";\r\n    this._smoothingInput.style.width = \"50px\";\r\n    this._smoothingInput.style.height = \"21px\";\r\n    this._smoothingInput.style[\"background-color\"] = \"white\";\r\n    this._smoothingInput.style[\"border-radius\"] = 0;\r\n    this._smoothingInput.style.border = \"1px solid #ccc\";\r\n    this._smoothingInput.style.color = \"#555\";\r\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\r\n    this._smoothingInput.style.display = \"none\";\r\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\r\n    this._graph._container.append(this._smoothingInput);\r\n    const self = this;\r\n    function callbackDone() {\r\n        let value = parseInt(self._smoothingInput.value);\r\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\r\n        let length = 4294967296;\r\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\r\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\r\n        }\r\n        if (2 * value + 1 > length) {\r\n            value = Math.floor((length - 1) / 2);\r\n        }\r\n        self._smoothingInput.value = value;\r\n        self._graph._options.graph.smoothing = value;\r\n        self._graph._renderGraph();\r\n    }\r\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\r\n    return callbackDone;\r\n};\r\n\r\n/**\r\n * Create interaction data.\r\n * @private\r\n */\r\nInteraction.prototype._createInteractionData = function () {\r\n    const radius = 3;\r\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    this._interactionData = [];\r\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\r\n        //Clear area\r\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\r\n\r\n        //Draw solid circle\r\n        ctx.beginPath();\r\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\r\n        ctx.fill();\r\n\r\n        //If fill; draw black border to increase visibility.\r\n        if (this._graph._options.graph.fill) {\r\n            ctx.beginPath();\r\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n            ctx.strokeStyle = \"#000000\";\r\n            ctx.stroke();\r\n        }\r\n\r\n        //Get image data from tmp context.\r\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\r\n        //Add member data.\r\n        const canvas = this._graph._canvas.interaction;\r\n        imageData.moveTo = function (x, y) {\r\n            canvas.putImageData(this, x, y, -radius, -radius);\r\n        };\r\n        this._interactionData[i] = imageData;\r\n    }\r\n};\r\n\r\nexport default Interaction;\r\n\r\n/**\r\n * Clamp the given value to the given range.\r\n * @param {type} min - Min value.\r\n * @param {type} number - Value to clamp.\r\n * @param {type} max - Max value.\r\n * @returns {Number} - Clamped value.\r\n */\r\nfunction clamp(min, number, max) {\r\n    if (number < min) {\r\n        return min;\r\n    }\r\n    else if (number > max) {\r\n        return max;\r\n    }\r\n    else {\r\n        return number;\r\n    }\r\n}\r\n\r\nfunction preventDefault(e) {\r\n    //Firefox, Chrome, etc.\r\n    if (e.preventDefault) {\r\n        e.preventDefault();\r\n    }\r\n    //IE\r\n    else {\r\n        e.returnValue = false;\r\n        e.cancelBubble = true;\r\n    }\r\n}","/*\n* @author Andreas Arvidsson\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\n */\n\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\n}\n\nimport Spinner from \"./lib/spin.min\";\nimport Canvas from \"./Canvas\";\nimport Axis from \"./Axis\";\nimport Interaction from \"./Interaction\";\nimport Static from \"./Static\";\nimport Options from \"./Options\";\nimport Is from \"./Is\";\n\n/** \n * The Graph class is a 2D graph plotter.\n * Built with performance and customizability in mind. Supports multiple data\n * sets and all data sets are available as typed arrays.\n */\n\n/**\n * Create new graph.\n * @public\n * @constructor\n * @param {dom|string} container - Element.  DOM or ID string. Graph will fill this element.\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Graph}\n */\nfunction Graph(container, options) {\n    if (this instanceof Graph) {\n        this._init(container, options);\n    }\n    //The new keyword was omitted.\n    else {\n        return new Graph(container, options);\n    }\n}\n\n/**\n * Get dummy dataY array.\n * @public\n * @returns {array}\n */\nGraph.createDummyData = Static.createDummyData;\n\n/**\n * Get options instance.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.prototype.getOptions = function () {\n    return this._options;\n};\n\n/**\n * Get default options.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.getDefaultOptions = Options.getDefault;\n\n/**\n * Sets all options to their default values.\n * @public\n */\nGraph.prototype.setDefaultOptions = function () {\n    this._options.setDefault();\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n */\nGraph.prototype.setOptions = function (options) {\n    this._options.set(options);\n    this._hasCalculatedGraphSize = false;\n    if (this._options.isOk()) {\n        this._axes.x.zoom(this._options.zoom.xMin, this._options.zoom.xMax);\n        this._axes.y.zoom(this._options.zoom.yMin, this._options.zoom.yMax);\n        this._axes.x.calculateBounds();\n        this._axes.y.calculateBounds();\n        this._interaction.updateOptions();\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\n        this._initLegend();\n        this._plot();\n    }\n};\n\n/* ********** PRIVATE ********** */\n\n/**\n * Implementation of the constructor.\n * @private\n */\nGraph.prototype._init = function (container, options) {\n    if (typeof el === \"string\") {\n        container = document.getElementById(container);\n    }\n    if (!parent) {\n        console.error(\"owp.graph ERROR: Element dom is null\");\n        return;\n    }\n\n    container.style.position = \"relative\";\n\n    this._container = container;\n    this._options = new Options();\n\n    this._canvas = {\n        background: new Canvas(container, \"background\"),\n        graph: new Canvas(container, \"graph\", true),\n        highlight: new Canvas(container, \"highlight\"),\n        interaction: new Canvas(container, \"interaction\")\n    };\n\n    this._canvas.background.setZIndex(0);\n    this._canvas.graph.setZIndex(1);\n    this._canvas.highlight.setZIndex(2);\n    //Spinner uses zIndex 3.\n    this._canvas.interaction.setZIndex(4);\n    //Smoothing input used zIndex 5.\n\n    this._axes = {\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\n        y: new Axis(this._options, this._canvas.graph, \"y\")\n    };\n\n    this._interaction = new Interaction(this);\n\n    if (options) {\n        this.setOptions(options);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\n        this.setOptions({});\n    }\n};\n\n/**\n * Create legend canvas and attach to parent dom.\n * @private\n */\nGraph.prototype._initLegend = function () {\n    const location = this._options.legend.location;\n    if (location && this._options.interaction.trackMouse) {\n        //DIV id.\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\n            const legendDiv = document.getElementById(location);\n            if (legendDiv) {\n                legendDiv.style.position = \"relative\";\n                //Reuse existing canvas.\n                if (this._canvas.legend) {\n                    this._canvas.legend.setParent(legendDiv);\n                }\n                //Create new canvas.\n                else {\n                    this._canvas.legend = new Canvas(legendDiv);\n                }\n            }\n            else {\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\n            }\n        }\n        else {\n            //Set same parent for legend as rest of graph.\n            if (this._canvas.legend) {\n                this._canvas.legend.setParent(this._container);\n            }\n            else {\n                this._canvas.legend = new Canvas(this._container);\n                this._canvas.legend.disableMouseInteraction();\n            }\n            if (location.toLowerCase() === \"top\") {\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\n            }\n            else if (location.toLowerCase() === \"right\") {\n                this._canvas.legend.setPosition(0, 0, true);\n                this._canvas.legend.setSize(200, \"100%\");\n            }\n        }\n    }\n    //Remove old legend.\n    else if (this._canvas.legend) {\n        this._canvas.legend.setParent();\n        this._canvas.legend = undefined;\n    }\n};\n\n/**\n * Renders the legend on the background canvas.\n * @private\n */\nGraph.prototype._renderLegend = function (values) {\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\n        return;\n    }\n\n    const settings = this._options.legend;\n    const canvas = this._canvas.legend;\n    canvas.clear();\n    canvas.set(\"font\", this._options.getLegendFont());\n    canvas.set(\"textBaseline\", \"top\");\n    canvas.set(\"textAlign\", settings.align);\n\n    const isTop = settings.location.toLowerCase() === \"top\";\n    const alignLeft = settings.align.toLowerCase() === \"left\";\n    //newLine is disabled for top location.\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\n    //OffsetY is disabled for top location.\n    let y = isTop ? 0 : this._options.legend.offsetY;\n\n    function printValue(color, name, value) {\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\n        canvas.text(str, x, y, null, color);\n        if (newLine) {\n            y += settings.size;\n        }\n        else {\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\n        }\n    }\n\n    if (alignLeft || newLine) {\n        for (let i = 0; i <= this._options.graph.dataY.length; ++i) {\n            printValue(\n                this._options.graph.colors[i],\n                this._options.getName(i),\n                values && values[i] !== undefined\n                    ? this._axes.y.formatLegendValue(values[i])\n                    : undefined\n            );\n        }\n    }\n    else {\n        for (let i = this._options.graph.dataY.length; i >= 0; --i) {\n            printValue(\n                this._options.graph.colors[i],\n                this._options.getName(i),\n                values && values[i] !== undefined\n                    ? this._axes.y.formatLegendValue(values[i])\n                    : undefined\n            );\n        }\n    }\n};\n\n/**\n * Plots/draws the graph.\n * @private\n */\nGraph.prototype._plot = function () {\n    if (!this._options.isOk()) {\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\n        return;\n    }\n\n    if (this._options.debug) {\n        console.time(\"owp.graph DEBUG: Plot time\");\n    }\n\n    //If graph size has not yet been calculated. Do it.\n    if (!this._hasCalculatedGraphSize) {\n        this._calculateGraphSize();\n    }\n\n    //Clear plot.\n    this._canvas.background.clear();\n    this._canvas.graph.clear();\n    this._canvas.highlight.clear();\n    this._interaction.clear();\n\n    //Render non data related features.\n    this._renderTitle();\n    this._renderAxesLabels();\n    this._renderSpin();\n\n    //Has bounds. Render bounds related features.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._renderXAxis();\n        this._renderYAxis();\n        this._renderHighlight();\n\n        //Has graph data. Render graph data.\n        if (this._options.graph.dataY.length) {\n            this._renderLegend();\n            this._renderGraph();\n            this._interaction.render();\n        }\n        else if (this._options.debug) {\n            console.log(\"owp.graph DEBUG: No data set available. Plotting available features.\");\n        }\n    }\n    //Has neither bounds or data.\n    else if (this._options.debug) {\n        console.log(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\n    }\n\n    if (this._options.debug) {\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\n    }\n};\n\n/**\n * Render the spinner\n * @private\n */\nGraph.prototype._renderSpin = function () {\n    //Can't update options so have to remove old spinner always.\n    if (this._spinner) {\n        this._spinner.stop();\n        this._spinner = null;\n    }\n    //Show spinner\n    if (this._options.spinner.show) {\n        //Spinner div does not exist. Create it.\n        if (!this._spinnerDiv) {\n            this._spinnerDiv = document.createElement(\"div\");\n            this._spinnerDiv.style.position = \"absolute\";\n            this._spinnerDiv.style[\"z-index\"] = 3;\n            this._container.append(this._spinnerDiv);\n            this._updateSpinnerSize();\n        }\n        this._spinner = new Spinner(this._options.spinner);\n        this._spinner.spin(this._spinnerDiv);\n    }\n    //Hide spinner. Remove old div.\n    else if (this._spinnerDiv) {\n        this._spinnerDiv.remove();\n        this._spinnerDiv = null;\n    }\n}\n\n/**\n * Updates the position and size of the spinner div based on the graph canvas.\n * @private\n */\nGraph.prototype._updateSpinnerSize = function () {\n    if (this._spinnerDiv) {\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\n    }\n};\n\n/**\n * Calculate graph canvas position and size.\n * @private\n */\nGraph.prototype._calculateGraphSize = function () {\n    let x = this._getOffset([\"left\"]);\n    let y = this._getOffset([\"top\"]);\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\n\n    //Set graph canvas.\n    this._canvas.graph.setPosition(x, y);\n    this._canvas.graph.setSize(width, height);\n\n    //Convert to content space.\n    x = this._canvas.graph.getContentX();\n    y = this._canvas.graph.getContentY();\n    width = this._canvas.graph.getContentWidth();\n    height = this._canvas.graph.getContentHeight();\n\n    //Set highlight canvas.\n    this._canvas.highlight.setPosition(x, y);\n    this._canvas.highlight.setSize(width, height);\n    //Set interaction canvas.\n    this._canvas.interaction.setPosition(x, y);\n    this._canvas.interaction.setSize(width, height);\n    //Set legend canvas if available.\n    if (this._canvas.legend) {\n        if (this._options.legend.location.toLowerCase() === \"top\") {\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\n            this._canvas.legend.setSize(width, this._options.legend.size);\n        }\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\n            this._canvas.legend.setPosition(0, y, true);\n            this._canvas.legend.setSize(200, height);\n        }\n    }\n\n    //Update interaction instance.\n    this._interaction.graphChangedSize(x, y, width, height);\n\n    //Updates the spinner div size.\n    this._updateSpinnerSize();\n\n    //Calculate new ticks for the new size.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._axes.x.calculateTicks();\n        this._axes.y.calculateTicks();\n    }\n    this._hasCalculatedGraphSize = true;\n};\n\n/**\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderXAxis = function () {\n    if (!this._options.axes.x.show) {\n        return;\n    }\n    const ticks = this._axes.x.getTicks();\n    let oldX, oldWidth;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\n        //Draw tick markers.\n        if (ticks.markers) {\n            y += ticks.markers.offset;\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\n            y += ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\n            y += ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\n            oldX = x;\n            oldWidth = ticks.labels.width[i];\n        }\n    }\n};\n\n/**\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderYAxis = function () {\n    if (!this._options.axes.y.show) {\n        return;\n    }\n    const ticks = this._axes.y.getTicks();\n    let oldY;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getX();\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\n        //Draw tick markers.\n        if (ticks.markers) {\n            x -= ticks.markers.offset;\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\n            x -= ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\n            x -= ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\n            oldY = y;\n        }\n    }\n};\n\n/**\n * Renders the axes(x and y) labels on the background canvas.\n * @private\n */\nGraph.prototype._renderAxesLabels = function () {\n    //Draw X label.\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\n    }\n    //Draw Y label.\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\n        const x = this._options.axes.labels.offset;\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\n    }\n};\n\n/**\n * Renders the graph title on the background canvas.\n * @private\n */\nGraph.prototype._renderTitle = function () {\n    if (!this._options.title.label.length) {\n        return;\n    }\n    let x;\n    if (this._options.title.align.toLowerCase() === \"left\") {\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"center\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"right\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\n    }\n    const y = this._options.title.offsetY;\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\n};\n\n/**\n * Renders the highligted area on the highligh canvas.\n * @private\n */\nGraph.prototype._renderHighlight = function () {\n    this._canvas.highlight.clear();\n    const h = this._options.highlight;\n    if (Is.isNull(h.xMin) && Is.isNull(h.xMax) && Is.isNull(h.yMin) && Is.isNull(h.yMax)) {\n        return;\n    }\n    //Convert values to pixels.\n    const x1 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMin) ? this._axes.x.getMin() : h.xMin\n    );\n    const x2 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMax) ? this._axes.x.getMax() : h.xMax\n    );\n    const y1 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMin) ? this._axes.y.getMin() : h.yMin\n    );\n    const y2 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMax) ? this._axes.y.getMax() : h.yMax\n    );\n    this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, h.color);\n};\n\n/**\n * Renders the graph curve on the graph canvas.\n * @private\n */\nGraph.prototype._renderGraph = function () {\n    if (this._options.debug && this._options.graph.smoothing > 1) {\n        console.log(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\n    }\n\n    if (this._options.debug && this._options.graph.simplify) {\n        console.log(\"owp.graph DEBUG: Simplify rendering: \" + this._options.graph.simplify);\n    }\n\n    this._canvas.graph.clear();\n\n    //Get value to pixel functions.\n    const valueToPixelX = this._axes.x.getValueToPixelCallback();\n    const valueToPixelY = this._axes.y.getValueToPixelCallback();\n    //Value bounds        \n    const min = this._axes.x.getMin();\n    const max = this._axes.x.getMax();\n    //Get canvas context directly for increased performance.\n    const context = this._canvas.graph.getContext();\n    context.lineWidth = this._options.graph.lineWidth;\n    context.globalCompositeOperation = this._options.graph.compositeOperation;\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n        //Aquire callback for getting X-axis data values.\n        const getDataX = this._options.getDataCallback(\"x\", i);\n\n        //Find start and end indicies.\n        const length = this._options.graph.dataY[i].length;\n        const bsMin = Static.binarySearch(getDataX, length, min);\n        const bsMax = Static.binarySearch(getDataX, length, max);\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\n\n        //Aquire callback for getting Y-axis data values.\n        const getDataY = this._options.getDataCallback(\"y\", i, start);\n\n        //Start path.\n        context.beginPath();\n\n        //Render simplified data set.\n        if (this._options.graph.simplify) {\n            const simplify = this._options.graph.simplify;\n            let oldX = valueToPixelX(getDataX(start));\n            let minVal = getDataY(start);\n            let maxVal = minVal;\n            let newX, y;\n            ++start;\n            for (; start <= end; ++start) {\n                newX = valueToPixelX(getDataX(start));\n                if (Math.abs(oldX - newX) <= simplify) {\n                    y = getDataY(start);\n                    minVal = Math.min(minVal, y);\n                    maxVal = Math.max(maxVal, y);\n                    continue;\n                }\n                context.lineTo(oldX, valueToPixelY(minVal));\n                //Only add the second point if it differs from the first.\n                if (minVal !== maxVal) {\n                    context.lineTo(oldX, valueToPixelY(maxVal));\n                }\n                oldX = newX;\n                minVal = getDataY(start);\n                maxVal = minVal;\n            }\n            //Needed to add the last step.\n            context.lineTo(oldX, valueToPixelY(minVal));\n            if (minVal !== maxVal) {\n                context.lineTo(oldX, valueToPixelY(maxVal));\n            }\n        }\n        //Render full data set.\n        else {\n            for (; start <= end; ++start) {\n                context.lineTo(valueToPixelX(getDataX(start)), valueToPixelY(getDataY(start)));\n            }\n        }\n\n        //Fill under graph.\n        if (this._options.graph.fill) {\n            if (this._options.axes.x.inverted) {\n                context.lineTo(0, this._canvas.graph.getContentHeight());\n                context.lineTo(this._canvas.graph.getContentWidth(), this._canvas.graph.getContentHeight());\n            } else {\n                context.lineTo(this._canvas.graph.getContentWidth() * this._canvas.graph.getRatio(), this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n                context.lineTo(0, this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\n            }\n            context.closePath();\n            context.fillStyle = this._options.getColor(i + 1);\n            context.fill();\n        }\n        //Stroke line.\n        else {\n            context.strokeStyle = this._options.getColor(i + 1);\n            context.stroke();\n        }\n    }\n};\n\n/**\n * Get offset for the given paramters.\n * @private\n */\nGraph.prototype._getOffset = function (array) {\n    let offset = 0;\n    for (let i = 0; i < array.length; ++i) {\n        switch (array[i]) {\n            case \"top\":\n                if (this._options.title.label.length) {\n                    offset += this._options.title.size;\n                    offset += this._options.title.offsetY;\n                    offset += this._options.title.padding;\n                }\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"bottom\":\n                if (this._options.axes.x.show) {\n                    if (this._options.axes.x.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.x.height) {\n                        offset += this._options.axes.x.height;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            offset += this._options.axes.tickLabels.size;\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"left\":\n                if (this._options.axes.y.show) {\n                    if (this._options.axes.y.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.y.width) {\n                        offset += this._options.axes.y.width;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\n                }\n                break;\n            case \"right\":\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\n                    offset += this._canvas.legend.getWidth();\n                }\n                else {\n                    const defaultOffset = 20;\n                    let boundOffset = 0;\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\n                    }\n                    offset += Math.max(defaultOffset, boundOffset);\n                }\n                break;\n        }\n    }\n    return Math.round(offset);\n};\n\nexport default Graph;"],"sourceRoot":""}