{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","obj","HTMLElement","isArray","Array","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isTypedArray","div","document","createElement","style","borderColor","width","noCenter","toLowerCase","borderWidth","borderStyle","type","isNumber","isInt","isString","isBool","isAnyArray","isObject","isFunction","isColor","isSize","isAlignment","isCompositeOperation","isBorderStyle","isBorderWidth","isDOM","Error","callbacks","types","split","length","push","getCompareCallback","array","compareCallback","options","Static","size","seed","random","Math","sin","floor","data","buffer1","ArrayBuffer","buffer2","intY","floatY1","floatY2","mult","PI","cos","console","warn","index","smoothing","getSmoothingWindow","sum","low","high","diffToMin","max","diffToMax","diff","min","dataCallback","mid","found","context","getContext","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","log10","x","log","LN10","Options","this","_isOk","_createMembers","set","getDefault","isOk","getColor","graph","colors","getName","undefined","names","getLegendFont","legend","debug","interaction","resize","trackMouse","zoom","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","dataX","dataY","lineWidth","simplify","fill","compositeOperation","axes","tickMarkers","show","offset","tickLabels","labels","inverted","height","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","path","_evalOptions","getDataCallback","axis","dataIndex","start","_getDataCallbackSmoothing","error","centralIndex","threshold","optionsOk","obj2","name2","paths","set2","msg","evalObject","res","evalBool","evalNumber","evalInt","evalString","evalArray","evalFunction","evalAlign","evalColor","evalFont","evalSize","evalBorderStyle","evalBorderWidth","evalCompositeOperation","evalArrayContains","isContent","evalCond","cond","eval","replaceAll","trim","isNull","b","arguments","appendChild","e","join","f","g","h","j","substring","indexOf","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","parent","id","dontScale","_parent","_canvas","append","_context","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","_isX","_axis","_getSize","_options","_getRatio","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideBounds","_min","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasOverridenBounds","overrideBounds","calculateTicks","clearOverridenBounds","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","canvas","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","highlight","_renderLegend","mouseMoveCallback","mouseDown","_axes","valueX","values","dataXCallback","binarySearch","valueY","calculateSmothingValue","valueXMin","valueXMax","span","weightMin","weightMax","valueMin","valueMax","pixelY","_interactionData","mouseOutCallback","startX","startY","lastHorizontal","lastX","lastY","callbackMouseDown","callbackMouseMove","diffX","abs","diffY","newHorizontal","callbackMouseUp","clamp","callbackDoubleClick","preventDefault","returnValue","cancelBubble","callbackMouseOut","toElement","tabIndex","maxLength","callbackDone","_renderGraph","ctx","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","_highlights","_interaction","setOptions","_initLegend","legendDiv","getElementById","settings","isTop","alignLeft","printValue","str","getOptions","setDefaultOptions","_hasCalculatedGraphSize","setData","resetZoom","clearHighlight","_renderHighlight","doSpin","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","isSpinning","time","_renderTitle","_renderAxesLabels","_renderXAxis","_renderYAxis","timeEnd","_getOffset","oldX","oldWidth","oldY","valueToPixelX","valueToPixelY","globalCompositeOperation","getDataX","bsMin","bsMax","end","getDataY","newX","minVal","maxVal","closePath","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset","createDummyData","getDefaultOptions"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\r\n\r\n/**\r\n * Check if the given object is a DOM element.\r\n * @param {object} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isDOM = function (obj) {\r\n    return obj instanceof HTMLElement;\r\n};\r\n\r\n/**\r\n * Check of the given object is null or undefined.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isNull = function (obj) {\r\n    return obj === undefined || obj === null;\r\n};\r\n\r\n/**\r\n * Check of the given object is a object.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isObject = function (obj) {\r\n    return obj !== null && typeof obj === 'object' && !Is.isArray(obj);\r\n};\r\n\r\n/**\r\n * Check of the given object is a function.\r\n * @private\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isFunction = function (obj) {\r\n    return typeof obj === \"function\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a bool.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isBool = function (obj) {\r\n    return typeof obj === \"boolean\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a number.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isNumber = function (obj) {\r\n    return typeof obj === \"number\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an integer.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isInt = function (obj) {\r\n    return typeof obj === \"number\" && obj % 1 === 0;\r\n};\r\n\r\n/**\r\n * Check of the given object is an unsigned integer.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isUint = function (obj) {\r\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\r\n};\r\n\r\n/**\r\n * Check of the given object is a string.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isString = function (obj) {\r\n    return typeof obj === \"string\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an Array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isArray = function (obj) {\r\n    return obj instanceof Array;\r\n};\r\n\r\n/**\r\n * Check of the given object is an typed array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isTypedArray = function (obj) {\r\n    return obj instanceof Int8Array\r\n        || obj instanceof Uint8Array\r\n        || obj instanceof Uint8ClampedArray\r\n        || obj instanceof Int16Array\r\n        || obj instanceof Uint16Array\r\n        || obj instanceof Int32Array\r\n        || obj instanceof Uint32Array\r\n        || obj instanceof Float32Array\r\n        || obj instanceof Float64Array;\r\n};\r\n\r\n/**\r\n * Check of the given object is an array or a typed array.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isAnyArray = function (obj) {\r\n    return Is.isArray(obj) || Is.isTypedArray(obj);\r\n};\r\n\r\n/**\r\n * Check of the given object is a color.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isColor = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderColor = \"\";\r\n    div.style.borderColor = obj;\r\n    return div.style.borderColor !== \"\";\r\n};\r\n\r\n/**\r\n * Check of the given object is a size.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isSize = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.width = \"\";\r\n    div.style.width = obj;\r\n    return div.style.width !== \"\";\r\n};\r\n\r\n/**\r\n * Check of the given object is an alignment.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @param {bool} noCenter - If true the center alignment is not valid.\r\n * @returns {bool}\r\n */\r\nIs.isAlignment = function (obj, noCenter) {\r\n    obj = obj.toLowerCase();\r\n    if (noCenter) {\r\n        return obj === \"left\" || obj === \"right\";\r\n    } else {\r\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\r\n    }\r\n};\r\n\r\n/**\r\n * Check of the given object is an composite operation.\r\n * @public\r\n * @param {string} obj - Object to evaluate.\r\n * @returns {bool}\r\n */\r\nIs.isCompositeOperation = function (obj) {\r\n    obj = obj.toLowerCase();\r\n    return obj === \"source-over\"\r\n        || obj === \"source-in\"\r\n        || obj === \"source-out\"\r\n        || obj === \"source-atop\"\r\n        || obj === \"destination-over\"\r\n        || obj === \"destination-in\"\r\n        || obj === \"destination-out\"\r\n        || obj === \"destination-atop\"\r\n        || obj === \"lighter\"\r\n        || obj === \"copy\"\r\n        || obj === \"xor\"\r\n        || obj === \"multiply\"\r\n        || obj === \"screen\"\r\n        || obj === \"overlay\"\r\n        || obj === \"darken\"\r\n        || obj === \"lighten\"\r\n        || obj === \"color-dodge\"\r\n        || obj === \"color-burn\"\r\n        || obj === \"hard-light\"\r\n        || obj === \"soft-light\"\r\n        || obj === \"difference\"\r\n        || obj === \"exclusion\"\r\n        || obj === \"hue\"\r\n        || obj === \"saturation\"\r\n        || obj === \"color\"\r\n        || obj === \"luminosity\";\r\n};\r\n\r\nIs.isBorderWidth = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderWidth = \"\";\r\n    div.style.borderWidth = obj;\r\n    return div.style.borderWidth !== \"\";\r\n};\r\n\r\nIs.isBorderStyle = function (obj) {\r\n    var div = document.createElement(\"div\");\r\n    div.style.borderStyle = \"\";\r\n    div.style.borderStyle = obj;\r\n    return div.style.borderStyle !== \"\";\r\n};\r\n\r\n\r\n/**\r\n * Get a callback to evaluate if the given data is of the specified type.\r\n * @param {string} type\r\n * @returns {function]\r\n * }\r\n */\r\nIs.getCompareCallback = function (type) {\r\n    switch (type) {\r\n        case \"number\":\r\n            return Is.isNumber;\r\n        case \"int\":\r\n            return Is.isInt;\r\n        case \"string\":\r\n            return Is.isString;\r\n        case \"bool\":\r\n            return Is.isBool;\r\n        case \"array\":\r\n            return Is.isArray;\r\n        case \"typedArray\":\r\n            return Is.isTypedArray;\r\n        case \"anyArray\":\r\n            return Is.isAnyArray;\r\n        case \"object\":\r\n            return Is.isObject;\r\n        case \"function\":\r\n            return Is.isFunction;\r\n        case \"color\":\r\n            return Is.isColor;\r\n        case \"size\":\r\n            return Is.isSize;\r\n        case 'alignment':\r\n            return Is.isAlignment;\r\n        case 'compositeOperation':\r\n            return Is.isCompositeOperation;\r\n        case 'borderStyle':\r\n            return Is.isBorderStyle;\r\n        case 'borderWidth':\r\n            return Is.isBorderWidth;\r\n        case 'dom':\r\n            return Is.isDOM;\r\n        default:\r\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\r\n    }\r\n};\r\n\r\n/**\r\n * Get a list of callbacks to evaluate if the given data is of the specified type.\r\n * @param {string} type. Separated by |\r\n * @returns {array<function>]}\r\n */\r\nIs.getCompareCallbacks = function (type) {\r\n    var callbacks = [];\r\n    var types = type.split(\"|\");\r\n    if (!types.length) {\r\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\r\n    }\r\n    for (var i = 0; i < types.length; ++i) {\r\n        callbacks.push(Is.getCompareCallback(types[i]));\r\n    }\r\n    return callbacks;\r\n};\r\n\r\n/**\r\n * Check if the array only contains items if the given type.\r\n * @public\r\n * @param {array} array - Array to check.\r\n * @param {string} type - Type to compare itmes against.\r\n * @returns {bool} - True if the array only contains items if the given type.\r\n */\r\nIs.isContent = function (array, type) {\r\n    var compareCallback = Is.getCompareCallback(type);\r\n    for (var i = 0; i < array.length; ++i) {\r\n        if (!compareCallback(array[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nIs.isInOptions = function (value, options) {\r\n    for (var i = 0; i < options.length; ++i) {\r\n        if (options[i] === value) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nexport default Is;\r\n","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @param {string} type - float or int.\n * @returns {array}\n */\nStatic.createDummyData = function (size, type) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data = [];\n    const buffer1 = new ArrayBuffer(size * 4);\n    const buffer2 = new ArrayBuffer(size * 4);\n    if (type && type.toLowerCase() === \"int\") {\n        const intY = new Uint32Array(buffer1);\n        for (let i = 0; i < size; ++i) {\n            intY[i] = i + 1;\n        }\n        data.push(intY);\n    }\n    else if (type && type.toLowerCase() === \"float\") {\n        const floatY1 = new Float32Array(buffer1);\n        const floatY2 = new Float32Array(buffer2);\n        const mult = Math.PI / 100;\n        for (let i = 0; i < size; ++i) {\n            floatY1[i] = Math.sin(i * mult) * random();\n            floatY2[i] = Math.cos(i * mult) * random();\n        }\n        data.push(floatY1);\n        data.push(floatY2);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: Can't create dummy data. Invalid type: \\\"\" + type + \"\\\"\");\n    }\n    return data;\n};\n\n/**\n * Calculate the smoothed value for a given index.\n * @public\n * @param {array} data\n * @param {int} index\n * @param {int} smoothing\n * @returns {number}\n */\nStatic.calculateSmothingValue = function (index, smoothing, data) {\n    const window = Static.getSmoothingWindow(index, smoothing, data.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += data[window.low++];\n    }\n    return sum / window.length;\n};\n\n/**\n * Get the smoothing window indices.\n * @param {int} index - Index for central value.\n * @param {int} smoothing - Smootrhing value. Number of samples on each side of central value.\n * @param {int} length - Length of data set.\n * @returns {undefined}\n */\nStatic.getSmoothingWindow = function (index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return { low: index - diff, high: index + diff, length: 2 * diff + 1 };\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nexport default Static;","import Static from \"./Static\";\r\nimport Is from \"./Is\";\r\n\r\n/** \r\n * The Options class is the options and associated functions for the Graph class.\r\n * See setDefault() for a desciption of the possible option parameters.\r\n */\r\n\r\n/**\r\n * Create new Graph options.\r\n * @public\r\n * @constructor\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n * @returns {Options}\r\n */\r\nfunction Options(options) {\r\n    this._isOk = true;\r\n    this._createMembers();\r\n    this.set(Options.getDefault());\r\n    if (options) {\r\n        this.set(options);\r\n    }\r\n}\r\n\r\n/**\r\n * Check if the options are ok / valid.\r\n * @public\r\n * @returns {bool} - True if the options are ok.\r\n */\r\nOptions.prototype.isOk = function () {\r\n    return this._isOk;\r\n};\r\n\r\n/**\r\n * Get color for a data set.  Index = 0 is X axis.\r\n * @public\r\n * @param {int} index - Index of the data set.\r\n * @returns {string} - CSS color string.\r\n */\r\nOptions.prototype.getColor = function (index) {\r\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\r\n};\r\n\r\n/**\r\n * Get name for a data set. Index = 0 is X axis.\r\n * @public\r\n * @param {int} index - Index of the data set.\r\n * @returns {string}\r\n */\r\nOptions.prototype.getName = function (index) {\r\n    if (this.graph.names[index] !== undefined) {\r\n        return this.graph.names[index];\r\n    } \r\n    else if (index > 0) {\r\n        return \"DATA\" + (index);\r\n    } \r\n    else {\r\n        return \"X\";\r\n    }\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the legend label.\r\n * @public\r\n * @returns {string}\r\n */\r\nOptions.prototype.getLegendFont = function () {\r\n    return this.legend.size + \"px \" + this.legend.font;\r\n};\r\n\r\n/**\r\n * Get the default options object.\r\n * @public\r\n * @returns {OPTIONS_OBJECT}\r\n */\r\nOptions.getDefault = function () {\r\n    return {\r\n        debug: false,\r\n        interaction: {\r\n            resize: true,\r\n            trackMouse: true,\r\n            zoom: true,\r\n            smoothing: false\r\n        },\r\n        title: {\r\n            label: \"\",\r\n            bold: false,\r\n            size: 20,\r\n            offsetX: 0,\r\n            offsetY: 0,\r\n            padding: 5,\r\n            font: \"verdana\",\r\n            color: \"black\",\r\n            align: \"center\"\r\n        },\r\n        legend: {\r\n            location: \"top\",\r\n            font: \"Arial\",\r\n            size: 15,\r\n            offsetX: 10,\r\n            offsetY: 2,\r\n            align: \"right\",\r\n            newLine: false\r\n        },\r\n        graph: {\r\n            dataX: [],\r\n            dataY: [],\r\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\r\n            names: [],\r\n            lineWidth: 1,\r\n            smoothing: 0,\r\n            simplify: 0.1,\r\n            fill: false,\r\n            compositeOperation: \"source-over\"\r\n        },\r\n        axes: {\r\n            tickMarkers: {\r\n                show: true,\r\n                length: 5,\r\n                width: 1,\r\n                offset: 0,\r\n                color: \"#BEBEBE\"\r\n            },\r\n            tickLabels: {\r\n                show: true,\r\n                color: \"black\",\r\n                font: \"Arial\",\r\n                size: 12,\r\n                width: 40,\r\n                offset: 2\r\n            },\r\n            labels: {\r\n                color: \"black\",\r\n                font: \"verdana\",\r\n                size: 15,\r\n                offset: 3,\r\n                padding: 0\r\n            },\r\n            x: {\r\n                show: true,\r\n                inverted: false,\r\n                log: false,\r\n                height: 0,\r\n                label: \"\",\r\n                legendValueFormatter: null,\r\n                tickerValuePreFormatter: null,\r\n                tickerValuePostFormatter: null,\r\n                tickerLabelFormatter: null,\r\n                ticker: null,\r\n                grid: {\r\n                    width: 1,\r\n                    color: \"#BEBEBE\"\r\n                },\r\n                bounds: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            },\r\n            y: {\r\n                show: true,\r\n                inverted: false,\r\n                log: false,\r\n                width: 0,\r\n                label: \"\",\r\n                legendValueFormatter: null,\r\n                tickerValuePreFormatter: null,\r\n                tickerValuePostFormatter: null,\r\n                tickerLabelFormatter: null,\r\n                ticker: null,\r\n                grid: {\r\n                    width: 1,\r\n                    color: \"#BEBEBE\"\r\n                },\r\n                bounds: {\r\n                    min: null,\r\n                    max: null\r\n                }\r\n            }\r\n        },\r\n        border: {\r\n            style: \"solid\",\r\n            color: \"black\",\r\n            width: \"0 0 1px 1px\"\r\n        },\r\n        spinner: {//Options regarding the spinner.\r\n            show: true, //Automatically show spinner when plotting data. Can always be activated manually.\r\n            lines: 13, //The number of lines to draw.\r\n            length: 30, //The length of each line.\r\n            width: 10, //The line thickness.\r\n            radius: 30, //The radius of the inner circle.\r\n            corners: 1, //Corner roundness (0..1).\r\n            rotate: 0, //The rotation offset.\r\n            direction: 1, //1: clockwise, -1: counterclockwise\r\n            color: \"black\", //#rgb or #rrggbb or array of colors\r\n            speed: 1, //Revolutions per second\r\n            trail: 50, //Afterglow percentage\r\n            shadow: false, //If true a shadow is rendered.\r\n            hwaccel: true, //If true hardware acceleration is used.\r\n            position: 'relative', //Position type.\r\n            top: \"50%\", //CenterY position relative to parent\r\n            left: \"50%\"         //CenterX position relative to parent\r\n        }\r\n    };\r\n};\r\n\r\n/**\r\n * Set new options.\r\n * @public\r\n * @param {OPTIONS_OBJECT} options - The options to set.\r\n */\r\nOptions.prototype.set = function (options) {\r\n    function setMembers(oldObj, newObj, path) {\r\n        for (let i in newObj) {\r\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\r\n                //            if (!Array.isArray(oldObj) && !oldObj.hasOwnProperty(i)) { TODO\r\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\r\n                continue;\r\n            }\r\n            //Member is a new object. Call function recursivly.\r\n            if (Is.isObject(newObj[i])) {\r\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\r\n            }\r\n            //Member is null or a base type. Set it.\r\n            else {\r\n                oldObj[i] = newObj[i];\r\n            }\r\n        }\r\n    }\r\n    setMembers(this, options, \"\");\r\n\r\n    this._evalOptions();\r\n};\r\n\r\n/**\r\n * Callback function for getting data value for a given index.\r\n * Used instead of dataX[index] and dataY[index].\r\n * Has built in functionality for averaging. Implicit X-values and more.\r\n * @callback Options~getDataCallback\r\n * @param {int} index\r\n * @returns {number}\r\n */\r\n\r\n/**\r\n * Get a callback used to get correct X and X value data.\r\n * Used by the graph render function to improve performance.\r\n * @public\r\n * @param {string} axis - X or Y axis.\r\n * @param {int} dataIndex - The index in the data set.\r\n * @returns {function}\r\n */\r\nOptions.prototype.getDataCallback = function (axis, dataIndex, start) {\r\n    let data;\r\n    //X-axis.\r\n    if (axis.toLowerCase() === \"x\") {\r\n        //Has no dataX. Return index + 1.\r\n        if (this.graph.dataX.length === 0) {\r\n            return function (index) {\r\n                return index + 1;\r\n            };\r\n        }\r\n        //Have one dataX for all dataY. \r\n        if (this.graph.dataX.length === 1) {\r\n            data = this.graph.dataX[0];\r\n        }\r\n        //Have one dataX for each dataY. \r\n        else {\r\n            data = this.graph.dataX[dataIndex];\r\n        }\r\n    }\r\n    //Y-axis.\r\n    else if (axis.toLowerCase() === \"y\") {\r\n        data = this.graph.dataY[dataIndex];\r\n        //Use smoothing.\r\n        if (this.graph.smoothing) {\r\n            return this._getDataCallbackSmoothing(start, data);\r\n        }\r\n    }\r\n    else {\r\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\r\n    }\r\n    //Default\r\n    return function (index) {\r\n        return data[index];\r\n    };\r\n};\r\n\r\n/**\r\n * Return getDataCallback for smoothing\r\n * @private\r\n */\r\nOptions.prototype._getDataCallbackSmoothing = function (start, data) {\r\n    const centralIndex = Math.max(0, start - 1);\r\n    const window = Static.getSmoothingWindow(centralIndex, this.graph.smoothing, data.length);\r\n    let low = window.low;\r\n    let high = window.high;\r\n    let sum = 0;\r\n    for (let i = low; i <= high; ++i) {\r\n        sum += data[i];\r\n    }\r\n    const threshold = 2 * this.graph.smoothing;\r\n    return function (index) {\r\n        //Decrease window size.\r\n        if (high === data.length - 1) {\r\n            low = index + index - high;\r\n            sum = 0;\r\n            for (let i = low; i <= high; ++i) {\r\n                sum += data[i];\r\n            }\r\n        }\r\n        //Increase window size.\r\n        else if (high < threshold) {\r\n            high = index + index - low;\r\n            sum = 0;\r\n            for (let i = low; i <= high; ++i) {\r\n                sum += data[i];\r\n            }\r\n        }\r\n        //Move window.\r\n        else {\r\n            sum -= data[low];\r\n            ++low;\r\n            ++high;\r\n            sum += data[high];\r\n        }\r\n        //Calculate average value.\r\n        return sum / (high - low + 1);\r\n    };\r\n}\r\n\r\n/**\r\n * Evaluates the options and sets ok status flag.\r\n * @private\r\n */\r\nOptions.prototype._evalOptions = function () {\r\n    var optionsOk = true;\r\n    var obj, obj2, name, name2;\r\n    var options = this;\r\n    function set(path) {\r\n        name = path;\r\n        obj = options;\r\n        var paths = path.split(\".\");\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            obj = obj[paths[i]];\r\n        }\r\n    }\r\n    function set2(path) {\r\n        name2 = path;\r\n        obj2 = options;\r\n        var paths = path.split(\".\");\r\n        for (var i = 0; i < paths.length; ++i) {\r\n            obj2 = obj2[paths[i]];\r\n        }\r\n    }\r\n    function error(msg) {\r\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\r\n        optionsOk = false;\r\n    }\r\n    function evalObject() {\r\n        var res = Is.isObject(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an object.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBool() {\r\n        var res = Is.isBool(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a bool.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalNumber() {\r\n        var res = Is.isNumber(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a number.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalInt() {\r\n        var res = Is.isInt(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an integer.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalString() {\r\n        var res = Is.isString(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a string.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalArray() {\r\n        var res = Is.isArray(obj);\r\n        res = true;\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an array.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalFunction() {\r\n        var res = Is.isFunction(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a function.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalAlign(noCenter) {\r\n        var res = Is.isAlignment(obj, noCenter);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalColor() {\r\n        var res = Is.isColor(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid color.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalFont() {\r\n        var res = Is.isString(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid font.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalSize() {\r\n        var res = Is.isSize(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid size.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBorderStyle() {\r\n        var res = Is.isBorderStyle(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid border style.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalBorderWidth() {\r\n        var res = Is.isBorderWidth(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a valid border width.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalCompositeOperation() {\r\n        var res = Is.isCompositeOperation(obj);\r\n        if (!res) {\r\n            error(\"\\\"\" + obj + \"\\\" is not a composite operation.\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalArrayContains(type) {\r\n        var res = Is.isContent(obj, type);\r\n        if (!res) {\r\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\r\n        }\r\n        return res;\r\n    }\r\n    function evalCond(cond) {\r\n        var res = eval(cond);\r\n        if (!res) {\r\n            cond = cond.replaceAll(\"obj2\", name2).trim();\r\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\r\n            cond = cond.replaceAll(\"obj\", \"\").trim();\r\n            if (Is.isArray(obj)) {\r\n                error(\"Failed condition: \" + cond);\r\n            } \r\n            else {\r\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n\r\n    set(\"debug\");\r\n    evalBool();\r\n\r\n    set(\"interaction\");\r\n    if (evalObject()) {\r\n        set(\"interaction.resize\");\r\n        evalBool();\r\n\r\n        set(\"interaction.trackMouse\");\r\n        evalBool();\r\n\r\n        set(\"interaction.zoom\");\r\n        evalBool();\r\n\r\n        set(\"interaction.smoothing\");\r\n        evalBool();\r\n    }\r\n\r\n    set(\"title\");\r\n    if (evalObject()) {\r\n        set(\"title.bold\");\r\n        evalBool();\r\n\r\n        set(\"title.label\");\r\n        evalString();\r\n\r\n        set(\"title.size\");\r\n        evalInt();\r\n        evalCond(\"obj > 0\");\r\n\r\n        set(\"title.offsetX\");\r\n        evalInt();\r\n\r\n        set(\"title.offsetY\");\r\n        evalInt();\r\n\r\n        set(\"title.padding\");\r\n        evalInt();\r\n\r\n        set(\"title.font\");\r\n        evalFont();\r\n\r\n        set(\"title.color\");\r\n        evalColor();\r\n\r\n        set(\"title.align\");\r\n        evalAlign();\r\n    }\r\n\r\n    set(\"legend\");\r\n    if (evalObject()) {\r\n        set(\"legend.location\");\r\n        evalString();\r\n\r\n        set(\"legend.font\");\r\n        evalFont();\r\n\r\n        set(\"legend.size\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"legend.offsetX\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"legend.offsetY\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"legend.align\");\r\n        evalAlign(true);\r\n\r\n        set(\"legend.newLine\");\r\n        evalBool();\r\n    }\r\n\r\n    set(\"graph\");\r\n    if (evalObject()) {\r\n        set(\"graph.dataX\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"anyArray\");\r\n\r\n            set2(\"graph.dataY\");\r\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\r\n                evalCond(\"obj.length <= obj2.length\");\r\n            }\r\n        }\r\n\r\n        set(\"graph.dataY\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"anyArray\");\r\n            set2(\"graph.dataX\");\r\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\r\n            if (obj2.length === 0 || obj2.length === 1) {\r\n                //Check so that all dataY are the same size.\r\n                for (let i = 0; i < obj.length; ++i) {\r\n                    if (obj[i].length !== obj[0].length) {\r\n                        error(\"Not all arrays are of the same size.\");\r\n                    }\r\n                }\r\n                //If dataX.length == 1. Check if same length as dataY.\r\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\r\n                    error(\"Size does not match dataX.\");\r\n                }\r\n            }\r\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\r\n            else if (obj.length === obj2.length) {\r\n                for (let i = 0; i < obj.length; ++i) {\r\n                    if (obj[i].length !== obj2[i].length) {\r\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        set(\"graph.colors\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"color\");\r\n        }\r\n\r\n        set(\"graph.names\");\r\n        if (evalArray()) {\r\n            evalArrayContains(\"string\");\r\n        }\r\n\r\n        set(\"graph.lineWidth\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"graph.smoothing\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"graph.simplify\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0 && obj <= 1\");\r\n        }\r\n\r\n        set(\"graph.fill\");\r\n        evalBool();\r\n\r\n        set(\"graph.compositeOperation\");\r\n        evalCompositeOperation();\r\n    }\r\n\r\n    set(\"axes\");\r\n    if (evalObject()) {\r\n        set(\"axes.tickMarkers\");\r\n        if (evalObject()) {\r\n            set(\"axes.tickMarkers.show\");\r\n            evalBool();\r\n\r\n            set(\"axes.tickMarkers.length\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.width\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.offset\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n\r\n            set(\"axes.tickMarkers.color\");\r\n            evalColor();\r\n        }\r\n\r\n        set(\"axes.tickLabels\");\r\n        if (evalObject()) {\r\n            set(\"axes.tickLabels.show\");\r\n            evalBool();\r\n\r\n            set(\"axes.tickLabels.color\");\r\n            evalColor();\r\n\r\n            set(\"axes.tickLabels.font\");\r\n            evalFont();\r\n\r\n            set(\"axes.tickLabels.size\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickLabels.width\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.tickLabels.offset\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n        }\r\n\r\n        set(\"axes.labels\");\r\n        if (evalObject()) {\r\n            set(\"axes.labels.color\");\r\n            evalColor();\r\n\r\n            set(\"axes.labels.font\");\r\n            evalFont();\r\n\r\n            set(\"axes.labels.size\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj > 0\");\r\n            }\r\n\r\n            set(\"axes.labels.offset\");\r\n            evalInt();\r\n\r\n            set(\"axes.labels.padding\");\r\n            if (evalInt()) {\r\n                evalCond(\"obj >= 0\");\r\n            }\r\n        }\r\n\r\n        //axes x and y\r\n        var axes = [\"axes.x\", \"axes.y\"];\r\n        for (var i = 0; i < axes.length; ++i) {\r\n            set(axes[i]);\r\n            if (evalObject()) {\r\n                set(axes[i] + \".show\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".inverted\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".log\");\r\n                evalBool();\r\n\r\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\r\n                evalInt();\r\n                evalCond(\"obj >= 0\");\r\n\r\n                set(axes[i] + \".grid\");\r\n                if (evalObject()) {\r\n                    set(axes[i] + \".grid.width\");\r\n                    evalInt();\r\n                    evalCond(\"obj >= 0\");\r\n\r\n                    set(axes[i] + \".grid.color\");\r\n                    evalColor();\r\n                }\r\n\r\n                set(axes[i] + \".label\");\r\n                evalString();\r\n\r\n                set(axes[i] + \".bounds\");\r\n                if (evalObject()) {\r\n                    set(axes[i] + \".bounds.min\");\r\n                    if (!Is.isNull(obj)) {\r\n                        evalNumber();\r\n                        set2(axes[i] + \".log\");\r\n                        if (obj2 && obj <= 0) {\r\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\r\n                        }\r\n                    }\r\n\r\n                    set(axes[i] + \".bounds.max\");\r\n                    if (!Is.isNull(obj)) {\r\n                        evalNumber();\r\n                        set2(axes[i] + \".log\");\r\n                        if (obj2 && obj <= 0) {\r\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\r\n                        }\r\n                    }\r\n\r\n                    set(axes[i] + \".bounds.min\");\r\n                    set2(axes[i] + \".bounds.max\");\r\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\r\n                        evalCond(\"obj < obj2\");\r\n                    }\r\n                }\r\n\r\n                set(axes[i] + \".legendValueFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerValuePreFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerValuePostFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".tickerLabelFormatter\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n\r\n                set(axes[i] + \".ticker\");\r\n                if (!Is.isNull(obj)) {\r\n                    evalFunction();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    set(\"border\");\r\n    if (evalObject()) {\r\n        set(\"border.style\");\r\n        evalBorderStyle();\r\n\r\n        set(\"border.color\");\r\n        evalColor();\r\n\r\n        set(\"border.width\");\r\n        evalBorderWidth();\r\n    }\r\n\r\n    set(\"spinner\");\r\n    if (evalObject()) {\r\n        set(\"spinner.show\");\r\n        evalBool();\r\n\r\n        set(\"spinner.lines\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.length\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.width\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.radius\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.corners\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj >= 0 && obj <= 1\");\r\n        }\r\n\r\n        set(\"spinner.rotate\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"spinner.direction\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj === -1 || obj === 1\");\r\n        }\r\n\r\n        set(\"spinner.color\");\r\n        evalColor();\r\n\r\n        set(\"spinner.speed\");\r\n        if (evalNumber()) {\r\n            evalCond(\"obj > 0\");\r\n        }\r\n\r\n        set(\"spinner.trail\");\r\n        if (evalInt()) {\r\n            evalCond(\"obj >= 0\");\r\n        }\r\n\r\n        set(\"spinner.shadow\");\r\n        evalBool();\r\n\r\n        set(\"spinner.hwaccel\");\r\n        evalBool();\r\n\r\n        set(\"spinner.position\");\r\n        if (evalString()) {\r\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\r\n        }\r\n\r\n        set(\"spinner.top\");\r\n        evalSize();\r\n\r\n        set(\"spinner.left\");\r\n        evalSize();\r\n    }\r\n\r\n    this._isOk = optionsOk;\r\n};\r\n\r\n/**\r\n * Create all the members that contains the user given settings.\r\n * @private\r\n */\r\nOptions.prototype._createMembers = function () {\r\n    this.debug = null;\r\n    this.interaction = {\r\n        resize: null,\r\n        trackMouse: null,\r\n        zoom: null,\r\n        smoothing: null\r\n    };\r\n    this.title = {\r\n        show: null,\r\n        bold: null,\r\n        label: null,\r\n        size: null,\r\n        offsetX: null,\r\n        offsetY: null,\r\n        padding: null,\r\n        font: null,\r\n        color: null,\r\n        align: null\r\n    };\r\n    this.legend = {\r\n        location: null,\r\n        font: null,\r\n        size: null,\r\n        offsetX: null,\r\n        offsetY: null,\r\n        align: null,\r\n        newLine: null\r\n    };\r\n    this.graph = {\r\n        dataX: null,\r\n        dataY: null,\r\n        colors: null,\r\n        names: null,\r\n        lineWidth: null,\r\n        smoothing: null,\r\n        simplify: null,\r\n        fill: null,\r\n        compositeOperation: null\r\n    };\r\n    this.axes = {\r\n        tickMarkers: {\r\n            show: null,\r\n            length: null,\r\n            width: null,\r\n            offset: null,\r\n            color: null\r\n        },\r\n        tickLabels: {\r\n            show: null,\r\n            color: null,\r\n            font: null,\r\n            size: null,\r\n            width: null,\r\n            offset: null\r\n        },\r\n        labels: {\r\n            show: null,\r\n            color: null,\r\n            font: null,\r\n            size: null,\r\n            offset: null,\r\n            padding: null\r\n        },\r\n        x: {\r\n            show: null,\r\n            inverted: null,\r\n            log: null,\r\n            height: null,\r\n            label: null,\r\n            legendValueFormatter: null,\r\n            tickerValuePreFormatter: null,\r\n            tickerValuePostFormatter: null,\r\n            tickerLabelFormatter: null,\r\n            ticker: null,\r\n            grid: {\r\n                width: null,\r\n                color: null\r\n            },\r\n            bounds: {\r\n                min: null,\r\n                max: null\r\n            }\r\n        },\r\n        y: {\r\n            show: null,\r\n            inverted: null,\r\n            log: null,\r\n            width: null,\r\n            label: null,\r\n            legendValueFormatter: null,\r\n            tickerValuePreFormatter: null,\r\n            tickerValuePostFormatter: null,\r\n            tickerLabelFormatter: null,\r\n            ticker: null,\r\n            grid: {\r\n                width: null,\r\n                color: null\r\n            },\r\n            bounds: {\r\n                min: null,\r\n                max: null\r\n            }\r\n        }\r\n    };\r\n    this.border = {\r\n        style: null,\r\n        color: null,\r\n        width: null\r\n    };\r\n    this.spinner = {\r\n        show: null,\r\n        lines: null,\r\n        length: null,\r\n        width: null,\r\n        radius: null,\r\n        corners: null,\r\n        rotate: null,\r\n        direction: null,\r\n        color: null,\r\n        speed: null,\r\n        trail: null,\r\n        shadow: null,\r\n        hwaccel: null,\r\n        position: null,\r\n        top: null,\r\n        left: null\r\n    };\r\n};\r\n\r\n/**\r\n @typedef OPTIONS_OBJECT\r\n @type {object}\r\n\r\n @property {bool} debug - If true debug info will be outputted to the console.\r\n\r\n @property {object} interaction - Options regarding user interaction with the graph.\r\n @property {bool} resize - If true the graph will be resized automatically.\r\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\r\n @property {bool} zoom - If true zoom is enabled.\r\n @property {bool} smoothing - If true interactive smoothing input is enabled.\r\n\r\n @property {object} title - Options regarding the title.\r\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\r\n @property {bool} title.bold - If true the label font is bold.\r\n @property {int} title.size - Font height/size in pixels of the text.\r\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\r\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\r\n @property {int} title.padding - Padding in pixels. Between title and graph.\r\n @property {string} title.font - Font family of the text.\r\n @property {string} title.color - Color of the text.\r\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\r\n\r\n @property {object} legend - Options regarding the legend.\r\n @property {bool} legend.show - If true the legend is shown.\r\n @property {string} legend.font - Font family of the text.\r\n @property {int} legend.size - Font size/height in pixels.\r\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\r\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\r\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\r\n @property {int} legend.newLine -  If true a new line is made between each data set.\r\n\r\n @property {object} graph - Options regarding the graph curve.\r\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\r\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\r\n @property {array<string>} graph.colors - List of colors for each dataY set.\r\n @property {array<string>} graph.names - List of names for each dataY set.\r\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\r\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\r\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\r\n @property {bool} graph.fill - If true the area under the graph will be filled.\r\n @property {string} graph.compositeOperation - Context global composit operation.\r\n\r\n @property {object} axes - Options regarding the axes.\r\n\r\n @property {object} axes.tickMarkers - Options regarding the tick markers.\r\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\r\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\r\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\r\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\r\n @property {string} axes.tickMarkers.color - Color of the tick markers.\r\n\r\n @property {object} axes.tickLabels - Options regarding the tick labels.\r\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\r\n @property {string} axes.tickLabels.color - Color of the text.\r\n @property {string} axes.tickLabels.font - Font family of the text.\r\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\r\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\r\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\r\n\r\n @property {object} axes.labels - Options regarding the axes labels.\r\n @property {string} axes.labels.color - Color of the text.\r\n @property {string} axes.labels.font - Font family of the text.\r\n @property {int} axes.labels.size - Font size/height in pixels of the text.\r\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\r\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\r\n\r\n @property {object} axes.x - Options regarding the X-axis.\r\n @property {bool} axes.x.show - If true the X-axis is shown.\r\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\r\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\r\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\r\n @property {int} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\r\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the values. Null = default callback.\r\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\r\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\r\n\r\n @property {object} axes.x.grid - Options regarding the X-axis grid.\r\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\r\n @property {string} axes.x.grid.color - Color of the grid lines.\r\n\r\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\r\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\r\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\r\n\r\n @property {object} axes.y - Options regarding the Y-axis.\r\n @property {bool} axes.y.show - If true the X-axis is shown.\r\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\r\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\r\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\r\n @property {int} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\r\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the values. Null = default callback.\r\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\r\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\r\n\r\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\r\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\r\n @property {string} axes.y.grid.color - Color of the grid lines.\r\n\r\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\r\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\r\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\r\n\r\n @property {object} border - Options regarding the graph border.\r\n @property {string} border.style - Border style. solid, dotted...\r\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\r\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\r\n\r\n\r\n */\r\n\r\n/**\r\n * Callback function for formatting values.\r\n * @callback formatterCallback\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\n\r\n/**\r\n * Callback function for creating ticks.\r\n * @callback tickerCallback\r\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\r\n * @param {number} minValue - Min/lower bounds value.\r\n * @param {number} maxValue - Max/upper bounds value.\r\n * @param {int} graphSize - Size(width or height) of graph in pixels.\r\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\r\n * @returns {array<{value:number}>}\r\n */\r\n\r\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \r\n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\r\n * Used to automatically get pixel perfect canvas size \r\n * and to make it easier to draw simple elements.\r\n */\r\n\r\n/**\r\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\r\n * @public\r\n * @constructor\r\n * @param {parent} parent - Parent div.\r\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\r\n * @returns {Canvas}\r\n */\r\nfunction Canvas(parent, id, dontScale) {\r\n    this._parent = parent;\r\n\r\n    this._canvas = document.createElement(\"canvas\");\r\n    if (id) {\r\n        this._canvas.id = id;\r\n    }\r\n    parent.append(this._canvas);\r\n    this._context = this._canvas.getContext(\"2d\");\r\n\r\n    this._dontScale = dontScale;\r\n\r\n    this._canvas.style.position = \"absolute\";\r\n    this._canvas.style.margin = 0;\r\n    this._canvas.style.padding = 0;\r\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\r\n\r\n    //Set default position.\r\n    this.setPosition(0, 0);\r\n    //Fill parent div is default size.\r\n    this.setSize(\"100%\", \"100%\");\r\n}\r\n\r\n/**\r\n * Set a new parent for the canvas. Leave empty to only remove current parent.\r\n * @public\r\n * @param {parent} div - Parent div.\r\n */\r\nCanvas.prototype.setParent = function (parent) {\r\n    this._canvas.remove();\r\n    if (parent) {\r\n        parent.append(this._canvas);\r\n    }\r\n};\r\n\r\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\r\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\r\n};\r\n\r\n/**\r\n * Get the html5 canvas.\r\n * @public\r\n * @returns {canvas}\r\n */\r\nCanvas.prototype.getCanvas = function () {\r\n    return this._canvas;\r\n};\r\n\r\n/**\r\n * Get the html5 2D context. Used when performance and less function calls are needed.\r\n * @public\r\n * @returns {context}\r\n */\r\nCanvas.prototype.getContext = function () {\r\n    return this._context;\r\n};\r\n\r\n/**\r\n * Get the x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getX = function () {\r\n    return this._x;\r\n};\r\n\r\n/**\r\n * Get the y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getY = function () {\r\n    return this._y;\r\n};\r\n\r\n/**\r\n * Get the content x-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} X-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentX = function () {\r\n    return this._contentX;\r\n};\r\n\r\n/**\r\n * Get the content y-coordinate relative to the canvas parent.\r\n * @public\r\n * @returns {int} Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.getContentY = function () {\r\n    return this._contentY;\r\n};\r\n\r\n/**\r\n * Get the canvas width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getWidth = function () {\r\n    //return this._canvas.outerWidth(); TODO\r\n    return this._canvas.offsetWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getHeight = function () {\r\n    //return this._canvas.outerHeight(); TODO\r\n    return this._canvas.offsetHeight;\r\n};\r\n\r\n/**\r\n * Get the canvas content width.\r\n * @public\r\n * @returns {int} - Width in pixels.\r\n */\r\nCanvas.prototype.getContentWidth = function () {\r\n    //return this._canvas.width(); TODO\r\n    return this._canvas.clientWidth;\r\n};\r\n\r\n/**\r\n * Get the canvas content height.\r\n * @public\r\n * @returns {int} - Height in pixels.\r\n */\r\nCanvas.prototype.getContentHeight = function () {\r\n    //return this._canvas.height(); TODO\r\n    return this._canvas.clientHeight;\r\n};\r\n\r\n/**\r\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetX = function () {\r\n    return this._contentOffsetX;\r\n};\r\n\r\n/**\r\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\r\n * @returns {Canvas._contentOffsetX}\r\n */\r\nCanvas.prototype.getContentOffsetY = function () {\r\n    return this._contentOffsetY;\r\n};\r\n\r\n\r\n/**\r\n * Get text with in pixels.\r\n * @public\r\n * @param {string} text - Text to measure.\r\n * @param {fontString} font - Font to use.\r\n * @returns {int} Width in pixels.\r\n */\r\nCanvas.prototype.getTextWidth = function (text, font) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    return this._context.measureText(text).width;\r\n};\r\n\r\n/**\r\n * Clear canvas.\r\n * @public\r\n */\r\nCanvas.prototype.clear = function () {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Clear area.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\r\n    //Scaling is done automatically.\r\n    if (!this._dontScale) {\r\n        this._context.clearRect(x, y, width, height);\r\n    }\r\n    //Do scaling manually.\r\n    else {\r\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Set z-index.\r\n * @public\r\n * @param {int} zIndex - The new Z-index.\r\n */\r\nCanvas.prototype.setZIndex = function (zIndex) {\r\n    this._canvas.style[\"z-index\"] = zIndex;\r\n};\r\n\r\n/**\r\n * Set any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @param {type} value - Member value.\r\n */\r\nCanvas.prototype.set = function (member, value) {\r\n    this._context[member] = value;\r\n};\r\n\r\n/**\r\n * Set canvas border parameters.\r\n * @param {string} style\r\n * @param {string} color\r\n * @param {string} width\r\n */\r\nCanvas.prototype.setBorder = function (style, color, width) {\r\n    this._canvas.style.borderStyle = style;\r\n    this._canvas.style.borderColor = color;\r\n    this._canvas.style.borderWidth = width;\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Get any context member.\r\n * @public\r\n * @param {string} member - Member name.\r\n * @returns {type}\r\n */\r\nCanvas.prototype.get = function (member) {\r\n    return this._context[member];\r\n};\r\n\r\n/**\r\n * Get scale ratio.\r\n * @public\r\n * @returns {number}\r\n */\r\nCanvas.prototype.getRatio = function () {\r\n    return this._ratio;\r\n};\r\n\r\n/**\r\n * Rotate the canvas.\r\n * @public\r\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\r\n */\r\nCanvas.prototype.rotate = function (rotateDegrees) {\r\n    this._context.rotate(rotateDegrees * Math.PI / 180);\r\n};\r\n\r\n/**\r\n * Set position of canvas relative to it's parent.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n */\r\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\r\n    this._x = x;\r\n    this._y = y;\r\n    if (alignRight) {\r\n        this._canvas.style.left = \"\";\r\n        this._canvas.style.right = x + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.left = x + \"px\";\r\n        this._canvas.style.right = \"\";\r\n    }\r\n    if (valignBottom) {\r\n        this._canvas.style.top = \"\";\r\n        this._canvas.style.bottom = y + \"px\";\r\n    }\r\n    else {\r\n        this._canvas.style.top = y + \"px\";\r\n        this._canvas.style.bottom = \"\";\r\n    }\r\n    this._calculateContentPosition();\r\n};\r\n\r\n/**\r\n * Set size of canvas. \r\n * @public\r\n * @param {int} width - Width in pixels. \r\n * @param {int} height - Height in pixels.\r\n */\r\nCanvas.prototype.setSize = function (width, height) {\r\n    if (width !== undefined) {\r\n        if (typeof width === \"number\") {\r\n            width = width + \"px\";\r\n        }\r\n        this._canvas.style.width = width;\r\n    }\r\n    if (height !== undefined) {\r\n        if (typeof height === \"number\") {\r\n            height = height + \"px\";\r\n        }\r\n        this._canvas.style.height = height;\r\n    }\r\n    this.resize();\r\n};\r\n\r\n/**\r\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\r\n * @public\r\n */\r\nCanvas.prototype.resize = function () {\r\n    //Calculate pixel ratio.\r\n    const dpr = window.devicePixelRatio || 1;\r\n    const bsr = this._context.webkitBackingStorePixelRatio ||\r\n        this._context.mozBackingStorePixelRatio ||\r\n        this._context.msBackingStorePixelRatio ||\r\n        this._context.oBackingStorePixelRatio ||\r\n        this._context.backingStorePixelRatio || 1;\r\n    this._ratio = dpr / bsr;\r\n\r\n    //Update canvas.\r\n    this._canvas.width = this.getContentWidth() * this._ratio;\r\n    this._canvas.height = this.getContentHeight() * this._ratio;\r\n\r\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\r\n    if (!this._dontScale) {\r\n        this._context.scale(this._ratio, this._ratio);\r\n    }\r\n};\r\n\r\n/**\r\n * Draw a stroke/line rectangle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    //Line width build in both direction. Compensate coordinates.\r\n    x += this._context.lineWidth / 2;\r\n    y += this._context.lineWidth / 2;\r\n    width -= this._context.lineWidth;\r\n    height -= this._context.lineWidth;\r\n    this._context.strokeRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 1 coordinate.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x, y, width, height);\r\n};\r\n\r\n/**\r\n * Draw a filled rectangle using 2 coordinates.\r\n * @public\r\n * @param {int} x1 - First X-axis pixel.\r\n * @param {int} y1 - First Y-axis pixel.\r\n * @param {int} x2 - Second X-axis pixel.\r\n * @param {int} y2 - Second Y-axis pixel.\r\n * @param {string} color - Color of filled rectangle.\r\n */\r\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\r\n};\r\n\r\n/**\r\n * Draw a stroked circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n * @param {int} width - Width of stroked line.\r\n */\r\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (width) {\r\n        this._context.lineWidth = width;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw a filled circle.\r\n * @public\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} radius - Radius in pixels.\r\n * @param {string} color - Color of stroked line..\r\n */\r\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\r\n    this._context.fill();\r\n};\r\n\r\n/**\r\n * Draw a line.\r\n * @public\r\n * @param {int} x1 - First x-coordinate in pixels.\r\n * @param {int} y1 - First y-coordinate in pixels.\r\n * @param {int} x2 - Second x-coordinate in pixels.\r\n * @param {int} y2 - Second y-coordinate in pixels.\r\n * @param {int} lineWidth - Stroked line width in pixels.\r\n * @param {string} color - Color of stroked line.\r\n */\r\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(x1, y1);\r\n    this._context.lineTo(x2, y2);\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Draw filled text.\r\n * @public\r\n * @param {string} text - Text to draw.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {string} font - Font to use.\r\n * @param {string} color - Color to use.\r\n * @param {string} align - Alignment ot use.\r\n * @param {string} baseline - Baseline to use.\r\n * @param {number} rotate - Rotate text number of degrees.\r\n */\r\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\r\n    if (font) {\r\n        this._context.font = font;\r\n    }\r\n    if (color) {\r\n        this._context.fillStyle = color;\r\n    }\r\n    if (align) {\r\n        this._context.textAlign = align;\r\n    }\r\n    if (baseline) {\r\n        this._context.textBaseline = baseline;\r\n    }\r\n    if (rotate) {\r\n        this._context.save();\r\n        this._context.translate(x, y);\r\n        this._context.rotate(rotate * Math.PI / 180);\r\n        this._context.fillText(text, 0, 0);\r\n        this._context.restore();\r\n    }\r\n    else {\r\n        this._context.fillText(text, x, y);\r\n    }\r\n};\r\n\r\n/**\r\n * Plot graph curve.\r\n * @public\r\n * @param {array} array - Input data. [[x, y], [x, y]]\r\n * @param {string} color - Color of stroked line.\r\n * @param {int} lineWidth - Width in pixels of stroked line.\r\n */\r\nCanvas.prototype.graph = function (array, color, lineWidth) {\r\n    if (color) {\r\n        this._context.strokeStyle = color;\r\n    }\r\n    if (lineWidth) {\r\n        this._context.lineWidth = lineWidth;\r\n    }\r\n    this._context.beginPath();\r\n    this._context.moveTo(array[0][0], array[0][1]);\r\n    for (let i = 1; i < array.length; ++i) {\r\n        this._context.lineTo(array[i][0], array[0][1]);\r\n    }\r\n    this._context.stroke();\r\n};\r\n\r\n/**\r\n * Fill entire canvas with the given color.\r\n * @public\r\n * @param {string} color - Color to use.\r\n */\r\nCanvas.prototype.fill = function (color) {\r\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\r\n};\r\n\r\nCanvas.prototype.disableMouseInteraction = function () {\r\n    this._canvas.style[\"pointer-events\"] = \"none\";\r\n};\r\n\r\n/**\r\n * Calculate content X and Y.\r\n * @private\r\n */\r\nCanvas.prototype._calculateContentPosition = function () {\r\n    const compStyle = getComputedStyle(this._canvas);\r\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\r\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\r\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\r\n    this._contentX = this._x + this._contentOffsetX;\r\n    this._contentY = this._y + this._contentOffsetY;\r\n};\r\n\r\nexport default Canvas;","import Static from \"./Static\";\r\nimport Is from \"./Is\";\r\n\r\nif (!Math.log10) {\r\n    Math.log10 = Static.log10;\r\n}\r\n\r\n/** \r\n * The Axis class is a single axis to the Graph class.\r\n */\r\n\r\n/**\r\n * Create new graph axis.\r\n * @public\r\n * @constructor\r\n * @param {Options} options - GraphOptions object.\r\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\r\n * @param {string} orientation - X or Y axis.\r\n * @returns {Axis}\r\n */\r\nfunction Axis(options, graphCanvas, axis) {\r\n    if (axis.toLowerCase() === \"x\") {\r\n        this._isX = true;\r\n        this._axis = options.axes.x;\r\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\r\n    }\r\n    else if (axis.toLowerCase() === \"y\") {\r\n        this._isX = false;\r\n        this._axis = options.axes.y;\r\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\r\n    }\r\n    else {\r\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\r\n        return;\r\n    }\r\n    this._options = options;\r\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\r\n}\r\n\r\n/**\r\n * Returns true if all bounds are set.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.hasBounds = function () {\r\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\r\n};\r\n\r\n/**\r\n * True of this axis is logarithmic.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isLog = function () {\r\n    return this._axis.log;\r\n};\r\n\r\n/**\r\n * True of this axis is inverted.\r\n * @public\r\n * @returns {bool}\r\n */\r\nAxis.prototype.isInverted = function () {\r\n    return this._axis.inverted;\r\n};\r\n\r\n/**\r\n * Get min bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMin = function () {\r\n    //Always prioritize override bounds.\r\n    if (this._overrideBounds) {\r\n        return this._overrideBounds.min;\r\n    }\r\n    return this._min;\r\n};\r\n\r\n/**\r\n * Get max bounds.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.getMax = function () {\r\n    //Always prioritize override bounds.\r\n    if (this._overrideBounds) {\r\n        return this._overrideBounds.max;\r\n    }\r\n    return this._max;\r\n};\r\n\r\n/**\r\n * Get the axis label. Uses the options value formatter if set.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabel = function () {\r\n    return this._axis.label;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the tick labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getTickLabelsFont = function () {\r\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\r\n};\r\n\r\n/**\r\n * Get the font(family and size) for the axes labels.\r\n * @public\r\n * @returns {string}\r\n */\r\nAxis.prototype.getAxisLabelFont = function () {\r\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\r\n};\r\n\r\n/**\r\n * Get bounds label width in pixels. Uses the options value formatter if set.\r\n * @public\r\n * @returns {int}\r\n */\r\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\r\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\r\n    if (pad) {\r\n        bound = Static.round(bound + 0.111111111111111, 3);\r\n    }\r\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\r\n};\r\n\r\n/**\r\n * Get the ticks array.\r\n * @public\r\n * @returns {array}\r\n */\r\nAxis.prototype.getTicks = function () {\r\n    return this._ticks;\r\n};\r\n\r\n/**\r\n * Return true if this axis has overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.hasOverridenBounds = function () {\r\n    return this._overrideBounds !== undefined;\r\n};\r\n\r\n/**\r\n * Override bounds. Temporary override user given bounds. \r\n * @public\r\n */\r\nAxis.prototype.overrideBounds = function (bounds) {\r\n    this._overrideBounds = bounds;\r\n    this.calculateTicks();\r\n};\r\n\r\n/**\r\n * Remove overridden bounds.\r\n * @public\r\n */\r\nAxis.prototype.clearOverridenBounds = function () {\r\n    this.overrideBounds();\r\n};\r\n\r\n/**\r\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\r\n * @public\r\n */\r\nAxis.prototype.calculateBounds = function () {\r\n    let newMin, newMax;\r\n\r\n    //Prioritize user given bounds.\r\n    if (!Is.isNull(this._axis.bounds.min)) {\r\n        newMin = this._axis.bounds.min;\r\n    }\r\n    if (!Is.isNull(this._axis.bounds.max)) {\r\n        newMax = this._axis.bounds.max;\r\n    }\r\n\r\n    //Both bounds are not set by the user. Calculate missing.\r\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\r\n        let calcBounds;\r\n        if (this._isX) {\r\n            calcBounds = this._calculateXBounds();\r\n        }\r\n        else {\r\n            calcBounds = this._calculateYBounds();\r\n        }\r\n\r\n        if (calcBounds) {\r\n            //Use both calculated bounds.\r\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\r\n                newMin = calcBounds.min;\r\n                newMax = calcBounds.max;\r\n                //Both values are calculated. Move both.\r\n                if (newMin === newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\r\n                    --newMin;\r\n                    ++newMax;\r\n                }\r\n            }\r\n            //Use only calculated min.\r\n            else if (Is.isNull(newMin)) {\r\n                newMin = calcBounds.min;\r\n                //Only move the calculated value.\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\r\n                    newMin = newMax - 1;\r\n                }\r\n            }\r\n            //use only calculated max.\r\n            else if (Is.isNull(newMax)) {\r\n                newMax = calcBounds.max;\r\n                if (newMin >= newMax) {\r\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\r\n                    newMax = newMin + 1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\r\n        if (this._axis.log && newMin <= 0) {\r\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\r\n            newMin = newMax = undefined;\r\n        }\r\n    }\r\n    this._min = newMin;\r\n    this._max = newMax;\r\n};\r\n\r\n/**\r\n * Calculate graph axes ticks.\r\n * @public\r\n */\r\nAxis.prototype.calculateTicks = function () {\r\n    let ticks;\r\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\r\n    //Create ticks with user given options ticker.\r\n    if (this._axis.ticker) {\r\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n    //Create ticks with the default ticker.\r\n    else {\r\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\r\n    }\r\n\r\n    if (!ticks.length) {\r\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\r\n    }\r\n\r\n    //Update ticks with pixel coordinates.\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\r\n    }\r\n    //Show tick markers.\r\n    if (this._options.axes.tickMarkers.show) {\r\n        ticks.markers = {\r\n            offset: this._options.axes.tickMarkers.offset,\r\n            length: this._options.axes.tickMarkers.length,\r\n            width: this._options.axes.tickMarkers.width,\r\n            color: this._options.axes.tickMarkers.color\r\n        };\r\n    }\r\n    //Show tick labels.\r\n    if (this._options.axes.tickLabels.show) {\r\n        ticks.labels = {\r\n            offset: this._options.axes.tickLabels.offset,\r\n            size: this._options.axes.tickLabels.size,\r\n            color: this._options.axes.tickLabels.color,\r\n            font: this.getTickLabelsFont(),\r\n            width: []\r\n        };\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\r\n        }\r\n    }\r\n    //Show grid.\r\n    if (this._axis.grid.width) {\r\n        ticks.grid = {\r\n            width: this._axis.grid.width,\r\n            color: this._axis.grid.color\r\n        };\r\n    }\r\n    this._ticks = ticks;\r\n};\r\n\r\n/**\r\n * Get value from given pixel coordinate.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.pixelToValue = function (pixel) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get pixel coordinate from given value.\r\n * @public\r\n * @returns {number}\r\n */\r\nAxis.prototype.valueToPixel = function (value) {\r\n    //Logarithmic\r\n    if (this._axis.log) {\r\n        //Logarithmic inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\r\n        }\r\n        //Logarithmic normal orientation.\r\n        else {\r\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n    //Linear\r\n    else {\r\n        //Linear inverted orientation.\r\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\r\n        }\r\n        //Linear normal orientation.\r\n        else {\r\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Format the given value. Uses value formatter in options if available.\r\n * @public\r\n * @param {number} value\r\n * @returns {string}\r\n */\r\nAxis.prototype.formatLegendValue = function (value) {\r\n    //Use user given formatter.\r\n    if (this._axis.legendValueFormatter) {\r\n        return this._axis.legendValueFormatter(value);\r\n    }\r\n    //Use default value formatter.\r\n    else {\r\n        return Static.round(value, 5);\r\n    }\r\n};\r\n\r\n/**\r\n * Callback function for getting pixel coordinate from a given value.\r\n * Much faster than asking this class valueToPixel function for each value.\r\n * Needs to be required if window changes size or new bounds are set.\r\n * Safest to aquire for each render pass.\r\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\r\n * @callback Axis~valueToPixelCallback\r\n * @param {int} index\r\n * @returns {number}\r\n */\r\n\r\n/**\r\n * Get a callback to calculate the pixel coordinate for a given value.\r\n * Used by the graph render function to improve performance.\r\n * @public\r\n * @returns {Axis~valueToPixelCallback}\r\n */\r\nAxis.prototype.getValueToPixelCallback = function () {\r\n    let num, denom, numVar, numOp, logFunc;\r\n    const size = this._getSize() * this._getRatio();\r\n\r\n    //Inverted X or normal Y.\r\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\r\n        numVar = this.getMax();\r\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\r\n    }\r\n    //Normal X or inverted Y.\r\n    else {\r\n        numVar = this.getMin();\r\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\r\n    }\r\n\r\n    //Axis is logarithmic.\r\n    if (this._axis.log) {\r\n        numOp = \"/\";\r\n        logFunc = \"Math.log10\";\r\n    }\r\n    //Axis is linear.\r\n    else {\r\n        numOp = \"-\";\r\n        logFunc = \"\";\r\n    }\r\n\r\n    //Only do the numerator operation on the numerator if the variable is not zero.\r\n    if (numVar) {\r\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\r\n    }\r\n    else {\r\n        num = logFunc + \"(value)\";\r\n    }\r\n\r\n    //Only do the fraction if the denominator is not 1.\r\n    if (denom !== 1) {\r\n        denom = \"/ \" + denom;\r\n    }\r\n    else {\r\n        denom = \"\";\r\n    }\r\n\r\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\r\n};\r\n\r\n/**\r\n * Calculate X-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateXBounds = function () {\r\n    //Calculate missing X-axis bounds from dataX values.\r\n    if (this._options.graph.dataX.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\r\n        }\r\n        let min = 4294967296;\r\n        let max = -4294967296;\r\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\r\n            const data = this._options.graph.dataX[i];\r\n            min = Math.min(min, data[0], data[data.length - 1]);\r\n            max = Math.max(max, data[0], data[data.length - 1]);\r\n        }\r\n        return { min: min, max: max };\r\n    }\r\n    //Calculate X-axis bounds from dataY length.\r\n    else if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\r\n        }\r\n        let max = 0;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            max = Math.max(max, this._options.graph.dataY[i].length);\r\n        }\r\n        return { min: 1, max };\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate Y-axis bounds.\r\n * @private\r\n * @returns {object} {int min, int max}\r\n */\r\nAxis.prototype._calculateYBounds = function () {\r\n    //Calculate Y-axis bounds from dataY values.\r\n    if (this._options.graph.dataY.length) {\r\n        if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\r\n        }\r\n        let min = null;\r\n        let max = null;\r\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n            const data = this._options.graph.dataY[i];\r\n            if (data.length && min === null) {\r\n                min = 4294967296;\r\n                max = -4294967296;\r\n            }\r\n            for (let j = 0; j < data.length; ++j) {\r\n                min = Math.min(min, data[j]);\r\n                max = Math.max(max, data[j]);\r\n            }\r\n        }\r\n        return min !== null\r\n            ? { min, max }\r\n            : null;\r\n    }\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\r\n        return;\r\n    }\r\n};\r\n\r\n/**\r\n * Default get ticks funciton. Used when no ticker is set in options.\r\n * @private\r\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\r\n * @param {number} minValue - Min/lower bounds value.\r\n * @param {number} maxValue - Max/upper bounds value.\r\n * @param {int} graphSize - Size(width or height) of graph in pixels.\r\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\r\n * @returns {array<{number, string}>}\r\n */\r\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\r\n    //Pre-format ticker values.\r\n    if (this._axis.tickerValuePreFormatter) {\r\n        minValue = this._axis.tickerValuePreFormatter(minValue);\r\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\r\n    }\r\n\r\n    let ticks;\r\n\r\n    //If the range is to small even a log axis will get linear values.\r\n    if (isLog && maxValue - minValue >= 4 * minValue) {\r\n        ticks = getDefaultLogTicks(minValue, maxValue);\r\n    }\r\n    else {\r\n        ticks = getDefaultLinTicks(minValue, maxValue, graphSize, labelSize);\r\n    }\r\n\r\n    //Post-format ticker values.\r\n    if (this._axis.tickerValuePostFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    //Add user formatted labels.\r\n    if (this._axis.tickerLabelFormatter) {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n    //Add default formatted labels.\r\n    else {\r\n        for (let i = 0; i < ticks.length; ++i) {\r\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\r\n        }\r\n    }\r\n\r\n    return ticks;\r\n};\r\n\r\n\r\nfunction defaultTickerLabelFormatter(value) {\r\n    if (value < 0) {\r\n        return '-' + defaultTickerLabelFormatter(-value);\r\n    }\r\n    let ranges = [];\r\n    if (value >= 1e3) {\r\n        ranges = [\r\n            { divider: 1e24, suffix: 'Y' },\r\n            { divider: 1e21, suffix: 'Z' },\r\n            { divider: 1e18, suffix: 'E' },\r\n            { divider: 1e15, suffix: 'P' },\r\n            { divider: 1e12, suffix: 'T' },\r\n            { divider: 1e9, suffix: 'G' },\r\n            { divider: 1e6, suffix: 'M' },\r\n            { divider: 1e3, suffix: 'k' }\r\n        ];\r\n    }\r\n    else if (value < 1e-2) {\r\n        ranges = [\r\n            { divider: 1e-3, suffix: 'm' },\r\n            { divider: 1e-6, suffix: 'µ' },\r\n            { divider: 1e-9, suffix: 'n' },\r\n            { divider: 1e-12, suffix: 'p' },\r\n            { divider: 1e-15, suffix: 'f' },\r\n            { divider: 1e-18, suffix: 'a' },\r\n            { divider: 1e-21, suffix: 'z' },\r\n            { divider: 1e-24, suffix: 'y' }\r\n        ];\r\n    }\r\n    for (let i = 0; i < ranges.length; i++) {\r\n        if (value >= ranges[i].divider) {\r\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\r\n        }\r\n    }\r\n    return value.toString();\r\n}\r\n\r\n//For a given value calculate the best step value.\r\nfunction getStepValue(isLog, value) {\r\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\r\n    const exp = Math.floor(log10(value));\r\n    for (let i = 0; i < mult.length; ++i) {\r\n        const newValue = Math.pow(10, exp) * mult[i];\r\n        if (newValue >= value) {\r\n            return newValue;\r\n        }\r\n    }\r\n}\r\n\r\n//Get linear ticks.\r\nfunction getDefaultLinTicks(minValue, maxValue, graphSize, labelSize) {\r\n    //Max number of labels.\r\n    const maxNumLabels = graphSize / (labelSize * 1.5);\r\n    //Value range\r\n    const range = maxValue - minValue;\r\n    //Get ticker value step.\r\n    const step = getStepValue(false, range / maxNumLabels);\r\n    //Calculate start pos.\r\n    let start = minValue;\r\n    //Make sure start is on a step position.\r\n    const diff = modf(start, step);\r\n    if (diff > 0) {\r\n        start += step - diff;\r\n    }\r\n    if (diff < 0) {\r\n        start -= diff;\r\n    }\r\n    const ticks = [];\r\n    for (; start <= maxValue; start += step) {\r\n        start = secureFloat(start);\r\n        ticks.push({ value: start });\r\n    }\r\n    return ticks;\r\n}\r\n\r\n/**\r\n * Modulus for float.\r\n * @public\r\n * @param {number} a\r\n * @param {number} b\r\n * @returns {number}\r\n */\r\nfunction modf(a, b) {\r\n    return a - Math.round(a / b) * b;\r\n}\r\n\r\n//Get logarithmic ticks.\r\nfunction getDefaultLogTicks(minValue, maxValue) {\r\n    const ticks = [];\r\n    let step = getStepValue(true, minValue);\r\n    for (; ;) {\r\n        for (let i = 1; i < 10; ++i) {\r\n            let value = i * step;\r\n            if (value > maxValue) {\r\n                return ticks;\r\n            }\r\n            value = secureFloat(value);\r\n            ticks.push({ value: value });\r\n        }\r\n        step *= 10;\r\n    }\r\n}\r\n\r\nexport default Axis;\r\n\r\n/**\r\n * Secure float precision.\r\n * @public\r\n * @param {number} val\r\n * @returns {number}\r\n */\r\nfunction secureFloat(val) {\r\n    return parseFloat(val.toPrecision(15));\r\n}\r\n\r\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\r\nimport Input from \"./Input\";\r\n\r\n/** \r\n * Interaction is a class that handles the user interaction for the Graph class.\r\n */\r\n\r\n/**\r\n * Create a new Interaction.\r\n * @public\r\n * @constructor\r\n * @param {Graph} graph - Graph instance this interaction belongs to.\r\n * @returns {Interaction}\r\n */\r\nfunction Interaction(graph) {\r\n    this._graph = graph;\r\n}\r\n\r\n/**\r\n * Update(add/remove) interaction events.\r\n * @public\r\n */\r\nInteraction.prototype.updateOptions = function () {\r\n    //Resizing.\r\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\r\n        this._resizeCallback = this._addResizeEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\r\n        window.removeEventListener(\"resize\", this._resizeCallback);\r\n        this._resizeCallback = undefined;\r\n    }\r\n\r\n    //Mouse tracking.\r\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\r\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\r\n        const canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\r\n        this._mouseTrackingCallbacks = undefined;\r\n    }\r\n\r\n    //Zooming.\r\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\r\n        this._zoomCallbacks = this._addZoomEvents();\r\n    }\r\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\r\n        let canvas = this._graph._canvas.interaction.getCanvas();\r\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\r\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\r\n        canvas = this._graph._canvas.graph.getCanvas();\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas = this._graph._canvas.background.getCanvas();\r\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\r\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\r\n        this._zoomCallbacks = undefined;\r\n    }\r\n\r\n    //Smooth option.\r\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\r\n        this._smoothingCallback = this._addSmoothingEvent();\r\n    }\r\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\r\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\r\n        this._smoothingCallback = undefined;\r\n        this._smoothingInput.remove();\r\n        this._smoothingInput = undefined;\r\n    }\r\n\r\n    //Every time options are updated. Update smoothing value if available.\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\r\n    }\r\n\r\n    this._createInteractionData();\r\n};\r\n\r\n/**\r\n * Clear interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.clear = function () {\r\n    this._graph._canvas.interaction.clear();\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"none\";\r\n    }\r\n};\r\n\r\n/**\r\n * Render interaction data.\r\n * @public\r\n */\r\nInteraction.prototype.render = function () {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Inform the activity class that the graph has changed size and/or position.\r\n * @param {int} x - X-coordinate in pixels.\r\n * @param {int} y - Y-coordinate in pixels.\r\n * @param {int} width - Width in pixels.\r\n * @param {int} height - Height in pixels.\r\n */\r\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\r\n    if (this._smoothingInput) {\r\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\r\n        this._smoothingInput.style.left = x + \"px\";\r\n        this._smoothingInput.style.display = \"block\";\r\n    }\r\n};\r\n\r\n/**\r\n * Add a resize event.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addResizeEvent = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    let timeOutResize;\r\n    //Re-plots the graph on resize end.\r\n    function resizeEnd() {\r\n        graph._canvas.background.resize();\r\n        graph._calculateGraphSize();\r\n        graph._plot();\r\n        timeOutResize = undefined;\r\n        self._resizing = false;\r\n    }\r\n    //Clear graph, hightlight and spinner features on resize start.\r\n    function resizeStart() {\r\n        self._resizing = true;\r\n        graph._canvas.graph.clear();\r\n        graph._canvas.highlight.clear();\r\n        graph._canvas.interaction.clear();\r\n        graph._renderLegend();\r\n    }\r\n    let lastWidth = this._graph._canvas.background.getWidth();\r\n    let lastHeight = this._graph._canvas.background.getHeight();\r\n    let lastPixelRatio = window.devicePixelRatio;\r\n    function callback() {\r\n        //Make sure that the size actually have changed.\r\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\r\n            lastWidth = graph._canvas.background.getWidth();\r\n            lastHeight = graph._canvas.background.getHeight();\r\n            lastPixelRatio = window.devicePixelRatio;\r\n            //First time the function is called for this resize event.\r\n            if (!timeOutResize) {\r\n                resizeStart();\r\n            }\r\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\r\n            clearTimeout(timeOutResize);\r\n            timeOutResize = setTimeout(resizeEnd, 500);\r\n        }\r\n    }\r\n    window.addEventListener(\"resize\", callback);\r\n    return callback;\r\n};\r\n\r\n/**\r\n * Add mouse tracking events.\r\n * @private\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addMouseTrackingEvents = function () {\r\n    const self = this;\r\n    const graph = this._graph;\r\n    function mouseMoveCallback(e) {\r\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\r\n            return;\r\n        }\r\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\r\n        const values = [valueX];\r\n        graph._canvas.interaction.clear();\r\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\r\n            const dataY = graph._options.graph.dataY[i];\r\n            //Cant track unexisting values.\r\n            if (!dataY.length) {\r\n                break;\r\n            }\r\n            const dataXCallback = graph._options.getDataCallback(\"x\", i);\r\n            const res = Static.binarySearch(dataXCallback, dataY.length, valueX);\r\n            let valueY;\r\n            //Found exaxt X-value.\r\n            if (res.found !== undefined) {\r\n                if (graph._options.graph.smoothing) {\r\n                    valueY = Static.calculateSmothingValue(res.found, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueY = dataY[res.found];\r\n                }\r\n            }\r\n            //Binary search returned min and max at same value without a found.\r\n            //There is no matching value. Just abort.\r\n            else if (res.min === res.max) {\r\n                break;\r\n            }\r\n            //Calculate Y-value from min max coordinates.\r\n            else {\r\n                const valueXMin = dataXCallback(res.min);\r\n                const valueXMax = dataXCallback(res.max);\r\n                const span = valueXMax - valueXMin;\r\n                const weightMin = 1 - (valueX - valueXMin) / span;\r\n                const weightMax = 1 - (valueXMax - valueX) / span;\r\n                let valueMin, valueMax;\r\n                if (graph._options.graph.smoothing) {\r\n                    valueMin = Static.calculateSmothingValue(res.min, graph._options.graph.smoothing, dataY);\r\n                    valueMax = Static.calculateSmothingValue(res.max, graph._options.graph.smoothing, dataY);\r\n                }\r\n                else {\r\n                    valueMin = dataY[res.min];\r\n                    valueMax = dataY[res.max];\r\n                }\r\n                valueY = valueMin * weightMin + valueMax * weightMax;\r\n            }\r\n            const pixelY = graph._axes.y.valueToPixel(valueY);\r\n            self._interactionData[i].moveTo(e.offsetX, pixelY);\r\n            values[i + 1] = valueY;\r\n        }\r\n        graph._renderLegend(values);\r\n    }\r\n    function mouseOutCallback() {\r\n        if (!self.mouseDown) {\r\n            graph._canvas.interaction.clear();\r\n            graph._renderLegend();\r\n        }\r\n    }\r\n    const canvas = this._graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousemove\", mouseMoveCallback);\r\n    canvas.addEventListener(\"mouseout\", mouseOutCallback);\r\n    return { mousemove: mouseMoveCallback, mouseout: mouseOutCallback };\r\n};\r\n\r\n/**\r\n * Add zoom events.\r\n * @private\r\n * @returns {object} - object containing callbacks.\r\n */\r\nInteraction.prototype._addZoomEvents = function () {\r\n    const graph = this._graph;\r\n    const self = this;\r\n    this.mouseDown = false;\r\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\r\n    let startX, startY;\r\n    //true = horizontal. false = vertical.\r\n    let lastHorizontal;\r\n    const color = \"rgba(130, 130, 130, 0.2)\";\r\n    let lastX, lastY;\r\n    function callbackMouseDown(e) {\r\n        if (!graph._axes.x.hasBounds() || !graph._axes.y.hasBounds()) {\r\n            return;\r\n        }\r\n        lastX = startX = e.offsetX;\r\n        lastY = startY = e.offsetY;\r\n        self.mouseDown = true;\r\n        lastHorizontal = undefined;\r\n        graph._renderLegend();\r\n    }\r\n    function callbackMouseMove(e) {\r\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\r\n            lastX = e.offsetX;\r\n            lastY = e.offsetY;\r\n            const diffX = Math.abs(startX - e.offsetX);\r\n            const diffY = Math.abs(startY - e.offsetY);\r\n            const newHorizontal = diffX > diffY;\r\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\r\n                lastHorizontal = newHorizontal;\r\n            }\r\n            graph._canvas.interaction.clear();\r\n            //Mark horizontally.\r\n            if (lastHorizontal) {\r\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\r\n            }\r\n            //Mark vertically.\r\n            else {\r\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\r\n            }\r\n        }\r\n    }\r\n    function callbackMouseUp(e) {\r\n        if (self.mouseDown) {\r\n            if (startX !== e.offsetX || startY !== e.offsetY) {\r\n                graph._canvas.interaction.clear();\r\n                //X-axis.\r\n                if (lastHorizontal) {\r\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\r\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\r\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\r\n                    graph._axes.x.overrideBounds({ min: min, max: max });\r\n                }\r\n                //Y-axis.\r\n                else {\r\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\r\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\r\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\r\n                    graph._axes.y.overrideBounds({ min: min, max: max });\r\n                }\r\n                graph._plot();\r\n            }\r\n            self.mouseDown = false;\r\n        }\r\n    }\r\n    function callbackDoubleClick(e) {\r\n        //Prevents double click from selecting the div.\r\n        //Firefox, Chrome, etc.\r\n        if (e.preventDefault) {\r\n            e.preventDefault();\r\n        }\r\n        //IE\r\n        else {\r\n            e.returnValue = false;\r\n            e.cancelBubble = true;\r\n        }\r\n        if (graph._axes.x.hasOverridenBounds() || graph._axes.y.hasOverridenBounds()) {\r\n            graph._axes.x.clearOverridenBounds();\r\n            graph._axes.y.clearOverridenBounds();\r\n            graph._plot();\r\n        }\r\n    }\r\n    function callbackMouseOut(e) {\r\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\r\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\r\n            return;\r\n        }\r\n        graph._canvas.interaction.clear();\r\n        self.mouseDown = false;\r\n    }\r\n\r\n    let canvas = graph._canvas.interaction.getCanvas();\r\n    canvas.addEventListener(\"mousedown\", callbackMouseDown);\r\n    canvas.addEventListener(\"mousemove\", callbackMouseMove);\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas.addEventListener(\"dblclick\", callbackDoubleClick);\r\n    canvas = this._graph._canvas.graph.getCanvas();\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas = this._graph._canvas.background.getCanvas();\r\n    canvas.addEventListener(\"mouseup\", callbackMouseUp);\r\n    canvas.addEventListener(\"mouseleave\", callbackMouseOut);\r\n    return { mousedown: callbackMouseDown, mousemove: callbackMouseMove, mouseup: callbackMouseUp, dblclick: callbackDoubleClick, mouseout: callbackMouseOut };\r\n};\r\n\r\n/**\r\n * Add smoothing input event.\r\n * @returns {object} Object containing callbacks.\r\n */\r\nInteraction.prototype._addSmoothingEvent = function () {\r\n    this._smoothingInput = Input({\r\n        type: \"number\",\r\n        tabIndex: -1,\r\n        maxLength: 6,\r\n        value: 0,\r\n        min: 0\r\n    });\r\n    this._smoothingInput.style[\"z-index\"] = 5;\r\n    this._smoothingInput.style.position = \"absolute\";\r\n    this._smoothingInput.style.width = \"50px\";\r\n    this._smoothingInput.style.height = \"21px\";\r\n    this._smoothingInput.style[\"background-color\"] = \"white\";\r\n    this._smoothingInput.style[\"border-radius\"] = 0;\r\n    this._smoothingInput.style.border = \"1px solid #ccc\";\r\n    this._smoothingInput.style.color = \"#555\";\r\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\r\n    this._smoothingInput.style.display = \"none\";\r\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\r\n    this._graph._parent.append(this._smoothingInput);\r\n    const self = this;\r\n    function callbackDone() {\r\n        let value = parseInt(self._smoothingInput.value);\r\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\r\n        let length = 4294967296;\r\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\r\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\r\n        }\r\n        if (2 * value + 1 > length) {\r\n            value = Math.floor((length - 1) / 2);\r\n        }\r\n        self._smoothingInput.value = value;\r\n        self._graph._options.graph.smoothing = value;\r\n        self._graph._renderGraph();\r\n    }\r\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\r\n    return callbackDone;\r\n};\r\n\r\n/**\r\n * Create interaction data.\r\n * @private\r\n */\r\nInteraction.prototype._createInteractionData = function () {\r\n    const radius = 3;\r\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\r\n    this._interactionData = [];\r\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\r\n        //Clear area\r\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\r\n\r\n        //Draw solid circle\r\n        ctx.beginPath();\r\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\r\n        ctx.fill();\r\n\r\n        //If fill; draw black border to increase visibility.\r\n        if (this._graph._options.graph.fill) {\r\n            ctx.beginPath();\r\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\r\n            ctx.strokeStyle = \"#000000\";\r\n            ctx.stroke();\r\n        }\r\n\r\n        //Get image data from tmp context.\r\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\r\n        //Add member data.\r\n        const canvas = this._graph._canvas.interaction;\r\n        imageData.moveTo = function (x, y) {\r\n            canvas.putImageData(this, x, y, -radius, -radius);\r\n        };\r\n        this._interactionData[i] = imageData;\r\n    }\r\n};\r\n\r\nexport default Interaction;\r\n\r\n/**\r\n * Clamp the given value to the given range.\r\n * @param {type} min - Min value.\r\n * @param {type} number - Value to clamp.\r\n * @param {type} max - Max value.\r\n * @returns {Number} - Clamped value.\r\n */\r\nfunction clamp(min, number, max) {\r\n    if (number < min) {\r\n        return min;\r\n    } else if (number > max) {\r\n        return max;\r\n    } else {\r\n        return number;\r\n    }\r\n}","/*\r\n* @author Andreas Arvidsson\r\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\r\n */\r\n\r\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\r\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\r\n}\r\n\r\nimport Spinner from \"./lib/spin.min\";\r\nimport Canvas from \"./Canvas\";\r\nimport Axis from \"./Axis\";\r\nimport Interaction from \"./Interaction\";\r\nimport Static from \"./Static\";\r\nimport Options from \"./Options\";\r\nimport Is from \"./Is\";\r\n\r\n/** \r\n * The Graph class is a 2D graph plotter.\r\n * Built with performance and customizability in mind. Supports multiple data\r\n * sets and all data sets are available as typed arrays.\r\n */\r\n\r\n/**\r\n * Create new graph.\r\n * @public\r\n * @constructor\r\n * @param {dom} parent - Parent div.  DOM or ID string. Graph will fill this div.\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n * @returns {Graph}\r\n */\r\nfunction Graph(parent, options) {\r\n    if (this instanceof Graph) {\r\n        this._init(parent, options);\r\n    }\r\n    //The new keyword was omitted.\r\n    else {\r\n        return new Graph(parent, options);\r\n    }\r\n}\r\n\r\n/**\r\n * Implementation of the constructor.\r\n * @private\r\n * @param {dom} parent - Parent div. DOM or ID string. Graph will fill this div.\r\n * @param {OPTIONS} options - Options to customize the graph.\r\n */\r\nGraph.prototype._init = function (parent, options) {\r\n    if (!parent) {\r\n        console.error(\"owp.graph ERROR: Parent dom is null\");\r\n        return;\r\n    }\r\n\r\n    parent.style.position = \"relative\";\r\n\r\n    this._parent = parent;\r\n    this._options = new Options();\r\n\r\n    this._highlights = [];\r\n\r\n    this._canvas = {\r\n        background: new Canvas(parent, \"background\"),\r\n        graph: new Canvas(parent, \"graph\", true),\r\n        highlight: new Canvas(parent, \"highlight\"),\r\n        interaction: new Canvas(parent, \"interaction\")\r\n    };\r\n\r\n    this._canvas.background.setZIndex(0);\r\n    this._canvas.graph.setZIndex(1);\r\n    this._canvas.highlight.setZIndex(2);\r\n    //Spinner uses zIndex 3.\r\n    this._canvas.interaction.setZIndex(4);\r\n    //Smoothing input used zIndex 5.\r\n\r\n    this._axes = {\r\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\r\n        y: new Axis(this._options, this._canvas.graph, \"y\")\r\n    };\r\n\r\n    this._interaction = new Interaction(this);\r\n\r\n    if (options) {\r\n        this.setOptions(options);\r\n    }\r\n    else {\r\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\r\n        this.setOptions({});\r\n    }\r\n};\r\n\r\n/**\r\n * Create legend canvas and attach to parent dom.\r\n * @private\r\n */\r\nGraph.prototype._initLegend = function () {\r\n    const location = this._options.legend.location;\r\n    if (location && this._options.interaction.trackMouse) {\r\n        //DIV id.\r\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\r\n            const legendDiv = document.getElementById(location);\r\n            if (legendDiv) {\r\n                legendDiv.style.position = \"relative\";\r\n                //Reuse existing canvas.\r\n                if (this._canvas.legend) {\r\n                    this._canvas.legend.setParent(legendDiv);\r\n                }\r\n                //Create new canvas.\r\n                else {\r\n                    this._canvas.legend = new Canvas(legendDiv);\r\n                }\r\n            }\r\n            else {\r\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\r\n            }\r\n        }\r\n        else {\r\n            //Set same parent for legend as rest of graph.\r\n            if (this._canvas.legend) {\r\n                this._canvas.legend.setParent(this._parent);\r\n            }\r\n            else {\r\n                this._canvas.legend = new Canvas(this._parent);\r\n                this._canvas.legend.disableMouseInteraction();\r\n            }\r\n            if (location.toLowerCase() === \"top\") {\r\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\r\n            }\r\n            else if (location.toLowerCase() === \"right\") {\r\n                this._canvas.legend.setPosition(0, 0, true);\r\n                this._canvas.legend.setSize(200, \"100%\");\r\n            }\r\n        }\r\n    }\r\n    //Remove old legend.\r\n    else if (this._canvas.legend) {\r\n        this._canvas.legend.setParent();\r\n        this._canvas.legend = undefined;\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the legend on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderLegend = function (values) {\r\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\r\n        return;\r\n    }\r\n\r\n    const settings = this._options.legend;\r\n    const canvas = this._canvas.legend;\r\n    canvas.clear();\r\n    canvas.set(\"font\", this._options.getLegendFont());\r\n    canvas.set(\"textBaseline\", \"top\");\r\n    canvas.set(\"textAlign\", settings.align);\r\n\r\n    const isTop = settings.location.toLowerCase() === \"top\";\r\n    const alignLeft = settings.align.toLowerCase() === \"left\";\r\n    //newLine is disabled for top location.\r\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\r\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\r\n    //OffsetY is disabled for top location.\r\n    let y = isTop ? 0 : this._options.legend.offsetY;\r\n\r\n    function printValue(color, name, value) {\r\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\r\n        canvas.text(str, x, y, null, color);\r\n        if (newLine) {\r\n            y += settings.size;\r\n        }\r\n        else {\r\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\r\n        }\r\n    }\r\n\r\n    if (alignLeft || newLine) {\r\n        for (let i = 0; i <= this._options.graph.dataY.length; ++i) {\r\n            printValue(\r\n                this._options.graph.colors[i],\r\n                this._options.getName(i),\r\n                values && values[i] !== undefined\r\n                    ? this._axes.y.formatLegendValue(values[i])\r\n                    : undefined\r\n            );\r\n        }\r\n    }\r\n    else {\r\n        for (let i = this._options.graph.dataY.length; i >= 0; --i) {\r\n            printValue(\r\n                this._options.graph.colors[i],\r\n                this._options.getName(i),\r\n                values && values[i] !== undefined\r\n                    ? this._axes.y.formatLegendValue(values[i])\r\n                    : undefined\r\n            );\r\n        }\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * Get options instance.\r\n * @public\r\n * @returns {Options}\r\n */\r\nGraph.prototype.getOptions = function () {\r\n    return this._options;\r\n};\r\n\r\n/**\r\n * Sets all options to their default values.\r\n * @public\r\n */\r\nGraph.prototype.setDefaultOptions = function () {\r\n    this.setOptions(Options.getDefault());\r\n};\r\n\r\n/**\r\n * Set new options.\r\n * @public\r\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\r\n */\r\nGraph.prototype.setOptions = function (options) {\r\n    this._options.set(options);\r\n    this._hasCalculatedGraphSize = false;\r\n    if (this._options.isOk()) {\r\n        this._axes.x.calculateBounds();\r\n        this._axes.y.calculateBounds();\r\n        this._interaction.updateOptions();\r\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\r\n        this._initLegend();\r\n        this._plot();\r\n    }\r\n};\r\n\r\n/**\r\n * Set new data.\r\n * @public\r\n */\r\nGraph.prototype.setData = function (dataX, dataY) {\r\n    const options = { graph: {} };\r\n    if (dataX) {\r\n        options.graph.dataX = dataX;\r\n    }\r\n    if (dataY) {\r\n        options.graph.dataY = dataY;\r\n    }\r\n    this.setOptions(options);\r\n};\r\n\r\n/**\r\n * \r\n * @param {number} x1 - Min X value.\r\n * @param {number} y1 - Min Y value.\r\n * @param {number} x2 - Max X-value.\r\n * @param {number} y2 - Max Y-value.\r\n * @returns {undefined}\r\n */\r\nGraph.prototype.zoom = function (x1, y1, x2, y2) {\r\n    this._axes.x.overrideBounds({ min: x1, max: x2 });\r\n    this._axes.y.overrideBounds({ min: y1, max: y2 });\r\n    this._plot();\r\n};\r\n\r\n/**\r\n * Reset zoom level to zero.\r\n * @returns {undefined}\r\n */\r\nGraph.prototype.resetZoom = function () {\r\n    this._axes.x.clearOverridenBounds();\r\n    this._axes.y.clearOverridenBounds();\r\n    this._plot();\r\n};\r\n\r\n/**\r\n * Clears/removes current highlight.\r\n * @public\r\n */\r\nGraph.prototype.clearHighlight = function () {\r\n    this._canvas.highlight.clear();\r\n    this._highlights = [];\r\n};\r\n\r\n/**\r\n * Highlight the given are of the graph.\r\n * @public\r\n * @param {number} x1 - First x-axis value.\r\n * @param {number} y1 - First y-axis value.\r\n * @param {number} x2 - Second x-axis value.\r\n * @param {number} y2 - Second y-axis value.\r\n * @param {string} color - Color of the selected area.\r\n */\r\nGraph.prototype.highlight = function (x1, y1, x2, y2, color) {\r\n    this._highlights.push({\r\n        x1: x1,\r\n        y1: y1,\r\n        x2: x2,\r\n        y2: y2,\r\n        color: color ? color : \"rgba(0, 0, 255, 0.2)\"\r\n    });\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._renderHighlight();\r\n    }\r\n};\r\n\r\n/**\r\n * Manually start or stop spinner.\r\n * @public\r\n * @param {bool} doSpin - If true the spinner will start.\r\n */\r\nGraph.prototype.spin = function (doSpin) {\r\n    if (doSpin) {\r\n        //Spinner does not exist. Create it.\r\n        if (!this._spinner) {\r\n            this._spinnerDiv = document.createElement(\"div\");\r\n            this._parent.append(this._spinnerDiv);\r\n            this._spinnerDiv.style.position = \"absolute\";\r\n            this._spinnerDiv.style[\"z-index\"] = 3;\r\n            this._updateSpinnerSize();\r\n            this._spinner = new Spinner(this._options.spinner);\r\n        }\r\n        if (!this._spinner.isSpinning) {\r\n            this._spinner.spin(this._spinnerDiv);\r\n            this._spinner.isSpinning = true;\r\n        }\r\n    }\r\n    else if (this._spinner) {\r\n        this._spinner.stop();\r\n        this._spinner.isSpinning = false;\r\n    }\r\n};\r\n\r\n/**\r\n * Plots/draws the graph.\r\n * @private\r\n */\r\nGraph.prototype._plot = function () {\r\n    if (!this._options.isOk()) {\r\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\r\n        return;\r\n    }\r\n\r\n    if (this._options.debug) {\r\n        console.time(\"owp.graph DEBUG: Plot time\");\r\n    }\r\n\r\n    //If graph size has not yet been calculated. Do it.\r\n    if (!this._hasCalculatedGraphSize) {\r\n        this._calculateGraphSize();\r\n    }\r\n\r\n    //Clear plot.\r\n    this._canvas.background.clear();\r\n    this._canvas.graph.clear();\r\n    this._canvas.highlight.clear();\r\n    this._interaction.clear();\r\n\r\n    //Render non data related features.\r\n    this._renderTitle();\r\n    this._renderAxesLabels();\r\n\r\n    //Has bounds. Render bounds related features.\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._renderXAxis();\r\n        this._renderYAxis();\r\n        this._renderHighlight();\r\n\r\n        //Has graph data. Render graph data.\r\n        if (this._options.graph.dataY.length) {\r\n            this._renderLegend();\r\n            this._renderGraph();\r\n            this._interaction.render();\r\n        }\r\n        else if (this._options.debug) {\r\n            console.log(\"owp.graph DEBUG: No data set available. Plotting available features.\");\r\n        }\r\n    }\r\n    //Has neither bounds or data.\r\n    else if (this._options.debug) {\r\n        console.log(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\r\n    }\r\n\r\n    if (this._options.debug) {\r\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\r\n    }\r\n};\r\n\r\n/**\r\n * Updates the position and size of the spinner div based on the graph canvas.\r\n * @private\r\n */\r\nGraph.prototype._updateSpinnerSize = function () {\r\n    if (this._spinnerDiv) {\r\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\r\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\r\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\r\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\r\n    }\r\n};\r\n\r\n/**\r\n * Calculate graph canvas position and size.\r\n * @private\r\n */\r\nGraph.prototype._calculateGraphSize = function () {\r\n    let x = this._getOffset([\"left\"]);\r\n    let y = this._getOffset([\"top\"]);\r\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\r\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\r\n\r\n    //Set graph canvas.\r\n    this._canvas.graph.setPosition(x, y);\r\n    this._canvas.graph.setSize(width, height);\r\n\r\n    //Convert to content space.\r\n    x = this._canvas.graph.getContentX();\r\n    y = this._canvas.graph.getContentY();\r\n    width = this._canvas.graph.getContentWidth();\r\n    height = this._canvas.graph.getContentHeight();\r\n\r\n    //Set highlight canvas.\r\n    this._canvas.highlight.setPosition(x, y);\r\n    this._canvas.highlight.setSize(width, height);\r\n    //Set interaction canvas.\r\n    this._canvas.interaction.setPosition(x, y);\r\n    this._canvas.interaction.setSize(width, height);\r\n    //Set legend canvas if available.\r\n    if (this._canvas.legend) {\r\n        if (this._options.legend.location.toLowerCase() === \"top\") {\r\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\r\n            this._canvas.legend.setSize(width, this._options.legend.size);\r\n        }\r\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\r\n            this._canvas.legend.setPosition(0, y, true);\r\n            this._canvas.legend.setSize(200, height);\r\n        }\r\n    }\r\n\r\n    //Update interaction instance.\r\n    this._interaction.graphChangedSize(x, y, width, height);\r\n\r\n    //Updates the spinner div size.\r\n    this._updateSpinnerSize();\r\n\r\n    //Calculate new ticks for the new size.\r\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\r\n        this._axes.x.calculateTicks();\r\n        this._axes.y.calculateTicks();\r\n    }\r\n    this._hasCalculatedGraphSize = true;\r\n};\r\n\r\n/**\r\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderXAxis = function () {\r\n    if (!this._options.axes.x.show) {\r\n        return;\r\n    }\r\n    const ticks = this._axes.x.getTicks();\r\n    let oldX, oldWidth;\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\r\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\r\n        //Draw tick markers.\r\n        if (ticks.markers) {\r\n            y += ticks.markers.offset;\r\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\r\n            y += ticks.markers.length;\r\n        }\r\n        //Draw grid line.\r\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\r\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\r\n        }\r\n        //Draw tick label.\r\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\r\n            y += ticks.labels.offset;\r\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\r\n            oldX = x;\r\n            oldWidth = ticks.labels.width[i];\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderYAxis = function () {\r\n    if (!this._options.axes.y.show) {\r\n        return;\r\n    }\r\n    const ticks = this._axes.y.getTicks();\r\n    let oldY;\r\n    for (let i = 0; i < ticks.length; ++i) {\r\n        let x = this._canvas.graph.getX();\r\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\r\n        //Draw tick markers.\r\n        if (ticks.markers) {\r\n            x -= ticks.markers.offset;\r\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\r\n            x -= ticks.markers.length;\r\n        }\r\n        //Draw grid line.\r\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\r\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\r\n        }\r\n        //Draw tick label.\r\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\r\n            x -= ticks.labels.offset;\r\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\r\n            oldY = y;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the axes(x and y) labels on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderAxesLabels = function () {\r\n    //Draw X label.\r\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\r\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\r\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\r\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\r\n    }\r\n    //Draw Y label.\r\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\r\n        const x = this._options.axes.labels.offset;\r\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\r\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the graph title on the background canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderTitle = function () {\r\n    if (!this._options.title.label.length) {\r\n        return;\r\n    }\r\n    let x;\r\n    if (this._options.title.align.toLowerCase() === \"left\") {\r\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\r\n    }\r\n    else if (this._options.title.align.toLowerCase() === \"center\") {\r\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\r\n    }\r\n    else if (this._options.title.align.toLowerCase() === \"right\") {\r\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\r\n    }\r\n    const y = this._options.title.offsetY;\r\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\r\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\r\n};\r\n\r\n/**\r\n * Renders the highligted area on the highligh canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderHighlight = function () {\r\n    this._canvas.highlight.clear();\r\n    for (let i = 0; i < this._highlights.length; ++i) {\r\n        let x1, y1, x2, y2;\r\n        //Convert values to pixels.\r\n        if (Is.isNull(this._highlights[i].x1)) {\r\n            x1 = 0;\r\n        }\r\n        else {\r\n            x1 = this._axes.x.valueToPixel(this._highlights[i].x1);\r\n        }\r\n        if (Is.isNull(this._highlights[i].y1)) {\r\n            y1 = 0;\r\n        }\r\n        else {\r\n            y1 = this._axes.y.valueToPixel(this._highlights[i].y1);\r\n        }\r\n        if (Is.isNull(this._highlights[i].x2)) {\r\n            x2 = this._canvas.graph.getContentWidth();\r\n        }\r\n        else {\r\n            x2 = this._axes.x.valueToPixel(this._highlights[i].x2);\r\n        }\r\n        if (Is.isNull(this._highlights[i].y2)) {\r\n            y2 = this._canvas.graph.getContentHeight();\r\n        }\r\n        else {\r\n            y2 = this._axes.y.valueToPixel(this._highlights[i].y2);\r\n        }\r\n        this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, this._highlights[i].color);\r\n    }\r\n};\r\n\r\n/**\r\n * Renders the graph curve on the graph canvas.\r\n * @private\r\n */\r\nGraph.prototype._renderGraph = function () {\r\n    if (this._options.debug && this._options.graph.smoothing > 1) {\r\n        console.log(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\r\n    }\r\n\r\n    if (this._options.debug && this._options.graph.simplify) {\r\n        console.log(\"owp.graph DEBUG: Simplify rendering: \" + this._options.graph.simplify);\r\n    }\r\n\r\n    this._canvas.graph.clear();\r\n\r\n    //Get value to pixel functions.\r\n    const valueToPixelX = this._axes.x.getValueToPixelCallback();\r\n    const valueToPixelY = this._axes.y.getValueToPixelCallback();\r\n    //Value bounds        \r\n    const min = this._axes.x.getMin();\r\n    const max = this._axes.x.getMax();\r\n    //Get canvas context directly for increased performance.\r\n    const context = this._canvas.graph.getContext();\r\n    context.lineWidth = this._options.graph.lineWidth;\r\n    context.globalCompositeOperation = this._options.graph.compositeOperation;\r\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\r\n        //Aquire callback for getting X-axis data values.\r\n        const getDataX = this._options.getDataCallback(\"x\", i);\r\n\r\n        //Find start and end indicies.\r\n        const length = this._options.graph.dataY[i].length;\r\n        const bsMin = Static.binarySearch(getDataX, length, min);\r\n        const bsMax = Static.binarySearch(getDataX, length, max);\r\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\r\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\r\n\r\n        //Aquire callback for getting Y-axis data values.\r\n        const getDataY = this._options.getDataCallback(\"y\", i, start);\r\n\r\n        //Start path.\r\n        context.beginPath();\r\n\r\n        //Render simplified data set.\r\n        if (this._options.graph.simplify) {\r\n            const simplify = this._options.graph.simplify;\r\n            let oldX = valueToPixelX(getDataX(start));\r\n            let minVal = getDataY(start);\r\n            let maxVal = minVal;\r\n            let newX, y;\r\n            ++start;\r\n            for (; start <= end; ++start) {\r\n                newX = valueToPixelX(getDataX(start));\r\n                if (Math.abs(oldX - newX) <= simplify) {\r\n                    y = getDataY(start);\r\n                    minVal = Math.min(minVal, y);\r\n                    maxVal = Math.max(maxVal, y);\r\n                    continue;\r\n                }\r\n                context.lineTo(oldX, valueToPixelY(minVal));\r\n                //Only add the second point if it differs from the first.\r\n                if (minVal !== maxVal) {\r\n                    context.lineTo(oldX, valueToPixelY(maxVal));\r\n                }\r\n                oldX = newX;\r\n                minVal = getDataY(start);\r\n                maxVal = minVal;\r\n            }\r\n            //Needed to add the last step.\r\n            context.lineTo(oldX, valueToPixelY(minVal));\r\n            if (minVal !== maxVal) {\r\n                context.lineTo(oldX, valueToPixelY(maxVal));\r\n            }\r\n        }\r\n        //Render full data set.\r\n        else {\r\n            for (; start <= end; ++start) {\r\n                context.lineTo(valueToPixelX(getDataX(start)), valueToPixelY(getDataY(start)));\r\n            }\r\n        }\r\n\r\n        //Fill under graph.\r\n        if (this._options.graph.fill) {\r\n            if (this._options.axes.x.inverted) {\r\n                context.lineTo(0, this._canvas.graph.getContentHeight());\r\n                context.lineTo(this._canvas.graph.getContentWidth(), this._canvas.graph.getContentHeight());\r\n            } else {\r\n                context.lineTo(this._canvas.graph.getContentWidth() * this._canvas.graph.getRatio(), this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\r\n                context.lineTo(0, this._canvas.graph.getContentHeight() * this._canvas.graph.getRatio());\r\n            }\r\n            context.closePath();\r\n            context.fillStyle = this._options.getColor(i + 1);\r\n            context.fill();\r\n        }\r\n        //Stroke line.\r\n        else {\r\n            context.strokeStyle = this._options.getColor(i + 1);\r\n            context.stroke();\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Get offset for the given paramters.\r\n * @private\r\n * @param {array} array - List of string parameters to get offset for.\r\n * @returns {int} - Offset in number of pixels.\r\n */\r\nGraph.prototype._getOffset = function (array) {\r\n    let offset = 0;\r\n    for (let i = 0; i < array.length; ++i) {\r\n        switch (array[i]) {\r\n            case \"top\":\r\n                if (this._options.title.label.length) {\r\n                    offset += this._options.title.size;\r\n                    offset += this._options.title.offsetY;\r\n                    offset += this._options.title.padding;\r\n                }\r\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\r\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\r\n                }\r\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._options.axes.tickLabels.size / 2;\r\n                }\r\n                break;\r\n            case \"bottom\":\r\n                if (this._options.axes.x.show) {\r\n                    if (this._options.axes.x.label.length) {\r\n                        offset += this._options.axes.labels.size;\r\n                        offset += this._options.axes.labels.offset;\r\n                        offset += this._options.axes.labels.padding;\r\n                    }\r\n                    if (this._options.axes.x.height) {\r\n                        offset += this._options.axes.x.height;\r\n                    }\r\n                    else {\r\n                        if (this._options.axes.tickLabels.show) {\r\n                            offset += this._options.axes.tickLabels.size;\r\n                            offset += this._options.axes.tickLabels.offset;\r\n                        }\r\n                        if (this._options.axes.tickMarkers.show) {\r\n                            offset += this._options.axes.tickMarkers.length;\r\n                            offset += this._options.axes.tickMarkers.offset;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._options.axes.tickLabels.size / 2;\r\n                }\r\n                break;\r\n            case \"left\":\r\n                if (this._options.axes.y.show) {\r\n                    if (this._options.axes.y.label.length) {\r\n                        offset += this._options.axes.labels.size;\r\n                        offset += this._options.axes.labels.offset;\r\n                        offset += this._options.axes.labels.padding;\r\n                    }\r\n                    if (this._options.axes.y.width) {\r\n                        offset += this._options.axes.y.width;\r\n                    }\r\n                    else {\r\n                        if (this._options.axes.tickLabels.show) {\r\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\r\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\r\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\r\n                            offset += this._options.axes.tickLabels.offset;\r\n                        }\r\n                        if (this._options.axes.tickMarkers.show) {\r\n                            offset += this._options.axes.tickMarkers.length;\r\n                            offset += this._options.axes.tickMarkers.offset;\r\n                        }\r\n                    }\r\n                }\r\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\r\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\r\n                }\r\n                break;\r\n            case \"right\":\r\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\r\n                    offset += this._canvas.legend.getWidth();\r\n                }\r\n                else {\r\n                    const defaultOffset = 20;\r\n                    let boundOffset = 0;\r\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\r\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\r\n                    }\r\n                    offset += Math.max(defaultOffset, boundOffset);\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    return Math.round(offset);\r\n};\r\n\r\nGraph.createDummyData = Static.createDummyData;\r\nGraph.getDefaultOptions = Options.getDefault;\r\n\r\nexport default Graph;"],"sourceRoot":""}