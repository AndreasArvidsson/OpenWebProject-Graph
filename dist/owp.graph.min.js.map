{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Static.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Callbacks.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","isOfType2","obj","callbacks","isDOM","HTMLElement","isNull","isObject","isArray","isFunction","isBool","isNumber","isInt","isUint","isString","Array","isTypedArray","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isAnyArray","isColor","div","document","createElement","style","borderColor","isSize","width","isAlignment","noCenter","toLowerCase","isFont","isCompositeOperation","isBorderWidth","borderWidth","isOffset","margin","isBorderStyle","borderStyle","getCompareCallback","type","Error","getCompareCallbacks","types","split","length","push","isOfType","isContent","array","isInOptions","options","Static","size","seed","random","Math","sin","floor","data1","data2","mult","PI","cos","dataCallback","min","max","mid","found","context","getContext","pxToNum","str","parseInt","replace","getTextWidth","text","font","measureText","round","decimals","multiplier","pow","log10","x","log","LN10","calculateOffset","offset","top","right","bottom","left","marginTop","marginRight","marginBottom","marginLeft","Options","this","setDefault","set","evalOptions","optionsOk","obj2","name2","path","paths","set2","error","msg","console","evalType","res","evalEnum","values","indexOf","join","evalArrayContains","evalAlign","evalCond","cond","eval","replaceAll","trim","axes","isOk","_isOk","getColor","index","graph","colors","getName","undefined","names","getLegendFont","legend","getDefault","debug","interaction","resize","trackMouse","zoom","smoothing","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","highlight","xMin","xMax","yMin","yMax","dataX","dataY","dashed","lineWidth","markerRadius","simplify","simplifyBy","fill","compositeOperation","tickMarkers","show","tickLabels","labels","inverted","height","numTicks","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","setMembers","oldObj","newObj","warn","_offset","_border","assign","renderMarkers","renderSimplify","getOffset","getBorder","b","arguments","appendChild","e","f","g","h","j","substring","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","container","id","dontScale","_canvas","append","_context","_dontScale","setPosition","setSize","setParent","remove","putImageData","data","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","alignRight","valignBottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","parseFloat","getPropertyValue","match","Axis","graphCanvas","axis","_isX","_axis","_getSize","_options","_getRatio","defaultLegendValueFormatter","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideMin","_min","_overrideMax","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getLabelWidth","_ticks","maxWidth","getTicks","hasZoom","calculateTicks","clearZoom","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","start","diff","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","isNaN","dispatchEvent","Event","addEventListener","which","Callbacks","renderAvg","ctx","valueToPixelX","valueToPixelY","getDataX","getDataY","end","abs","oldX","sum","count","newX","renderMin","minVal","renderMax","maxVal","renderMinMax","valueY","renderFull","renderLine","circleAngle","renderFill","canvas","channelIndex","closePath","renderStroke","pattern","setLineDash","calculateAvgValue","calculateMinValue","calculateMaxValue","calculateMinMaxValue","calculateSmothingValue","getSmoothingWindow","low","high","getDataCallback","dataIndex","threshold","getDataCallbackSmoothing","diffToMin","diffToMax","getRenderCallback","renderCallback","strokeCallback","getStrokeCallback","bsMin","binarySearch","bsMax","getCalculateValueCallback","getCalculateSimplifyCallback","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","_renderLegend","mouseDown","_axes","valueX","calculateValueCallback","pixelY","isFinite","_interactionData","startX","startY","lastHorizontal","lastX","lastY","button","diffX","diffY","newHorizontal","clamp","preventDefault","returnValue","cancelBubble","toElement","tabIndex","maxLength","_container","callbackDone","_renderGraph","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","createDummyData","getOptions","getDefaultOptions","setDefaultOptions","setOptions","_hasCalculatedGraphSize","_interaction","_initLegend","getElementById","legendDiv","settings","isTop","alignLeft","printValue","printX","printY","time","_renderTitle","_renderAxesLabels","_renderSpin","_renderXAxis","_renderYAxis","_renderHighlight","timeEnd","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","offsetTop","_getOffset","offsetBottom","offsetLeft","oldWidth","ceil","oldY","globalCompositeOperation","side","getBoundLabelWidth"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","const Is = {};\n\n/**\n * Check if the given object is a DOM element.\n * @param {object} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isDOM = function (obj) {\n    return obj instanceof HTMLElement;\n};\n\n/**\n * Check of the given object is null or undefined.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNull = function (obj) {\n    return obj === undefined || obj === null;\n};\n\n/**\n * Check of the given object is a object.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isObject = function (obj) {\n    return obj !== null && typeof obj === \"object\" && !Is.isArray(obj);\n};\n\n/**\n * Check of the given object is a function.\n * @private\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFunction = function (obj) {\n    return typeof obj === \"function\";\n};\n\n/**\n * Check of the given object is a bool.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isBool = function (obj) {\n    return typeof obj === \"boolean\";\n};\n\n/**\n * Check of the given object is a number.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNumber = function (obj) {\n    return typeof obj === \"number\";\n};\n\n/**\n * Check of the given object is an integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isInt = function (obj) {\n    return typeof obj === \"number\" && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is an unsigned integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isUint = function (obj) {\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is a string.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isString = function (obj) {\n    return typeof obj === \"string\";\n};\n\n/**\n * Check of the given object is an Array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isArray = function (obj) {\n    return obj instanceof Array;\n};\n\n/**\n * Check of the given object is an typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isTypedArray = function (obj) {\n    return obj instanceof Int8Array\n        || obj instanceof Uint8Array\n        || obj instanceof Uint8ClampedArray\n        || obj instanceof Int16Array\n        || obj instanceof Uint16Array\n        || obj instanceof Int32Array\n        || obj instanceof Uint32Array\n        || obj instanceof Float32Array\n        || obj instanceof Float64Array;\n};\n\n/**\n * Check of the given object is an array or a typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isAnyArray = function (obj) {\n    return Is.isArray(obj) || Is.isTypedArray(obj);\n};\n\n/**\n * Check of the given object is a color.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isColor = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderColor = \"\";\n    div.style.borderColor = obj;\n    return div.style.borderColor !== \"\";\n};\n\n/**\n * Check of the given object is a size.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isSize = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.width = \"\";\n    div.style.width = obj;\n    return div.style.width !== \"\";\n};\n\n/**\n * Check of the given object is an alignment.\n * @public\n * @param {string} obj - Object to evaluate.\n * @param {bool} noCenter - If true the center alignment is not valid.\n * @returns {bool}\n */\nIs.isAlignment = function (obj, noCenter) {\n    obj = obj.toLowerCase();\n    if (noCenter) {\n        return obj === \"left\" || obj === \"right\";\n    }\n    else {\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\n    }\n};\n\n/**\n * Check of the given object is a font.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFont = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style[\"font-family\"] = \"\";\n    div.style[\"font-family\"] = obj;\n    return div.style[\"font-family\"] !== \"\";\n};\n\n/**\n * Check of the given object is an composite operation.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isCompositeOperation = function (obj) {\n    obj = obj.toLowerCase();\n    return obj === \"source-over\"\n        || obj === \"source-in\"\n        || obj === \"source-out\"\n        || obj === \"source-atop\"\n        || obj === \"destination-over\"\n        || obj === \"destination-in\"\n        || obj === \"destination-out\"\n        || obj === \"destination-atop\"\n        || obj === \"lighter\"\n        || obj === \"copy\"\n        || obj === \"xor\"\n        || obj === \"multiply\"\n        || obj === \"screen\"\n        || obj === \"overlay\"\n        || obj === \"darken\"\n        || obj === \"lighten\"\n        || obj === \"color-dodge\"\n        || obj === \"color-burn\"\n        || obj === \"hard-light\"\n        || obj === \"soft-light\"\n        || obj === \"difference\"\n        || obj === \"exclusion\"\n        || obj === \"hue\"\n        || obj === \"saturation\"\n        || obj === \"color\"\n        || obj === \"luminosity\";\n};\n\nIs.isBorderWidth = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderWidth = \"\";\n    div.style.borderWidth = obj;\n    return div.style.borderWidth !== \"\";\n};\n\nIs.isOffset = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.margin = \"\";\n    div.style.margin = obj;\n    return div.style.margin !== \"\";\n};\n\nIs.isBorderStyle = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderStyle = \"\";\n    div.style.borderStyle = obj;\n    return div.style.borderStyle !== \"\";\n};\n\n/**\n * Get a callback to evaluate if the given data is of the specified type.\n * @param {string} type\n * @returns {function]\n * }\n */\nIs.getCompareCallback = function (type) {\n    switch (type) {\n        case \"number\":\n            return Is.isNumber;\n        case \"int\":\n            return Is.isInt;\n        case \"string\":\n            return Is.isString;\n        case \"font\":\n            return Is.isFont;\n        case \"bool\":\n            return Is.isBool;\n        case \"array\":\n            return Is.isArray;\n        case \"typedArray\":\n            return Is.isTypedArray;\n        case \"anyArray\":\n            return Is.isAnyArray;\n        case \"object\":\n            return Is.isObject;\n        case \"function\":\n            return Is.isFunction;\n        case \"color\":\n            return Is.isColor;\n        case \"size\":\n            return Is.isSize;\n        case \"alignment\":\n            return Is.isAlignment;\n        case \"compositeOperation\":\n            return Is.isCompositeOperation;\n        case \"borderStyle\":\n            return Is.isBorderStyle;\n        case \"borderWidth\":\n            return Is.isBorderWidth;\n        case \"dom\":\n            return Is.isDOM;\n        case \"null\":\n            return Is.isNull;\n        case \"offset\":\n            return Is.isOffset;\n        default:\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\n    }\n};\n\n/**\n * Get a list of callbacks to evaluate if the given data is of the specified type.\n * @param {string} type. Separated by |\n * @returns {array<function>]}\n */\nIs.getCompareCallbacks = function (type) {\n    const callbacks = [];\n    const types = type.split(\"|\");\n    if (!types.length) {\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\n    }\n    for (let i = 0; i < types.length; ++i) {\n        callbacks.push(Is.getCompareCallback(types[i]));\n    }\n    return callbacks;\n};\n\n/**\n * True if object is of type\n * @param {string} type. Separated by |\n * @returns {bool}\n */\nIs.isOfType = function (obj, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if the array only contains items if the given type.\n * @public\n * @param {array} array - Array to check.\n * @param {string} type - Type to compare itmes against.\n * @returns {bool} - True if the array only contains items if the given type.\n */\nIs.isContent = function (array, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i = 0; i < array.length; ++i) {\n        if (!isOfType2(array[i], callbacks)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nIs.isInOptions = function (value, options) {\n    for (let i = 0; i < options.length; ++i) {\n        if (options[i] === value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default Is;\n\nfunction isOfType2(obj, callbacks) {\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @returns {array}\n */\nStatic.createDummyData = function (size) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data1 = new Float32Array(size);\n    const data2 = new Float32Array(size);\n    const mult = Math.PI / 100;\n    for (let i = 0; i < size; ++i) {\n        data1[i] = Math.sin(i * mult) * random();\n        data2[i] = Math.cos(i * mult) * random();\n    }\n    return [data1, data2];\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nStatic.calculateOffset = function (offset) {\n    if (typeof offset === \"number\") {\n        return {\n            top: offset,\n            right: offset,\n            bottom: offset,\n            left: offset\n        };\n    }\n    const div = document.createElement(\"div\");\n    div.style.margin = \"\";\n    div.style.margin = offset;\n    return {\n        top: pxToNum(div.style.marginTop),\n        right: pxToNum(div.style.marginRight),\n        bottom: pxToNum(div.style.marginBottom),\n        left: pxToNum(div.style.marginLeft)\n    }\n}\n\nexport default Static;\n\nfunction pxToNum(str) {\n    return parseInt(str.replace(\"px\", \"\"));\n}","import Is from \"./Is\";\nimport Static from \"./Static\";\n\n/** \n * The Options class is the options and associated functions for the Graph class.\n * See setDefault() for a desciption of the possible option parameters.\n */\n\n/**\n * Create new Graph options.\n * @public\n * @constructor\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Options}\n */\nfunction Options(options) {\n    this.setDefault();\n    if (options) {\n        this.set(options);\n    }\n}\n\n/**\n * Check if the options are ok / valid.\n * @public\n * @returns {bool} - True if the options are ok.\n */\nOptions.prototype.isOk = function () {\n    return this._isOk;\n};\n\n/**\n * Get color for a data set.  Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string} - CSS color string.\n */\nOptions.prototype.getColor = function (index) {\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\n};\n\n/**\n * Get name for a data set. Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string}\n */\nOptions.prototype.getName = function (index) {\n    if (this.graph.names[index] !== undefined) {\n        return this.graph.names[index];\n    }\n    else if (index > 0) {\n        return \"DATA\" + (index);\n    }\n    else {\n        return \"X\";\n    }\n};\n\n/**\n * Get the font(family and size) for the legend label.\n * @public\n * @returns {string}\n */\nOptions.prototype.getLegendFont = function () {\n    return this.legend.size + \"px \" + this.legend.font;\n};\n\n/**\n * Get the default options object.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nOptions.getDefault = function () {\n    return {\n        debug: false,\n        offset: \"0 20px 0 0\",\n        interaction: {\n            resize: true,\n            trackMouse: true,\n            zoom: true,\n            smoothing: false\n        },\n        title: {\n            label: \"\",\n            bold: false,\n            size: 20,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 3,\n            font: \"verdana\",\n            color: \"black\",\n            align: \"center\"\n        },\n        legend: {\n            location: \"top\",\n            font: \"Arial\",\n            size: 15,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 2,\n            align: \"right\",\n            newLine: false\n        },\n        highlight: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null,\n            color: \"rgba(0, 0, 255, 0.2)\"\n        },\n        zoom: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null\n        },\n        graph: {\n            dataX: [],\n            dataY: [],\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\n            names: [],\n            dashed: [],\n            lineWidth: 1,\n            markerRadius: 0,\n            smoothing: 0,\n            simplify: 0.1,\n            simplifyBy: \"minMax\",\n            fill: false,\n            compositeOperation: \"source-over\"\n        },\n        axes: {\n            tickMarkers: {\n                show: true,\n                length: 5,\n                width: 1,\n                offset: 0,\n                color: \"#BEBEBE\"\n            },\n            tickLabels: {\n                show: true,\n                color: \"black\",\n                font: \"Arial\",\n                size: 12,\n                width: 40,\n                offset: 3,\n                padding: 2\n            },\n            labels: {\n                color: \"black\",\n                font: \"verdana\",\n                size: 15,\n                offset: 0,\n                padding: 0\n            },\n            x: {\n                show: true,\n                inverted: false,\n                log: false,\n                height: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            },\n            y: {\n                show: true,\n                inverted: false,\n                log: false,\n                width: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            }\n        },\n        border: {\n            style: \"solid\",\n            color: \"black\",\n            width: \"0 0 1px 1px\"\n        },\n        spinner: {//Options regarding the spinner.\n            show: false, //Automatically show spinner when plotting data. Can always be activated manually.\n            lines: 13, //The number of lines to draw.\n            length: 30, //The length of each line.\n            width: 10, //The line thickness.\n            radius: 30, //The radius of the inner circle.\n            corners: 1, //Corner roundness (0..1).\n            rotate: 0, //The rotation offset.\n            direction: 1, //1: clockwise, -1: counterclockwise\n            color: \"black\", //#rgb or #rrggbb or array of colors\n            speed: 1, //Revolutions per second\n            trail: 50, //Afterglow percentage\n            shadow: false, //If true a shadow is rendered.\n            hwaccel: true, //If true hardware acceleration is used.\n            position: 'relative', //Position type.\n            top: \"50%\", //CenterY position relative to parent\n            left: \"50%\"         //CenterX position relative to parent\n        }\n    };\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - The options to set.\n */\nOptions.prototype.set = function (options) {\n    function setMembers(oldObj, newObj, path) {\n        for (let i in newObj) {\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\n                continue;\n            }\n            //Member is a new object. Call function recursivly.\n            if (Is.isObject(newObj[i])) {\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\n            }\n            //Member is null or a base type. Set it.\n            else {\n                oldObj[i] = newObj[i];\n            }\n        }\n    }\n    setMembers(this, options, \"\");\n\n    this._isOk = evalOptions(this);\n    this._offset = Static.calculateOffset(this.offset);\n    this._border = Static.calculateOffset(this.border.width);\n};\n\n/**\n * Sets all options to their default values.\n * @public\n */\nOptions.prototype.setDefault = function () {\n    Object.assign(this, Options.getDefault());\n    this._isOk = true;\n};\n\n/**\n * Returns true if markers are to be rendered.\n * @public\n */\nOptions.prototype.renderMarkers = function() {\n    //Can't combine markers with filled lines.\n    return this.graph.markerRadius && (!this.graph.fill || !this.graph.lineWidth);\n}\n\n/**\n * Returns true if simplify algorithm is to be used.\n * @public\n */\nOptions.prototype.renderSimplify = function() {\n    //Can't combined simplified rendering with markers.\n    return this.graph.simplify && !this.renderMarkers();\n}\n\n/**\n * Returns object with all 4 side offsets\n * @public\n */\nOptions.prototype.getOffset = function() {\n    return this._offset;\n}\n\n/**\n * Returns object with all 4 side borders\n * @public\n */\nOptions.prototype.getBorder = function() {\n    return this._border;\n}\n\n/**\n * Evaluates the options and sets ok status flag.\n * @private\n */\nfunction evalOptions (options) {\n    let optionsOk = true;\n    let obj, obj2, name, name2;\n    function set(path) {\n        name = path;\n        obj = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj = obj[paths[i]];\n        }\n    }\n    function set2(path) {\n        name2 = path;\n        obj2 = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj2 = obj2[paths[i]];\n        }\n    }\n    function error(msg) {\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\n        optionsOk = false;\n    }\n    function evalType(type) {\n        const res = Is.isOfType(obj, type);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of type: \" + type);\n        }\n        return res;\n    }\n    function evalEnum(values) {\n        const res = values.indexOf(obj) > -1;\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of any type: [\" + values.join(\", \") + \"].\");\n        }\n        return res;\n    }\n    function evalArrayContains(type) {\n        const res = Is.isContent(obj, type);\n        if (!res) {\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\n        }\n        return res;\n    }\n    function evalAlign(noCenter) {\n        const res = Is.isAlignment(obj, noCenter);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\n        }\n        return res;\n    }\n    function evalCond(cond) {\n        const res = eval(cond);\n        if (!res) {\n            cond = cond.replaceAll(\"obj2\", name2).trim();\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\n            cond = cond.replaceAll(\"obj\", \"\").trim();\n            if (Is.isArray(obj)) {\n                error(\"Failed condition: \" + cond);\n            }\n            else {\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\n            }\n        }\n        return res;\n    }\n\n    set(\"debug\");\n    evalType(\"bool\");\n\n    set(\"offset\");\n    evalType(\"int|offset\");\n\n    set(\"interaction\");\n    if (evalType(\"object\")) {\n        set(\"interaction.resize\");\n        evalType(\"bool\");\n\n        set(\"interaction.trackMouse\");\n        evalType(\"bool\");\n\n        set(\"interaction.zoom\");\n        evalType(\"bool\");\n\n        set(\"interaction.smoothing\");\n        evalType(\"bool\");\n    }\n\n    set(\"title\");\n    if (evalType(\"object\")) {\n        set(\"title.bold\");\n        evalType(\"bool\");\n\n        set(\"title.label\");\n        evalType(\"string\");\n\n        set(\"title.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"title.offsetX\");\n        evalType(\"int\");\n\n        set(\"title.offsetY\");\n        evalType(\"int\");\n\n        set(\"title.padding\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"title.font\");\n        evalType(\"font\");\n\n        set(\"title.color\");\n        evalType(\"color\");\n\n        set(\"title.align\");\n        evalAlign();\n    }\n\n    set(\"legend\");\n    if (evalType(\"object\")) {\n        set(\"legend.location\");\n        evalType(\"string\");\n\n        set(\"legend.font\");\n        evalType(\"font\");\n\n        set(\"legend.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"legend.offsetX\");\n        evalType(\"int\");\n\n        set(\"legend.offsetY\");\n        evalType(\"int\");\n\n        set(\"legend.padding\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.align\");\n        evalAlign(true);\n\n        set(\"legend.newLine\");\n        evalType(\"bool\");\n    }\n\n    set(\"highlight\");\n    if (evalType(\"object\")) {\n        set(\"highlight.xMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.xMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.color\");\n        evalType(\"color\");\n    }\n\n    set(\"zoom\");\n    if (evalType(\"object\")) {\n        set(\"zoom.xMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.xMax\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMax\");\n        evalType(\"number|null\");\n    }\n\n    set(\"graph\");\n    if (evalType(\"object\")) {\n        set(\"graph.dataX\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n\n            set2(\"graph.dataY\");\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\n                evalCond(\"obj.length <= obj2.length\");\n            }\n        }\n\n        set(\"graph.dataY\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n            set2(\"graph.dataX\");\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\n            if (obj2.length === 0 || obj2.length === 1) {\n                //Check so that all dataY are the same size.\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj[0].length) {\n                        error(\"Not all arrays are of the same size.\");\n                    }\n                }\n                //If dataX.length == 1. Check if same length as dataY.\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\n                    error(\"Size does not match dataX.\");\n                }\n            }\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\n            else if (obj.length === obj2.length) {\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj2[i].length) {\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\n                    }\n                }\n            }\n        }\n\n        set(\"graph.colors\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"color\");\n        }\n\n        set(\"graph.names\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"string\");\n        }\n\n        set(\"graph.dashed\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"bool|array\");\n        }\n\n        set(\"graph.lineWidth\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.markerRadius\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.smoothing\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.simplify\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"graph.simplifyBy\");\n        if (evalType(\"string\")) {\n            evalEnum([\"avg\", \"min\", \"max\", \"minMax\"]);\n        }\n\n        set(\"graph.fill\");\n        evalType(\"bool\");\n\n        set(\"graph.compositeOperation\");\n        evalType(\"compositeOperation\");\n    }\n\n    set(\"axes\");\n    if (evalType(\"object\")) {\n        set(\"axes.tickMarkers\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickMarkers.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickMarkers.length\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickMarkers.color\");\n            evalType(\"color\");\n        }\n\n        set(\"axes.tickLabels\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickLabels.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickLabels.color\");\n            evalType(\"color\");\n\n            set(\"axes.tickLabels.font\");\n            evalType(\"font\");\n\n            set(\"axes.tickLabels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickLabels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        set(\"axes.labels\");\n        if (evalType(\"object\")) {\n            set(\"axes.labels.color\");\n            evalType(\"color\");\n\n            set(\"axes.labels.font\");\n            evalType(\"font\");\n\n            set(\"axes.labels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.labels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.labels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        //axes x and y\n        const axes = [\"axes.x\", \"axes.y\"];\n        for (let i = 0; i < axes.length; ++i) {\n            set(axes[i]);\n            if (evalType(\"object\")) {\n                set(axes[i] + \".show\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".inverted\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".log\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\n                if(evalType(\"int\")) {\n                    evalCond(\"obj >= 0\");\n                }\n\n                set(axes[i] + \".grid\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".grid.width\");\n                    if(evalType(\"int\")) {\n                        evalCond(\"obj >= 0\");\n                    }\n\n                    set(axes[i] + \".grid.color\");\n                    evalType(\"color\");\n                }\n\n                set(axes[i] + \".label\");\n                evalType(\"string\");\n\n                set(axes[i] + \".bounds\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".bounds.min\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.min\");\n                    set2(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\n                        evalCond(\"obj < obj2\");\n                    }\n                }\n\n                set(axes[i] + \".numTicks\");\n                if (evalType(\"int\")) {\n                    evalCond(\"obj >= 0\");\n                }\n\n                set(axes[i] + \".legendValueFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePreFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePostFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerLabelFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".ticker\");\n                evalType(\"function|null\");\n            }\n        }\n    }\n\n    set(\"border\");\n    if (evalType(\"object\")) {\n        set(\"border.style\");\n        evalType(\"borderStyle\");\n\n        set(\"border.color\");\n        evalType(\"color\");\n\n        set(\"border.width\");\n        evalType(\"borderWidth\");\n    }\n\n    set(\"spinner\");\n    if (evalType(\"object\")) {\n        set(\"spinner.show\");\n        evalType(\"bool\");\n\n        set(\"spinner.lines\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.length\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.width\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.radius\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.corners\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"spinner.rotate\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.direction\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj === -1 || obj === 1\");\n        }\n\n        set(\"spinner.color\");\n        evalType(\"color\");\n\n        set(\"spinner.speed\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.trail\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.shadow\");\n        evalType(\"bool\");\n\n        set(\"spinner.hwaccel\");\n        evalType(\"bool\");\n\n        set(\"spinner.position\");\n        if (evalType(\"string\")) {\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\n        }\n\n        set(\"spinner.top\");\n        evalType(\"size\");\n\n        set(\"spinner.left\");\n        evalType(\"size\");\n    }\n\n    return optionsOk;\n}\n\n/**\n @typedef OPTIONS_OBJECT\n @type {object}\n\n @property {bool} debug - If true debug info will be outputted to the console.\n @property {int} offset - Offset in pixels. Between outer edge and inner content.\n\n @property {object} interaction - Options regarding user interaction with the graph.\n @property {bool} resize - If true the graph will be resized automatically.\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\n @property {bool} zoom - If true zoom is enabled.\n @property {bool} smoothing - If true interactive smoothing input is enabled.\n\n @property {object} title - Options regarding the title.\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\n @property {bool} title.bold - If true the label font is bold.\n @property {int} title.size - Font height/size in pixels of the text.\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\n @property {int} title.padding - Padding in pixels. Between title and graph.\n @property {string} title.font - Font family of the text.\n @property {string} title.color - Color of the text.\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\n\n @property {object} legend - Options regarding the legend.\n @property {bool} legend.show - If true the legend is shown.\n @property {string} legend.font - Font family of the text.\n @property {int} legend.size - Font size/height in pixels.\n @property {int} legend.offsetX - Y-axis offset in pixels. Move legend in x-axis.\n @property {int} legend.offsetY - X-axis offset in pixels. Move legend in y-axis.\n @property {int} legend.padding - Padding in pixels. Between legend and graph.\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\n @property {int} legend.newLine -  If true a new line is made between each data set.\n\n @property {object} highlight - Options regarding highlighting.\n @property {bool} highlight.xMin - X-axis low value. \n @property {int} highlight.xMax - X-axis high value.\n @property {string} highlight.yMin - Y-axis low value.\n @property {int} highlight.yMax - Y-axis high value.\n @property {string} highlight.color - Color of the highlight.\n\n @property {object} zoom - Options regarding default zoom.\n @property {bool} zoom.xMIn - X-axis low value. \n @property {int} zoom.xMax - X-axis high value.\n @property {string} zoom.yMin - Y-axis low value.\n @property {int} zoom.yMax - Y-axis high value.\n\n @property {object} graph - Options regarding the graph curve.\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\n @property {array<string>} graph.colors - List of colors for each dataY set.\n @property {array<string>} graph.names - List of names for each dataY set.\n @property {array<string>} graph.dashed - List of dash parameters for each dataY set. true for default or number array for cusatom.\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\n @property {int} graph.markerRadius - Width in pixels of the radius of the marker.\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\n @property {int} graph.simplifyBy - Character of the simplification algorithm. 0 = minMax.\n @property {bool} graph.fill - If true the area under the graph will be filled.\n @property {string} graph.compositeOperation - Context global composit operation.\n\n @property {object} axes - Options regarding the axes.\n\n @property {object} axes.tickMarkers - Options regarding the tick markers.\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\n @property {string} axes.tickMarkers.color - Color of the tick markers.\n\n @property {object} axes.tickLabels - Options regarding the tick labels.\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\n @property {string} axes.tickLabels.color - Color of the text.\n @property {string} axes.tickLabels.font - Font family of the text.\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\n @property {int} axes.tickLabels.offset - Offset in pixels. Between outer edge and tick labels.\n @property {int} axes.tickLabels.padding - Padding in pixels. Between graph and markers.\n\n @property {object} axes.labels - Options regarding the axes labels.\n @property {string} axes.labels.color - Color of the text.\n @property {string} axes.labels.font - Font family of the text.\n @property {int} axes.labels.size - Font size/height in pixels of the text.\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\n\n @property {object} axes.x - Options regarding the X-axis.\n @property {bool} axes.x.show - If true the X-axis is shown.\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\n @property {string} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.x.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.x.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.x.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.x.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.x.grid - Options regarding the X-axis grid.\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.x.grid.color - Color of the grid lines.\n\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} axes.y - Options regarding the Y-axis.\n @property {bool} axes.y.show - If true the X-axis is shown.\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\n @property {string} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.y.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.y.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.y.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.y.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.y.grid.color - Color of the grid lines.\n\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} border - Options regarding the graph border.\n @property {string} border.style - Border style. solid, dotted...\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\n\n\n */\n\n/**\n * Callback function for formatting values.\n * @callback formatterCallback\n * @param {number} value\n * @returns {string}\n */\n\n/**\n * Callback function for creating ticks.\n * @callback tickerCallback\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{value:number}>}\n */\n\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\n * Used to automatically get pixel perfect canvas size \n * and to make it easier to draw simple elements.\n */\n\n/**\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\n * @public\n * @constructor\n * @param {dom} container - Container dom.\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\n * @returns {Canvas}\n */\nfunction Canvas(container, id, dontScale) {\n    this._canvas = document.createElement(\"canvas\");\n    if (id) {\n        this._canvas.id = id;\n    }\n    container.append(this._canvas);\n    this._context = this._canvas.getContext(\"2d\");\n\n    this._dontScale = dontScale;\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.margin = 0;\n    this._canvas.style.padding = 0;\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\n\n    //Set default position.\n    this.setPosition(0, 0);\n    //Fill parent div is default size.\n    this.setSize(\"100%\", \"100%\");\n}\n\n/**\n * Set a new parent for the canvas. Leave empty to only remove current parent.\n * @public\n * @param {dom} container - Container dom.\n */\nCanvas.prototype.setParent = function (container) {\n    this._canvas.remove();\n    if (container) {\n        container.append(this._canvas);\n    }\n};\n\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\n};\n\n/**\n * Get the html5 canvas.\n * @public\n * @returns {canvas}\n */\nCanvas.prototype.getCanvas = function () {\n    return this._canvas;\n};\n\n/**\n * Get the html5 2D context. Used when performance and less function calls are needed.\n * @public\n * @returns {context}\n */\nCanvas.prototype.getContext = function () {\n    return this._context;\n};\n\n/**\n * Get the x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getX = function () {\n    return this._x;\n};\n\n/**\n * Get the y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getY = function () {\n    return this._y;\n};\n\n/**\n * Get the content x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getContentX = function () {\n    return this._contentX;\n};\n\n/**\n * Get the content y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getContentY = function () {\n    return this._contentY;\n};\n\n/**\n * Get the canvas width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getWidth = function () {\n    return this._canvas.offsetWidth;\n};\n\n/**\n * Get the canvas height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getHeight = function () {\n    return this._canvas.offsetHeight;\n};\n\n/**\n * Get the canvas content width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getContentWidth = function () {\n    return this._canvas.clientWidth;\n};\n\n/**\n * Get the canvas content height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getContentHeight = function () {\n    return this._canvas.clientHeight;\n};\n\n/**\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetX = function () {\n    return this._contentOffsetX;\n};\n\n/**\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetY = function () {\n    return this._contentOffsetY;\n};\n\n\n/**\n * Get text with in pixels.\n * @public\n * @param {string} text - Text to measure.\n * @param {fontString} font - Font to use.\n * @returns {int} Width in pixels.\n */\nCanvas.prototype.getTextWidth = function (text, font) {\n    if (font) {\n        this._context.font = font;\n    }\n    return this._context.measureText(text).width;\n};\n\n/**\n * Clear canvas.\n * @public\n */\nCanvas.prototype.clear = function () {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\n    }\n};\n\n/**\n * Clear area.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(x, y, width, height);\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\n    }\n};\n\n/**\n * Set z-index.\n * @public\n * @param {int} zIndex - The new Z-index.\n */\nCanvas.prototype.setZIndex = function (zIndex) {\n    this._canvas.style[\"z-index\"] = zIndex;\n};\n\n/**\n * Set any context member.\n * @public\n * @param {string} member - Member name.\n * @param {type} value - Member value.\n */\nCanvas.prototype.set = function (member, value) {\n    this._context[member] = value;\n};\n\n/**\n * Set canvas border parameters.\n * @param {string} style\n * @param {string} color\n * @param {string} width\n */\nCanvas.prototype.setBorder = function (style, color, width) {\n    this._canvas.style.borderStyle = style;\n    this._canvas.style.borderColor = color;\n    this._canvas.style.borderWidth = width;\n    this._calculateContentPosition();\n};\n\n/**\n * Get any context member.\n * @public\n * @param {string} member - Member name.\n * @returns {type}\n */\nCanvas.prototype.get = function (member) {\n    return this._context[member];\n};\n\n/**\n * Get scale ratio.\n * @public\n * @returns {number}\n */\nCanvas.prototype.getRatio = function () {\n    return this._ratio;\n};\n\n/**\n * Rotate the canvas.\n * @public\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\n */\nCanvas.prototype.rotate = function (rotateDegrees) {\n    this._context.rotate(rotateDegrees * Math.PI / 180);\n};\n\n/**\n * Set position of canvas relative to it's parent.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n */\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\n    this._x = x;\n    this._y = y;\n    if (alignRight) {\n        this._canvas.style.left = \"\";\n        this._canvas.style.right = x + \"px\";\n    }\n    else {\n        this._canvas.style.left = x + \"px\";\n        this._canvas.style.right = \"\";\n    }\n    if (valignBottom) {\n        this._canvas.style.top = \"\";\n        this._canvas.style.bottom = y + \"px\";\n    }\n    else {\n        this._canvas.style.top = y + \"px\";\n        this._canvas.style.bottom = \"\";\n    }\n    this._calculateContentPosition();\n};\n\n/**\n * Set size of canvas. \n * @public\n * @param {int} width - Width in pixels. \n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.setSize = function (width, height) {\n    if (width !== undefined) {\n        if (typeof width === \"number\") {\n            width = width + \"px\";\n        }\n        this._canvas.style.width = width;\n    }\n    if (height !== undefined) {\n        if (typeof height === \"number\") {\n            height = height + \"px\";\n        }\n        this._canvas.style.height = height;\n    }\n    this.resize();\n};\n\n/**\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\n * @public\n */\nCanvas.prototype.resize = function () {\n    //Calculate pixel ratio.\n    const dpr = window.devicePixelRatio || 1;\n    const bsr = this._context.webkitBackingStorePixelRatio ||\n        this._context.mozBackingStorePixelRatio ||\n        this._context.msBackingStorePixelRatio ||\n        this._context.oBackingStorePixelRatio ||\n        this._context.backingStorePixelRatio || 1;\n    this._ratio = dpr / bsr;\n\n    //Update canvas.\n    this._canvas.width = this.getContentWidth() * this._ratio;\n    this._canvas.height = this.getContentHeight() * this._ratio;\n\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\n    if (!this._dontScale) {\n        this._context.scale(this._ratio, this._ratio);\n    }\n};\n\n/**\n * Draw a stroke/line rectangle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    //Line width build in both direction. Compensate coordinates.\n    x += this._context.lineWidth / 2;\n    y += this._context.lineWidth / 2;\n    width -= this._context.lineWidth;\n    height -= this._context.lineWidth;\n    this._context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 1 coordinate.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 2 coordinates.\n * @public\n * @param {int} x1 - First X-axis pixel.\n * @param {int} y1 - First Y-axis pixel.\n * @param {int} x2 - Second X-axis pixel.\n * @param {int} y2 - Second Y-axis pixel.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\n};\n\n/**\n * Draw a stroked circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n * @param {int} width - Width of stroked line.\n */\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (width) {\n        this._context.lineWidth = width;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.stroke();\n};\n\n/**\n * Draw a filled circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n */\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.fill();\n};\n\n/**\n * Draw a line.\n * @public\n * @param {int} x1 - First x-coordinate in pixels.\n * @param {int} y1 - First y-coordinate in pixels.\n * @param {int} x2 - Second x-coordinate in pixels.\n * @param {int} y2 - Second y-coordinate in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    this._context.beginPath();\n    this._context.moveTo(x1, y1);\n    this._context.lineTo(x2, y2);\n    this._context.stroke();\n};\n\n/**\n * Draw filled text.\n * @public\n * @param {string} text - Text to draw.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {string} font - Font to use.\n * @param {string} color - Color to use.\n * @param {string} align - Alignment ot use.\n * @param {string} baseline - Baseline to use.\n * @param {number} rotate - Rotate text number of degrees.\n */\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\n    if (font) {\n        this._context.font = font;\n    }\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    if (align) {\n        this._context.textAlign = align;\n    }\n    if (baseline) {\n        this._context.textBaseline = baseline;\n    }\n    if (rotate) {\n        this._context.save();\n        this._context.translate(x, y);\n        this._context.rotate(rotate * Math.PI / 180);\n        this._context.fillText(text, 0, 0);\n        this._context.restore();\n    }\n    else {\n        this._context.fillText(text, x, y);\n    }\n};\n\n/**\n * Plot graph curve.\n * @public\n * @param {array} array - Input data. [[x, y], [x, y]]\n * @param {string} color - Color of stroked line.\n * @param {int} lineWidth - Width in pixels of stroked line.\n */\nCanvas.prototype.graph = function (array, color, lineWidth) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    this._context.beginPath();\n    this._context.moveTo(array[0][0], array[0][1]);\n    for (let i = 1; i < array.length; ++i) {\n        this._context.lineTo(array[i][0], array[0][1]);\n    }\n    this._context.stroke();\n};\n\n/**\n * Fill entire canvas with the given color.\n * @public\n * @param {string} color - Color to use.\n */\nCanvas.prototype.fill = function (color) {\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\n};\n\nCanvas.prototype.disableMouseInteraction = function () {\n    this._canvas.style[\"pointer-events\"] = \"none\";\n};\n\n/**\n * Calculate content X and Y.\n * @private\n */\nCanvas.prototype._calculateContentPosition = function () {\n    const compStyle = getComputedStyle(this._canvas);\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\n    this._contentX = this._x + this._contentOffsetX;\n    this._contentY = this._y + this._contentOffsetY;\n};\n\nexport default Canvas;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\nif (!Math.log10) {\n    Math.log10 = Static.log10;\n}\n\n/** \n * The Axis class is a single axis to the Graph class.\n */\n\n/**\n * Create new graph axis.\n * @public\n * @constructor\n * @param {Options} options - GraphOptions object.\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\n * @param {string} orientation - X or Y axis.\n * @returns {Axis}\n */\nfunction Axis(options, graphCanvas, axis) {\n    if (axis.toLowerCase() === \"x\") {\n        this._isX = true;\n        this._axis = options.axes.x;\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\n    }\n    else if (axis.toLowerCase() === \"y\") {\n        this._isX = false;\n        this._axis = options.axes.y;\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\n    }\n    else {\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\n        return;\n    }\n    this._options = options;\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\n}\n\n/**\n * Returns true if all bounds are set.\n * @public\n * @returns {bool}\n */\nAxis.prototype.hasBounds = function () {\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\n};\n\n/**\n * True of this axis is logarithmic.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isLog = function () {\n    return this._axis.log;\n};\n\n/**\n * True of this axis is inverted.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isInverted = function () {\n    return this._axis.inverted;\n};\n\n/**\n * Get min bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMin = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMin)) {\n        return this._overrideMin;\n    }\n    return this._min;\n};\n\n/**\n * Get max bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMax = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMax)) {\n        return this._overrideMax;\n    }\n    return this._max;\n};\n\n/**\n * Get the axis label. Uses the options value formatter if set.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabel = function () {\n    return this._axis.label;\n};\n\n/**\n * Get the font(family and size) for the tick labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getTickLabelsFont = function () {\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\n};\n\n/**\n * Get the font(family and size) for the axes labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabelFont = function () {\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\n};\n\n/**\n * Get max width for labels.\n * @public\n * @returns {int}\n */\nAxis.prototype.getLabelWidth = function () {\n    return this._ticks ? this._ticks.labels.maxWidth : 0;\n};\n\n/**\n * Get the ticks array.\n * @public\n * @returns {array}\n */\nAxis.prototype.getTicks = function () {\n    return this._ticks;\n};\n\n/**\n * Return true if this axis has overridden bounds.\n * @public\n */\nAxis.prototype.hasZoom = function () {\n    return !Is.isNull(this._overrideMin) || !Is.isNull(this._overrideMax);\n};\n\n/**\n * Override bounds. Temporary override user given bounds. \n * @public\n */\nAxis.prototype.zoom = function (min, max) {\n    this._overrideMin = min;\n    this._overrideMax = max;\n    if (!Is.isNull(this.getMin()) || !Is.isNull(this.getMax())) {\n        this.calculateTicks();\n    }\n};\n\n/**\n * Remove overridden bounds.\n * @public\n */\nAxis.prototype.clearZoom = function () {\n    this.zoom();\n};\n\n/**\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\n * @public\n */\nAxis.prototype.calculateBounds = function () {\n    let newMin, newMax;\n\n    //Prioritize user given bounds.\n    if (!Is.isNull(this._axis.bounds.min)) {\n        newMin = this._axis.bounds.min;\n    }\n    if (!Is.isNull(this._axis.bounds.max)) {\n        newMax = this._axis.bounds.max;\n    }\n\n    //Both bounds are not set by the user. Calculate missing.\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\n        let calcBounds;\n        if (this._isX) {\n            calcBounds = this._calculateXBounds();\n        }\n        else {\n            calcBounds = this._calculateYBounds();\n        }\n\n        if (calcBounds) {\n            //Use both calculated bounds.\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\n                newMin = calcBounds.min;\n                newMax = calcBounds.max;\n                //Both values are calculated. Move both.\n                if (newMin === newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\n                    --newMin;\n                    ++newMax;\n                }\n            }\n            //Use only calculated min.\n            else if (Is.isNull(newMin)) {\n                newMin = calcBounds.min;\n                //Only move the calculated value.\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\n                    newMin = newMax - 1;\n                }\n            }\n            //use only calculated max.\n            else if (Is.isNull(newMax)) {\n                newMax = calcBounds.max;\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\n                    newMax = newMin + 1;\n                }\n            }\n        }\n    }\n\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\n        if (this._axis.log && newMin <= 0) {\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\n            newMin = newMax = undefined;\n        }\n    }\n    this._min = newMin;\n    this._max = newMax;\n};\n\n/**\n * Calculate graph axes ticks.\n * @public\n * @param {number} orientation - Optional size instead if using canvas size.\n */\nAxis.prototype.calculateTicks = function (size) {\n    if (!size) {\n        size = this._getSize();\n    }\n\n    let ticks;\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\n    //Create ticks with user given options ticker.\n    if (this._axis.ticker) {\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), size, labelSize);\n    }\n    //Create ticks with the default ticker.\n    else {\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), size, labelSize);\n    }\n\n    if (!ticks.length) {\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\n    }\n\n    //Update ticks with pixel coordinates.\n    for (let i = 0; i < ticks.length; ++i) {\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value, size);\n    }\n    //Show tick markers.\n    if (this._options.axes.tickMarkers.show) {\n        ticks.markers = {\n            offset: this._options.axes.tickMarkers.offset,\n            length: this._options.axes.tickMarkers.length,\n            width: this._options.axes.tickMarkers.width,\n            color: this._options.axes.tickMarkers.color\n        };\n    }\n    //Show tick labels.\n    if (this._options.axes.tickLabels.show) {\n        ticks.labels = {\n            offset: this._options.axes.tickLabels.offset,\n            padding: this._options.axes.tickLabels.padding,\n            size: this._options.axes.tickLabels.size,\n            color: this._options.axes.tickLabels.color,\n            font: this.getTickLabelsFont(),\n            width: [],\n            maxWidth: 0\n        };\n        for (let i = 0; i < ticks.length; ++i) {\n            const width = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\n            ticks.labels.width[i] = width;\n            ticks.labels.maxWidth = Math.max(ticks.labels.maxWidth, width);\n        }\n    }\n    //Show grid.\n    if (this._axis.grid.width) {\n        ticks.grid = {\n            width: this._axis.grid.width,\n            color: this._axis.grid.color\n        };\n    }\n    this._ticks = ticks;\n};\n\n/**\n * Get value from given pixel coordinate.\n * @public\n * @returns {number}\n */\nAxis.prototype.pixelToValue = function (pixel) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\n        }\n        //Logarithmic normal orientation.\n        else {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\n        }\n        //Linear normal orientation.\n        else {\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\n        }\n    }\n};\n\n/**\n * Get pixel coordinate from given value.\n * @public\n * @param {number} orientation - Optional size instead if using canvas size.\n * @returns {number}\n */\nAxis.prototype.valueToPixel = function (value, size) {\n    if (!size) {\n        size = this._getSize();\n    }\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * size;\n        }\n        //Logarithmic normal orientation.\n        else {\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * size;\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * size;\n        }\n        //Linear normal orientation.\n        else {\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * size;\n        }\n    }\n};\n\n/**\n * Format the given value. Uses value formatter in options if available.\n * @public\n * @param {number} value\n * @returns {string}\n */\nAxis.prototype.formatLegendValue = function (value) {\n    //Use user given formatter.\n    if (this._axis.legendValueFormatter) {\n        return this._axis.legendValueFormatter(value, defaultLegendValueFormatter);\n    }\n    //Use default value formatter.\n    else {\n        return defaultLegendValueFormatter(value);\n    }\n};\n\n/**\n * Callback function for getting pixel coordinate from a given value.\n * Much faster than asking this class valueToPixel function for each value.\n * Needs to be required if window changes size or new bounds are set.\n * Safest to aquire for each render pass.\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\n * @callback Axis~valueToPixelCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback to calculate the pixel coordinate for a given value.\n * Used by the graph render function to improve performance.\n * @public\n * @returns {Axis~valueToPixelCallback}\n */\nAxis.prototype.getValueToPixelCallback = function () {\n    let num, denom, numVar, numOp, logFunc;\n    const size = this._getSize() * this._getRatio();\n\n    //Inverted X or normal Y.\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n        numVar = this.getMax();\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\n    }\n    //Normal X or inverted Y.\n    else {\n        numVar = this.getMin();\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\n    }\n\n    //Axis is logarithmic.\n    if (this._axis.log) {\n        numOp = \"/\";\n        logFunc = \"Math.log10\";\n    }\n    //Axis is linear.\n    else {\n        numOp = \"-\";\n        logFunc = \"\";\n    }\n\n    //Only do the numerator operation on the numerator if the variable is not zero.\n    if (numVar) {\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\n    }\n    else {\n        num = logFunc + \"(value)\";\n    }\n\n    //Only do the fraction if the denominator is not 1.\n    if (denom !== 1) {\n        denom = \"/ \" + denom;\n    }\n    else {\n        denom = \"\";\n    }\n\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\n};\n\n/**\n * Calculate X-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateXBounds = function () {\n    //Calculate missing X-axis bounds from dataX values.\n    if (this._options.graph.dataX.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\n        }\n        let min = 4294967296;\n        let max = -4294967296;\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\n            const data = this._options.graph.dataX[i];\n            min = Math.min(min, data[0], data[data.length - 1]);\n            max = Math.max(max, data[0], data[data.length - 1]);\n        }\n        return { min: min, max: max };\n    }\n    //Calculate X-axis bounds from dataY length.\n    else if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\n        }\n        let max = 0;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            max = Math.max(max, this._options.graph.dataY[i].length);\n        }\n        return { min: 1, max };\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\n        return;\n    }\n};\n\n/**\n * Calculate Y-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateYBounds = function () {\n    //Calculate Y-axis bounds from dataY values.\n    if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\n        }\n        let min = null;\n        let max = null;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            const data = this._options.graph.dataY[i];\n            if (data.length && min === null) {\n                min = 4294967296;\n                max = -4294967296;\n            }\n            for (let j = 0; j < data.length; ++j) {\n                min = Math.min(min, data[j]);\n                max = Math.max(max, data[j]);\n            }\n        }\n        return min !== null\n            ? { min, max }\n            : null;\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\n        return;\n    }\n};\n\n/**\n * Default get ticks funciton. Used when no ticker is set in options.\n * @private\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{number, string}>}\n */\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\n    //Pre-format ticker values.\n    if (this._axis.tickerValuePreFormatter) {\n        minValue = this._axis.tickerValuePreFormatter(minValue);\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\n    }\n\n    let ticks;\n\n    //If the range is to small even a log axis will get linear values.\n    if (isLog && maxValue - minValue >= 4 * minValue) {\n        ticks = getDefaultLogTicks(minValue, maxValue);\n    }\n    else {\n        //Max number of ticks.\n        const numTicks = this._axis.numTicks || (graphSize / (labelSize * 1.5));\n        ticks = getDefaultLinTicks(minValue, maxValue, numTicks);\n    }\n\n    //Post-format ticker values.\n    if (this._axis.tickerValuePostFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\n        }\n    }\n\n    //Add user formatted labels.\n    if (this._axis.tickerLabelFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value, defaultTickerLabelFormatter);\n        }\n    }\n    //Add default formatted labels.\n    else {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\n        }\n    }\n\n    return ticks;\n};\n\nfunction defaultLegendValueFormatter(value) {\n    return Static.round(value, 5);\n}\n\nfunction defaultTickerLabelFormatter(value) {\n    if (value < 0) {\n        return '-' + defaultTickerLabelFormatter(-value);\n    }\n    let ranges = [];\n    if (value >= 1e3) {\n        ranges = [\n            { divider: 1e24, suffix: 'Y' },\n            { divider: 1e21, suffix: 'Z' },\n            { divider: 1e18, suffix: 'E' },\n            { divider: 1e15, suffix: 'P' },\n            { divider: 1e12, suffix: 'T' },\n            { divider: 1e9, suffix: 'G' },\n            { divider: 1e6, suffix: 'M' },\n            { divider: 1e3, suffix: 'k' }\n        ];\n    }\n    else if (value < 1e-2) {\n        ranges = [\n            { divider: 1e-3, suffix: 'm' },\n            { divider: 1e-6, suffix: 'µ' },\n            { divider: 1e-9, suffix: 'n' },\n            { divider: 1e-12, suffix: 'p' },\n            { divider: 1e-15, suffix: 'f' },\n            { divider: 1e-18, suffix: 'a' },\n            { divider: 1e-21, suffix: 'z' },\n            { divider: 1e-24, suffix: 'y' }\n        ];\n    }\n    for (let i = 0; i < ranges.length; i++) {\n        if (value >= ranges[i].divider) {\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\n        }\n    }\n    return Static.round(value, 3).toString();\n}\n\n//Get linear ticks.\nfunction getDefaultLinTicks(minValue, maxValue, numTicks) {\n    //Value range\n    const range = maxValue - minValue;\n    //Get ticker value step.\n    const step = getStepValue(false, range / numTicks);\n\n    //Calculate start pos.\n    let start = minValue;\n    //Make sure start is on a step position.\n    const diff = modf(start, step);\n    if (diff > 0) {\n        start += step - diff;\n    }\n    if (diff < 0) {\n        start -= diff;\n    }\n\n    //Start and end value is the same. Just return the one value.\n    if (secureFloat(start) === secureFloat(maxValue)) {\n        return [{ value: secureFloat(start) }];\n    }\n\n    const ticks = [];\n    for (; start <= maxValue; start += step) {\n        const value = secureFloat(start);\n        ticks.push({ value });\n        //Reached infinite loop.\n        if (start === value + step) {\n            break;\n        }\n        start = value;\n    }\n    return ticks;\n}\n\n//Get logarithmic ticks.\nfunction getDefaultLogTicks(minValue, maxValue) {\n    const ticks = [];\n    let step = getStepValue(true, minValue);\n    //Make sure we always start at or before min value to get all the low end ticks.\n    if (step > minValue) {\n        step /= 10;\n    }\n    for (; ;) {\n        for (let i = 1; i < 10; ++i) {\n            const value = i * step;\n            if (value > maxValue) {\n                return ticks;\n            }\n            if (value >= minValue) {\n                ticks.push({ value: secureFloat(value) });\n            }\n        }\n        step *= 10;\n    }\n}\n\n//For a given value calculate the best step value.\nfunction getStepValue(isLog, value) {\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\n    const exp = Math.pow(10, Math.floor(log10(value)));\n    for (let i = 0; i < mult.length; ++i) {\n        const newValue = mult[i] * exp;\n        if (newValue >= value) {\n            return newValue;\n        }\n    }\n}\n\nexport default Axis;\n\n/**\n * Secure float precision.\n * @public\n * @param {number} val\n * @returns {number}\n */\nfunction secureFloat(val) {\n    return parseFloat(val.toPrecision(15));\n}\n\n/**\n * Modulus for float.\n * @public\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction modf(a, b) {\n    return a - Math.round(a / b) * b;\n}\n\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\n\nconst Callbacks = {};\n\nCallbacks.getRenderCallback = function (options, canvas, axes) {\n    //Get value to pixel functions.\n    const valueToPixelX = axes.x.getValueToPixelCallback();\n    const valueToPixelY = axes.y.getValueToPixelCallback();\n    //Value bounds.    \n    const min = axes.x.getMin();\n    const max = axes.x.getMax();\n    //Context\n    const ctx = canvas.getContext();\n    //Callbacks\n    const renderCallback = getRenderCallback(options);\n    const strokeCallback = getStrokeCallback(options, canvas);\n    return channelIndex => {\n        //Aquire callback for getting X-axis data values.\n        const getDataX = getDataCallback(options, \"x\", channelIndex);\n        //Find start and end indicies.\n        const length = options.graph.dataY[channelIndex].length;\n        const bsMin = Static.binarySearch(getDataX, length, min);\n        const bsMax = Static.binarySearch(getDataX, length, max);\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\n        //Aquire callback for getting Y-axis data values.\n        const getDataY = getDataCallback(options, \"y\", channelIndex, start);\n        //Start path.    \n        ctx.beginPath();\n        //Render points/lines.\n        renderCallback(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end);\n        //Stroke line.\n        strokeCallback(ctx, channelIndex);\n    }\n};\n\nCallbacks.getCalculateValueCallback = function (options, axes, dataY, getDataX, channelIndex, start) {\n    const useSimplify = options.renderSimplify() && (options.graph.simplify > 0.1 || options.graph.simplifyBy !== \"minMax\");\n    if (useSimplify) {\n        const valueToPixelX = axes.x.getValueToPixelCallback();\n        const getDataY = getDataCallback(options, \"y\", channelIndex, start);\n        return getCalculateSimplifyCallback(options.graph.simplifyBy)\n            .bind(null, dataY.length, getDataX, getDataY, valueToPixelX, options.graph.simplify);\n    }\n    else if (options.graph.smoothing) {\n        return calculateSmothingValue.bind(null, options.graph.smoothing, dataY);\n    }\n    return index => dataY[index];\n}\n\n\n/* *************** RENDER CALLBACKS *************** */\n\nfunction getRenderCallback(options) {\n    if (options.renderSimplify()) {\n        const simplify = options.graph.simplify;\n        switch (options.graph.simplifyBy) {\n            case \"avg\":\n                return renderAvg.bind(null, simplify);\n            case \"min\":\n                return renderMin.bind(null, simplify);\n            case \"max\":\n                return renderMax.bind(null, simplify);\n            case \"minMax\":\n                return renderMinMax.bind(null, simplify);\n        }\n    }\n    return renderFull.bind(\n        null,\n        !!options.graph.lineWidth,\n        options.renderMarkers(),\n        options.graph.markerRadius\n    );\n}\n\nfunction renderAvg(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    let oldX = valueToPixelX(getDataX(start));\n    let sum = getDataY(start);\n    let count = 1;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(start);\n            ++count;\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(sum / count));\n            oldX = newX;\n            sum = getDataY(start);\n            count = 1;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(sum / count));\n}\n\nfunction renderMin(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const min = Math.min;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            oldX = newX;\n            minVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n}\n\nfunction renderMax(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let maxVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(maxVal));\n            oldX = newX;\n            maxVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(maxVal));\n}\n\nfunction renderMinMax(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    let maxVal = minVal;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            const valueY = getDataY(start);\n            minVal = min(minVal, valueY);\n            maxVal = max(maxVal, valueY);\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            //Only add the second point if it differs from the first.\n            if (minVal !== maxVal) {\n                ctx.lineTo(oldX, valueToPixelY(maxVal));\n            }\n            oldX = newX;\n            minVal = getDataY(start);\n            maxVal = minVal;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n    if (minVal !== maxVal) {\n        ctx.lineTo(oldX, valueToPixelY(maxVal));\n    }\n}\n\nfunction renderFull(renderLine, renderMarkers, markerRadius, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const circleAngle = 2 * Math.PI;\n    //Render line and markers\n    if (renderLine && renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.lineTo(x, y);\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n            ctx.moveTo(x, y);\n        }\n    }\n    //Render only line\n    else if (renderLine) {\n        for (; start <= end; ++start) {\n            ctx.lineTo(\n                valueToPixelX(getDataX(start)),\n                valueToPixelY(getDataY(start))\n            );\n        }\n    }\n    //Render only markers\n    else if (renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n        }\n    }\n}\n\n\n/* *************** STROKES CALLBACK *************** */\n\nfunction getStrokeCallback(options, canvas) {\n    //Fill graph\n    if (options.graph.fill) {\n        return renderFill.bind(null, options, canvas);\n    }\n    //Stroke line.\n    return renderStroke.bind(null, options);\n}\n\nfunction renderFill(options, canvas, ctx, channelIndex) {\n    //Render line\n    if (options.graph.lineWidth) {\n        if (options.axes.x.inverted) {\n            ctx.lineTo(0, canvas.getContentHeight());\n            ctx.lineTo(canvas.getContentWidth(), canvas.getContentHeight());\n        }\n        else {\n            ctx.lineTo(canvas.getContentWidth() * canvas.getRatio(), canvas.getContentHeight() * canvas.getRatio());\n            ctx.lineTo(0, canvas.getContentHeight() * canvas.getRatio());\n        }\n        ctx.closePath();\n    }\n    ctx.fillStyle = options.getColor(channelIndex + 1);\n    ctx.fill();\n}\n\nfunction renderStroke(options, ctx, channelIndex) {\n    //Set dashed options\n    if (options.graph.dashed[channelIndex]) {\n        let pattern = options.graph.dashed[channelIndex];\n        if (pattern === true) {\n            pattern = [5, 8];\n        }\n        ctx.setLineDash(pattern);\n    }\n    else {\n        ctx.setLineDash([]);\n    }\n\n    ctx.strokeStyle = options.getColor(channelIndex + 1);\n    ctx.stroke();\n}\n\n\n/* *************** CALCULATE VALUES CALLBACKS *************** */\n\nfunction getCalculateSimplifyCallback(simplifyBy) {\n    switch (simplifyBy) {\n        case \"avg\":\n            return calculateAvgValue;\n        case \"min\":\n            return calculateMinValue;\n        case \"max\":\n            return calculateMaxValue;\n        case \"minMax\":\n            return calculateMinMaxValue;\n    }\n}\n\nfunction calculateAvgValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const oldX = valueToPixelX(getDataX(index));\n    let sum = getDataY(index);\n    let count = 1;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    return sum / count;\n}\n\nfunction calculateMinValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return minVal;\n}\n\nfunction calculateMaxValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let maxVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return maxVal;\n}\n\nfunction calculateMinMaxValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    let maxVal = minVal;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    return abs(minVal) > maxVal ? minVal : maxVal;\n}\n\nfunction calculateSmothingValue(smoothing, dataY, index) {\n    const window = getSmoothingWindow(index, smoothing, dataY.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += dataY[window.low++];\n    }\n    return sum / window.length;\n}\n\n/* *************** GET DATA CALLBACK *************** */\n\nfunction getDataCallback(options, axis, dataIndex, start) {\n    let data;\n    //X-axis.\n    if (axis.toLowerCase() === \"x\") {\n        //Has no dataX. Return index + 1.\n        if (options.graph.dataX.length === 0) {\n            return index => index + 1;\n        }\n        //Have one dataX for all dataY. \n        if (options.graph.dataX.length === 1) {\n            data = options.graph.dataX[0];\n        }\n        //Have one dataX for each dataY. \n        else {\n            data = options.graph.dataX[dataIndex];\n        }\n    }\n    //Y-axis.\n    else if (axis.toLowerCase() === \"y\") {\n        data = options.graph.dataY[dataIndex];\n        //Use smoothing.\n        if (options.graph.smoothing) {\n            return getDataCallbackSmoothing(options, start, data);\n        }\n    }\n    else {\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\n    }\n    //Default\n    return function (index) {\n        return data[index];\n    };\n}\nCallbacks.getDataCallback = getDataCallback;\n\nfunction getDataCallbackSmoothing(options, start, data) {\n    const centralIndex = Math.max(0, start - 1);\n    const window = getSmoothingWindow(centralIndex, options.graph.smoothing, data.length);\n    let low = window.low;\n    let high = window.high;\n    let sum = 0;\n    for (let i = low; i <= high; ++i) {\n        sum += data[i];\n    }\n    const threshold = 2 * options.graph.smoothing;\n    return index => {\n        //Decrease window size.\n        if (high === data.length - 1) {\n            low = index + index - high;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Increase window size.\n        else if (high < threshold) {\n            high = index + index - low;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Move window.\n        else {\n            sum -= data[low];\n            ++low;\n            ++high;\n            sum += data[high];\n        }\n        //Calculate average value.\n        return sum / (high - low + 1);\n    };\n}\n\n\n/* *************** MISC *************** */\n\nfunction getSmoothingWindow(index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return {\n        low: index - diff,\n        high: index + diff,\n        length: 2 * diff + 1\n    };\n}\n\nexport default Callbacks;","import Static from \"./Static\";\nimport Input from \"./Input\";\nimport Callbacks from \"./Callbacks\";\n\n/** \n * Interaction is a class that handles the user interaction for the Graph class.\n */\n\n/**\n * Create a new Interaction.\n * @public\n * @constructor\n * @param {Graph} graph - Graph instance this interaction belongs to.\n * @returns {Interaction}\n */\nfunction Interaction(graph) {\n    this._graph = graph;\n}\n\n/**\n * Update(add/remove) interaction events.\n * @public\n */\nInteraction.prototype.updateOptions = function () {\n    //Resizing.\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\n        this._resizeCallback = this._addResizeEvent();\n    }\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\n        window.removeEventListener(\"resize\", this._resizeCallback);\n        this._resizeCallback = undefined;\n    }\n\n    //Mouse tracking.\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\n    }\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\n        const canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\n        this._mouseTrackingCallbacks = undefined;\n    }\n\n    //Zooming.\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\n        this._zoomCallbacks = this._addZoomEvents();\n    }\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\n        let canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\n        canvas = this._graph._canvas.background.getCanvas();\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\n        this._zoomCallbacks = undefined;\n    }\n\n    //Smooth option.\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\n        this._smoothingCallback = this._addSmoothingEvent();\n    }\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\n        this._smoothingCallback = undefined;\n        this._smoothingInput.remove();\n        this._smoothingInput = undefined;\n    }\n\n    //Every time options are updated. Update smoothing value if available.\n    if (this._smoothingInput) {\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\n    }\n\n    this._createInteractionData();\n};\n\n/**\n * Clear interaction data.\n * @public\n */\nInteraction.prototype.clear = function () {\n    this._graph._canvas.interaction.clear();\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"none\";\n    }\n};\n\n/**\n * Render interaction data.\n * @public\n */\nInteraction.prototype.render = function () {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Inform the activity class that the graph has changed size and/or position.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\n        this._smoothingInput.style.left = x + \"px\";\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Add a resize event.\n * @private\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addResizeEvent = function () {\n    const graph = this._graph;\n    const self = this;\n    let timeOutResize;\n    //Re-plots the graph on resize end.\n    function resizeEnd() {\n        graph._canvas.background.resize();\n        graph._calculateGraphSize();\n        graph._plot();\n        timeOutResize = undefined;\n        self._resizing = false;\n    }\n    //Clear graph, hightlight and spinner features on resize start.\n    function resizeStart() {\n        self._resizing = true;\n        graph._canvas.graph.clear();\n        graph._canvas.highlight.clear();\n        graph._canvas.interaction.clear();\n        graph._renderLegend();\n    }\n    let lastWidth = this._graph._canvas.background.getWidth();\n    let lastHeight = this._graph._canvas.background.getHeight();\n    let lastPixelRatio = window.devicePixelRatio;\n    function callback() {\n        //Make sure that the size actually have changed.\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\n            lastWidth = graph._canvas.background.getWidth();\n            lastHeight = graph._canvas.background.getHeight();\n            lastPixelRatio = window.devicePixelRatio;\n            //First time the function is called for this resize event.\n            if (!timeOutResize) {\n                resizeStart();\n            }\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\n            clearTimeout(timeOutResize);\n            timeOutResize = setTimeout(resizeEnd, 500);\n        }\n    }\n\n    window.addEventListener(\"resize\", callback);\n    return callback;\n};\n\nInteraction.prototype._addMouseTrackingEvents = function () {\n    const self = this;\n    const graph = this._graph;\n    function mousemove(e) {\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\n            return;\n        }\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\n        const values = [valueX];\n        graph._canvas.interaction.clear();\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\n            const dataY = graph._options.graph.dataY[i];\n            //Cant track unexisting values.\n            if (!dataY.length) {\n                continue;\n            }\n            const getDataX = Callbacks.getDataCallback(graph._options, \"x\", i);\n            const res = Static.binarySearch(getDataX, dataY.length, valueX);\n            const calculateValueCallback = Callbacks.getCalculateValueCallback(\n                graph._options, graph._axes, dataY, getDataX, i, res.min\n            );\n            let valueY, pixelY;\n            //Found exaxt X-value.\n            if (res.found !== undefined) {\n                valueY = calculateValueCallback(res.found);\n                pixelY = graph._axes.y.valueToPixel(valueY);\n            }\n            //Binary search returned min and max at same value without a found.\n            //There is no matching value. Just abort.\n            else if (res.min === res.max) {\n                continue;\n            }\n            //Calculate Y-value from min max coordinates.\n            else {\n                const x1 = graph._axes.x.valueToPixel(getDataX(res.min));\n                const x2 = graph._axes.x.valueToPixel(getDataX(res.max));\n                const y1 = graph._axes.y.valueToPixel(calculateValueCallback(res.min));\n                const y2 = graph._axes.y.valueToPixel(calculateValueCallback(res.max));\n                const k = (y2 - y1) / (x2 - x1);\n                const x = e.offsetX - x1;\n                const m = y1;\n                pixelY = k * x + m;\n                valueY = graph._axes.y.pixelToValue(pixelY);\n            }\n            //Store values to render on legend.\n            values[i + 1] = valueY;\n            //If value is missing don't plot it.\n            if (isFinite(pixelY)) {\n                self._interactionData[i].moveTo(e.offsetX, pixelY);\n            }\n        }\n        graph._renderLegend(values);\n    }\n    function mouseout() {\n        if (!self.mouseDown) {\n            graph._canvas.interaction.clear();\n            graph._renderLegend();\n        }\n    }\n    const canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseout\", mouseout);\n    return { mousemove, mouseout };\n};\n\n/**\n * Add zoom events.\n * @private\n * @returns {object} - object containing callbacks.\n */\nInteraction.prototype._addZoomEvents = function () {\n    const graph = this._graph;\n    const self = this;\n    this.mouseDown = false;\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\n    let startX, startY;\n    //true = horizontal. false = vertical.\n    let lastHorizontal;\n    const color = \"rgba(130, 130, 130, 0.2)\";\n    let lastX, lastY;\n\n    function mousedown(e) {\n        if (e.button === 0 && graph._axes.x.hasBounds() && graph._axes.y.hasBounds()) {\n            lastX = startX = e.offsetX;\n            lastY = startY = e.offsetY;\n            self.mouseDown = true;\n            lastHorizontal = undefined;\n            graph._renderLegend();\n        }\n    }\n    function mousemove(e) {\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\n            lastX = e.offsetX;\n            lastY = e.offsetY;\n            const diffX = Math.abs(startX - e.offsetX);\n            const diffY = Math.abs(startY - e.offsetY);\n            const newHorizontal = diffX > diffY;\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\n                lastHorizontal = newHorizontal;\n            }\n            graph._canvas.interaction.clear();\n            //Mark horizontally.\n            if (lastHorizontal) {\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\n            }\n            //Mark vertically.\n            else {\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\n            }\n        }\n    }\n    function mouseup(e) {\n        if (e.button === 0 && self.mouseDown) {\n            self.mouseDown = false;\n            if (startX !== e.offsetX || startY !== e.offsetY) {\n                graph._canvas.interaction.clear();\n                //X-axis.\n                if (lastHorizontal) {\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\n                    if (startX === x) {\n                        return;\n                    }\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\n                    graph._axes.x.zoom(min, max);\n                }\n                //Y-axis.\n                else {\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\n                    if (startY === y) {\n                        return;\n                    }\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\n                    graph._axes.y.zoom(min, max);\n                }\n                graph._plot();\n            }\n        }\n    }\n    function dblclick(e) {\n        //Prevents double click from selecting the div.\n        preventDefault(e);\n        if (graph._axes.x.hasZoom() || graph._axes.y.hasZoom()) {\n            graph._axes.x.clearZoom();\n            graph._axes.y.clearZoom();\n            graph._plot();\n        }\n    }\n    function mouseout(e) {\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\n            return;\n        }\n        graph._canvas.interaction.clear();\n        self.mouseDown = false;\n    }\n\n    let canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousedown\", mousedown);\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"dblclick\", dblclick);\n\n    canvas = this._graph._canvas.background.getCanvas();\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"mouseleave\", mouseout);\n\n    return { mousedown, mousemove, mouseup, dblclick, mouseout };\n};\n\n/**\n * Add smoothing input event.\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addSmoothingEvent = function () {\n    this._smoothingInput = Input({\n        type: \"number\",\n        tabIndex: -1,\n        maxLength: 6,\n        value: 0,\n        min: 0\n    });\n    this._smoothingInput.style[\"z-index\"] = 5;\n    this._smoothingInput.style.position = \"absolute\";\n    this._smoothingInput.style.width = \"50px\";\n    this._smoothingInput.style.height = \"21px\";\n    this._smoothingInput.style[\"background-color\"] = \"white\";\n    this._smoothingInput.style[\"border-radius\"] = 0;\n    this._smoothingInput.style.border = \"1px solid #ccc\";\n    this._smoothingInput.style.color = \"#555\";\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\n    this._smoothingInput.style.display = \"none\";\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\n    this._graph._container.append(this._smoothingInput);\n    const self = this;\n    function callbackDone() {\n        let value = parseInt(self._smoothingInput.value);\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\n        let length = 4294967296;\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\n        }\n        if (2 * value + 1 > length) {\n            value = Math.floor((length - 1) / 2);\n        }\n        self._smoothingInput.value = value;\n        self._graph._options.graph.smoothing = value;\n        self._graph._renderGraph();\n    }\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\n    return callbackDone;\n};\n\n/**\n * Create interaction data.\n * @private\n */\nInteraction.prototype._createInteractionData = function () {\n    const radius = 3;\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    this._interactionData = [];\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\n        //Clear area\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\n\n        //Draw solid circle\n        ctx.beginPath();\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\n        ctx.fill();\n\n        //If fill; draw black border to increase visibility.\n        if (this._graph._options.graph.fill) {\n            ctx.beginPath();\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n            ctx.strokeStyle = \"#000000\";\n            ctx.stroke();\n        }\n\n        //Get image data from tmp context.\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\n        //Add member data.\n        const canvas = this._graph._canvas.interaction;\n        imageData.moveTo = function (x, y) {\n            canvas.putImageData(this, x, y, -radius, -radius);\n        };\n        this._interactionData[i] = imageData;\n    }\n};\n\nexport default Interaction;\n\n/**\n * Clamp the given value to the given range.\n * @param {type} min - Min value.\n * @param {type} number - Value to clamp.\n * @param {type} max - Max value.\n * @returns {Number} - Clamped value.\n */\nfunction clamp(min, number, max) {\n    if (number < min) {\n        return min;\n    }\n    else if (number > max) {\n        return max;\n    }\n    else {\n        return number;\n    }\n}\n\nfunction preventDefault(e) {\n    //Firefox, Chrome, etc.\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n    //IE\n    else {\n        e.returnValue = false;\n        e.cancelBubble = true;\n    }\n}","/*\n* @author Andreas Arvidsson\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\n */\n\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\n}\n\nimport Spinner from \"./lib/spin.min\";\nimport Canvas from \"./Canvas\";\nimport Axis from \"./Axis\";\nimport Interaction from \"./Interaction\";\nimport Static from \"./Static\";\nimport Options from \"./Options\";\nimport Is from \"./Is\";\nimport Callbacks from \"./Callbacks\";\n\n/** \n * The Graph class is a 2D graph plotter.\n * Built with performance and customizability in mind. Supports multiple data\n * sets and all data sets are available as typed arrays.\n */\n\n/**\n * Create new graph.\n * @public\n * @constructor\n * @param {dom|string} container - Element.  DOM or ID string. Graph will fill this element.\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Graph}\n */\nfunction Graph(container, options) {\n    if (this instanceof Graph) {\n        this._init(container, options);\n    }\n    //The new keyword was omitted.\n    else {\n        return new Graph(container, options);\n    }\n}\n\n/**\n * Get dummy dataY array.\n * @public\n * @returns {array}\n */\nGraph.createDummyData = Static.createDummyData;\n\n/**\n * Get options instance.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.prototype.getOptions = function () {\n    return this._options;\n};\n\n/**\n * Get default options.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.getDefaultOptions = Options.getDefault;\n\n/**\n * Sets all options to their default values.\n * @public\n */\nGraph.prototype.setDefaultOptions = function () {\n    this._options.setDefault();\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n */\nGraph.prototype.setOptions = function (options) {\n    this._options.set(options);\n    this._hasCalculatedGraphSize = false;\n    if (this._options.isOk()) {\n        this._axes.x.zoom(this._options.zoom.xMin, this._options.zoom.xMax);\n        this._axes.y.zoom(this._options.zoom.yMin, this._options.zoom.yMax);\n        this._axes.x.calculateBounds();\n        this._axes.y.calculateBounds();\n        this._interaction.updateOptions();\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\n        this._initLegend();\n        this._plot();\n    }\n    else {\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\n    }\n};\n\n/* ********** PRIVATE ********** */\n\n/**\n * Implementation of the constructor.\n * @private\n */\nGraph.prototype._init = function (container, options) {\n    if (typeof el === \"string\") {\n        container = document.getElementById(container);\n    }\n    if (!container) {\n        console.error(\"owp.graph ERROR: Element dom is null\");\n        return;\n    }\n\n    container.style.position = \"relative\";\n\n    this._container = container;\n    this._options = new Options();\n\n    this._canvas = {\n        background: new Canvas(container, \"background\"),\n        graph: new Canvas(container, \"graph\", true),\n        highlight: new Canvas(container, \"highlight\"),\n        interaction: new Canvas(container, \"interaction\")\n    };\n\n    this._canvas.background.setZIndex(0);\n    this._canvas.graph.setZIndex(1);\n    this._canvas.highlight.setZIndex(2);\n    //Spinner uses zIndex 3.\n    this._canvas.interaction.setZIndex(4);\n    //Smoothing input used zIndex 5.\n\n    this._axes = {\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\n        y: new Axis(this._options, this._canvas.graph, \"y\")\n    };\n\n    this._interaction = new Interaction(this);\n\n    if (options) {\n        this.setOptions(options);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\n        this.setOptions({});\n    }\n};\n\n/**\n * Create legend canvas and attach to parent dom.\n * @private\n */\nGraph.prototype._initLegend = function () {\n    const location = this._options.legend.location;\n    if (location && this._options.interaction.trackMouse) {\n        //DIV id.\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\n            const legendDiv = document.getElementById(location);\n            if (legendDiv) {\n                legendDiv.style.position = \"relative\";\n                //Reuse existing canvas.\n                if (this._canvas.legend) {\n                    this._canvas.legend.setParent(legendDiv);\n                }\n                //Create new canvas.\n                else {\n                    this._canvas.legend = new Canvas(legendDiv);\n                }\n            }\n            else {\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\n            }\n        }\n        else {\n            //Set same parent for legend as rest of graph.\n            if (this._canvas.legend) {\n                this._canvas.legend.setParent(this._container);\n            }\n            else {\n                this._canvas.legend = new Canvas(this._container);\n                this._canvas.legend.disableMouseInteraction();\n            }\n            if (location.toLowerCase() === \"top\") {\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\n            }\n            else if (location.toLowerCase() === \"right\") {\n                this._canvas.legend.setPosition(0, 0, true);\n                this._canvas.legend.setSize(200, \"100%\");\n            }\n        }\n    }\n    //Remove old legend.\n    else if (this._canvas.legend) {\n        this._canvas.legend.setParent();\n        this._canvas.legend = undefined;\n    }\n};\n\n/**\n * Renders the legend on the background canvas.\n * @private\n */\nGraph.prototype._renderLegend = function (values) {\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\n        return;\n    }\n\n    const settings = this._options.legend;\n    const canvas = this._canvas.legend;\n    canvas.clear();\n    canvas.set(\"font\", this._options.getLegendFont());\n    canvas.set(\"textBaseline\", \"top\");\n    canvas.set(\"textAlign\", settings.align);\n\n    const isTop = settings.location.toLowerCase() === \"top\";\n    const alignLeft = settings.align.toLowerCase() === \"left\";\n    //newLine is disabled for top location.\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\n\n    let x = alignLeft\n        ? this._options.legend.offsetX + this._options.legend.padding\n        : canvas.getWidth() - this._options.legend.offsetX;\n\n    //OffsetY is disabled for top location.\n    let y = isTop\n        ? 0\n        : this._options.legend.offsetY;\n\n    function printValue(color, name, value) {\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\n        canvas.text(str, x, y, null, color);\n        if (newLine) {\n            y += settings.size;\n        }\n        else {\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\n        }\n    }\n\n    const printX = () => {\n        printValue(\n            this._options.graph.colors[0],\n            this._options.getName(0),\n            values ? this._axes.x.formatLegendValue(values[0]) : undefined\n        );\n    }\n\n    const printY = (i) => {\n        printValue(\n            this._options.graph.colors[i],\n            this._options.getName(i),\n            values ? this._axes.y.formatLegendValue(values[i]) : undefined\n        );\n    }\n\n    if (alignLeft || newLine) {\n        printX();\n        for (let i = 1; i <= this._options.graph.dataY.length; ++i) {\n            printY(i);\n        }\n    }\n    else {\n        for (let i = this._options.graph.dataY.length; i >= 1; --i) {\n            printY(i);\n        }\n        printX();\n    }\n};\n\n/**\n * Plots/draws the graph.\n * @private\n */\nGraph.prototype._plot = function () {\n    if (this._options.debug) {\n        console.time(\"owp.graph DEBUG: Plot time\");\n    }\n\n    //If graph size has not yet been calculated. Do it.\n    if (!this._hasCalculatedGraphSize) {\n        this._calculateGraphSize();\n    }\n\n    //Clear plot.\n    this._canvas.background.clear();\n    this._canvas.graph.clear();\n    this._canvas.highlight.clear();\n    this._interaction.clear();\n\n    //Render non data related features.\n    this._renderTitle();\n    this._renderAxesLabels();\n    this._renderSpin();\n\n    //Has bounds. Render bounds related features.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._renderXAxis();\n        this._renderYAxis();\n        this._renderHighlight();\n\n        //Has graph data. Render graph data.\n        if (this._options.graph.dataY.length) {\n            this._renderLegend();\n            this._renderGraph();\n            this._interaction.render();\n        }\n        else if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: No data set available. Plotting available features.\");\n        }\n    }\n    //Has neither bounds or data.\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\n    }\n\n    if (this._options.debug) {\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\n    }\n};\n\n/**\n * Render the spinner\n * @private\n */\nGraph.prototype._renderSpin = function () {\n    //Can't update options so have to remove old spinner always.\n    if (this._spinner) {\n        this._spinner.stop();\n        this._spinner = null;\n    }\n    //Show spinner\n    if (this._options.spinner.show) {\n        //Spinner div does not exist. Create it.\n        if (!this._spinnerDiv) {\n            this._spinnerDiv = document.createElement(\"div\");\n            this._spinnerDiv.style.position = \"absolute\";\n            this._spinnerDiv.style[\"z-index\"] = 3;\n            this._container.append(this._spinnerDiv);\n            this._updateSpinnerSize();\n        }\n        this._spinner = new Spinner(this._options.spinner);\n        this._spinner.spin(this._spinnerDiv);\n    }\n    //Hide spinner. Remove old div.\n    else if (this._spinnerDiv) {\n        this._spinnerDiv.remove();\n        this._spinnerDiv = null;\n    }\n}\n\n/**\n * Updates the position and size of the spinner div based on the graph canvas.\n * @private\n */\nGraph.prototype._updateSpinnerSize = function () {\n    if (this._spinnerDiv) {\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\n    }\n};\n\n/**\n * Calculate graph canvas position and size.\n * @private\n */\nGraph.prototype._calculateGraphSize = function () {\n    const border = this._options.getBorder();\n    const offsetTop = this._getOffset(\"top\");\n    const offsetBottom = this._getOffset(\"bottom\");\n    let height = this._canvas.background.getHeight() - offsetTop - offsetBottom;\n\n    //Calculate new ticks for the new size.\n    if (this._axes.y.hasBounds()) {\n        this._axes.y.calculateTicks(height - border.top - border.bottom);\n    }\n\n    const offsetLeft = this._getOffset(\"left\");\n    let x = offsetLeft;\n    let y = offsetTop;\n    let width = this._canvas.background.getWidth() - offsetLeft - this._getOffset(\"right\");\n\n    if (this._axes.x.hasBounds()) {\n        this._axes.x.calculateTicks(width - border.left - border.right);\n    }\n\n    //Set graph canvas.\n    this._canvas.graph.setPosition(x, y);\n    this._canvas.graph.setSize(width, height);\n\n    //Convert to content space.\n    x = this._canvas.graph.getContentX();\n    y = this._canvas.graph.getContentY();\n    width = this._canvas.graph.getContentWidth();\n    height = this._canvas.graph.getContentHeight();\n\n    //Set highlight canvas.\n    this._canvas.highlight.setPosition(x, y);\n    this._canvas.highlight.setSize(width, height);\n    //Set interaction canvas.\n    this._canvas.interaction.setPosition(x, y);\n    this._canvas.interaction.setSize(width, height);\n    //Set legend canvas if available.\n    if (this._canvas.legend) {\n        if (this._options.legend.location.toLowerCase() === \"top\") {\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.padding);\n            this._canvas.legend.setSize(width, this._options.legend.size);\n        }\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\n            this._canvas.legend.setPosition(this._options.getOffset().right, y, true);\n            this._canvas.legend.setSize(200, height);\n        }\n    }\n\n    //Update interaction instance.\n    this._interaction.graphChangedSize(x, y, width, height);\n\n    //Updates the spinner div size.\n    this._updateSpinnerSize();\n\n    this._hasCalculatedGraphSize = true;\n};\n\n/**\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderXAxis = function () {\n    if (!this._options.axes.x.show) {\n        return;\n    }\n    const ticks = this._axes.x.getTicks();\n    let oldX, oldWidth;\n\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\n\n        //Draw tick markers.\n        if (ticks.markers) {\n            y += ticks.markers.offset;\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\n            y += ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid\n            && x > this._canvas.graph.getContentX() * 1.01\n            && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\n        }\n\n        //Move last tick label to the left to avoid collision with the right edge.\n        if (i === ticks.length - 1) {\n            x = Math.min(\n                x,\n                this._canvas.background.getContentWidth() - Math.ceil(ticks.labels.width[i] / 2) - 1\n            );\n        }\n\n        //Draw tick label.\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\n            y += ticks.labels.padding;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\n            y += ticks.labels.offset;\n            oldX = x;\n            oldWidth = ticks.labels.width[i];\n        }\n    }\n};\n\n/**\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderYAxis = function () {\n    if (!this._options.axes.y.show) {\n        return;\n    }\n    const ticks = this._axes.y.getTicks();\n    let oldY;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getX();\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\n        //Draw tick markers.\n        if (ticks.markers) {\n            x -= ticks.markers.offset;\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\n            x -= ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\n            x -= ticks.labels.padding;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\n            x -= ticks.labels.offset;\n            oldY = y;\n        }\n    }\n};\n\n/**\n * Renders the axes(x and y) labels on the background canvas.\n * @private\n */\nGraph.prototype._renderAxesLabels = function () {\n    //Draw X label.\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset - this._options.getOffset().bottom;\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\n    }\n    //Draw Y label.\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\n        const x = this._options.axes.labels.offset + this._options.getOffset().left;\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\n    }\n};\n\n/**\n * Renders the graph title on the background canvas.\n * @private\n */\nGraph.prototype._renderTitle = function () {\n    if (!this._options.title.label.length) {\n        return;\n    }\n    let x;\n    if (this._options.title.align.toLowerCase() === \"left\") {\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX + this._options.getOffset().left;\n    }\n    else if (this._options.title.align.toLowerCase() === \"center\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"right\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX - this._options.getOffset().right;\n    }\n    const y = this._options.title.offsetY + this._options.getOffset().top;\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\n};\n\n/**\n * Renders the highligted area on the highligh canvas.\n * @private\n */\nGraph.prototype._renderHighlight = function () {\n    this._canvas.highlight.clear();\n    const h = this._options.highlight;\n    if (Is.isNull(h.xMin) && Is.isNull(h.xMax) && Is.isNull(h.yMin) && Is.isNull(h.yMax)) {\n        return;\n    }\n    //Convert values to pixels.\n    const x1 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMin) ? this._axes.x.getMin() : h.xMin\n    );\n    const x2 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMax) ? this._axes.x.getMax() : h.xMax\n    );\n    const y1 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMin) ? this._axes.y.getMin() : h.yMin\n    );\n    const y2 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMax) ? this._axes.y.getMax() : h.yMax\n    );\n    this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, h.color);\n};\n\n/**\n * Renders the graph curve on the graph canvas.\n * @private\n */\nGraph.prototype._renderGraph = function () {\n    if (this._options.debug && this._options.graph.smoothing > 1) {\n        console.debug(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\n    }\n    if (this._options.debug && this._options.renderSimplify()) {\n        console.debug(`owp.graph DEBUG: Simplify rendering: ${this._options.graph.simplify} ${this._options.graph.simplifyBy}`);\n    }\n    //Clear old data so we can draw new.\n    this._canvas.graph.clear();\n    //Get canvas and set properties.\n    const ctx = this._canvas.graph.getContext();\n    ctx.lineWidth = this._options.graph.lineWidth;\n    ctx.globalCompositeOperation = this._options.graph.compositeOperation;\n    //Get render callback based on options\n    const renderCallback = Callbacks.getRenderCallback(this._options, this._canvas.graph, this._axes);\n    //Render each data set.\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n        renderCallback(i);\n    }\n};\n\n/**\n * Get offset for the given paramters.\n * @private\n */\nGraph.prototype._getOffset = function (side) {\n    let offset = 0;\n    switch (side) {\n        case \"top\":\n            if (this._options.title.label.length) {\n                offset += this._options.title.size;\n                offset += this._options.title.offsetY;\n                offset += this._options.title.padding;\n            }\n            if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\n                offset += this._canvas.legend.getHeight();\n                offset += this._options.legend.offsetY;\n                offset += this._options.legend.padding;\n            }\n            else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                offset += this._options.axes.tickLabels.size / 2;\n            }\n            offset += this._options.getOffset().top;\n            break;\n        case \"bottom\":\n            if (this._options.axes.x.show) {\n                if (this._options.axes.x.label.length) {\n                    offset += this._options.axes.labels.size;\n                    offset += this._options.axes.labels.offset;\n                    offset += this._options.axes.labels.padding;\n                }\n                if (this._options.axes.x.height) {\n                    offset += this._options.axes.x.height;\n                }\n                else {\n                    if (this._options.axes.tickLabels.show) {\n                        offset += this._options.axes.tickLabels.size;\n                        offset += this._options.axes.tickLabels.offset;\n                        offset += this._options.axes.tickLabels.padding;\n                    }\n                    if (this._options.axes.tickMarkers.show) {\n                        offset += this._options.axes.tickMarkers.length;\n                        offset += this._options.axes.tickMarkers.offset;\n                    }\n                }\n            }\n            else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                offset += this._options.axes.tickLabels.size / 2;\n            }\n            offset += this._options.getOffset().bottom;\n            break;\n        case \"left\":\n            if (this._options.axes.y.show) {\n                if (this._options.axes.y.label.length) {\n                    offset += this._options.axes.labels.size;\n                    offset += this._options.axes.labels.offset;\n                    offset += this._options.axes.labels.padding;\n                }\n                if (this._options.axes.y.width) {\n                    offset += this._options.axes.y.width;\n                }\n                else {\n                    if (this._options.axes.tickLabels.show) {\n                        offset += this._axes.y.getLabelWidth();\n                        offset += this._options.axes.tickLabels.offset;\n                        offset += this._options.axes.tickLabels.padding;\n                    }\n                    if (this._options.axes.tickMarkers.show) {\n                        offset += this._options.axes.tickMarkers.length;\n                        offset += this._options.axes.tickMarkers.offset;\n                    }\n                }\n            }\n            else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\n                offset += this._axes.x.getBoundLabelWidth(\"min\", true);\n            }\n            offset += this._options.getOffset().left;\n            break;\n        case \"right\":\n            if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\n                offset += this._canvas.legend.getWidth();\n            }\n            offset += this._options.getOffset().right;\n            break;\n    }\n    return Math.round(offset);\n};\n\nexport default Graph;"],"sourceRoot":""}