{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap","webpack:///./src/Is.js","webpack:///./src/Options.js","webpack:///./src/lib/spin.min.js","webpack:///./src/Canvas.js","webpack:///./src/Static.js","webpack:///./src/Axis.js","webpack:///./src/Input.js","webpack:///./src/Callbacks.js","webpack:///./src/Interaction.js","webpack:///./src/index.js"],"names":["root","factory","exports","module","define","amd","a","i","window","installedModules","__webpack_require__","moduleId","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","Is","isOfType2","obj","callbacks","isDOM","HTMLElement","isNull","isObject","isArray","isFunction","isBool","isNumber","isInt","isUint","isString","Array","isTypedArray","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","isAnyArray","isColor","div","document","createElement","style","borderColor","isSize","width","isAlignment","noCenter","toLowerCase","isFont","isCompositeOperation","isBorderWidth","borderWidth","isBorderStyle","borderStyle","getCompareCallback","type","Error","getCompareCallbacks","types","split","length","push","isOfType","isContent","array","isInOptions","options","Options","this","setDefault","set","evalOptions","optionsOk","obj2","name2","path","paths","set2","error","msg","console","evalType","res","evalEnum","values","indexOf","join","evalArrayContains","evalAlign","evalCond","cond","eval","replaceAll","trim","axes","isOk","_isOk","getColor","index","graph","colors","getName","undefined","names","getLegendFont","legend","size","font","getDefault","debug","interaction","resize","trackMouse","zoom","smoothing","title","label","bold","offsetX","offsetY","padding","color","align","location","newLine","highlight","xMin","xMax","yMin","yMax","dataX","dataY","dashed","lineWidth","markerRadius","simplify","simplifyBy","fill","compositeOperation","tickMarkers","show","offset","tickLabels","labels","x","inverted","log","height","numTicks","legendValueFormatter","tickerValuePreFormatter","tickerValuePostFormatter","tickerLabelFormatter","ticker","grid","bounds","min","max","y","border","spinner","lines","radius","corners","rotate","direction","speed","trail","shadow","hwaccel","position","top","left","setMembers","oldObj","newObj","warn","assign","renderMarkers","renderSimplify","b","arguments","appendChild","e","f","g","Math","h","j","substring","k","insertRule","cssRules","charAt","toUpperCase","slice","opts","defaults","scale","opacity","fps","zIndex","className","spin","stop","el","insertBefore","firstChild","setAttribute","timeout","setTimeout","clearTimeout","parentNode","removeChild","background","boxShadow","transformOrigin","transform","borderRadius","animation","childNodes","getElementsByTagName","sheet","styleSheet","behavior","adj","addRule","coordsize","coordorigin","rotation","arcsize","filter","Canvas","container","id","dontScale","_canvas","append","_context","getContext","_dontScale","margin","setPosition","setSize","setParent","remove","putImageData","data","_ratio","getCanvas","getX","_x","getY","_y","getContentX","_contentX","getContentY","_contentY","getWidth","offsetWidth","getHeight","offsetHeight","getContentWidth","clientWidth","getContentHeight","clientHeight","getContentOffsetX","_contentOffsetX","getContentOffsetY","_contentOffsetY","getTextWidth","text","measureText","clear","clearRect","clearRectangle","setZIndex","member","setBorder","_calculateContentPosition","getRatio","rotateDegrees","PI","alignRight","valignBottom","right","bottom","dpr","devicePixelRatio","bsr","webkitBackingStorePixelRatio","mozBackingStorePixelRatio","msBackingStorePixelRatio","oBackingStorePixelRatio","backingStorePixelRatio","strokeRectangle","strokeStyle","strokeRect","fillRectangle","fillStyle","fillRect","fillRectangle2","x1","y1","x2","y2","strokeCircle","beginPath","arc","stroke","fillCircle","line","moveTo","lineTo","baseline","textAlign","textBaseline","save","translate","fillText","restore","disableMouseInteraction","compStyle","getComputedStyle","ratio","round","parseFloat","getPropertyValue","match","Static","seed","random","sin","floor","data1","data2","mult","cos","dataCallback","mid","found","context","decimals","multiplier","pow","log10","LN10","Axis","graphCanvas","axis","_isX","_axis","_getSize","_options","_getRatio","defaultLegendValueFormatter","defaultTickerLabelFormatter","ranges","divider","suffix","toString","getStepValue","isLog","exp","newValue","hasBounds","getMin","getMax","isInverted","_overrideMin","_min","_overrideMax","_max","getAxisLabel","getTickLabelsFont","getAxisLabelFont","getBoundLabelWidth","minOrMax","pad","bound","getTicks","_ticks","hasZoom","calculateTicks","clearZoom","calculateBounds","newMin","newMax","calcBounds","_calculateXBounds","_calculateYBounds","ticks","labelSize","_getDefaultTicks","coordinate","valueToPixel","markers","pixelToValue","pixel","formatLegendValue","getValueToPixelCallback","num","denom","numVar","numOp","logFunc","Function","minValue","maxValue","graphSize","step","secureFloat","getDefaultLogTicks","start","diff","getDefaultLinTicks","val","toPrecision","Input","attr","input","callback","parseInt","isNaN","dispatchEvent","Event","addEventListener","which","Callbacks","renderAvg","ctx","valueToPixelX","valueToPixelY","getDataX","getDataY","end","abs","oldX","sum","count","newX","renderMin","minVal","renderMax","maxVal","renderMinMax","valueY","renderFull","renderLine","circleAngle","renderFill","canvas","channelIndex","closePath","renderStroke","pattern","setLineDash","calculateAvgValue","calculateMinValue","calculateMaxValue","calculateMinMaxValue","calculateSmothingValue","getSmoothingWindow","low","high","getDataCallback","dataIndex","threshold","getDataCallbackSmoothing","diffToMin","diffToMax","getRenderCallback","renderCallback","strokeCallback","getStrokeCallback","bsMin","binarySearch","bsMax","getCalculateValueCallback","getCalculateSimplifyCallback","Interaction","_graph","updateOptions","_resizeCallback","_addResizeEvent","removeEventListener","_mouseTrackingCallbacks","_addMouseTrackingEvents","mousemove","mouseout","_zoomCallbacks","_addZoomEvents","mousedown","mouseup","dblclick","_smoothingCallback","_addSmoothingEvent","_smoothingInput","_createInteractionData","display","render","graphChangedSize","self","timeOutResize","resizeEnd","_calculateGraphSize","_plot","_resizing","lastWidth","lastHeight","lastPixelRatio","_renderLegend","mouseDown","_axes","valueX","calculateValueCallback","pixelY","isFinite","_interactionData","startX","startY","lastHorizontal","lastX","lastY","button","diffX","diffY","newHorizontal","clamp","preventDefault","returnValue","cancelBubble","toElement","tabIndex","maxLength","_container","callbackDone","_renderGraph","imageData","getImageData","number","HTMLCanvasElement","CanvasRenderingContext2D","Graph","_init","createDummyData","getOptions","getDefaultOptions","setDefaultOptions","setOptions","_hasCalculatedGraphSize","_interaction","_initLegend","getElementById","parent","legendDiv","settings","isTop","alignLeft","printValue","str","printX","printY","time","_renderTitle","_renderAxesLabels","_renderSpin","_renderXAxis","_renderYAxis","_renderHighlight","timeEnd","_spinner","_spinnerDiv","_updateSpinnerSize","Spinner","_getOffset","oldWidth","oldY","globalCompositeOperation","tickLabelMinSize","tickLabelMaxSize","defaultOffset","boundOffset"],"mappings":"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","file":"owp.graph.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 3);\n","const Is = {};\n\n/**\n * Check if the given object is a DOM element.\n * @param {object} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isDOM = function (obj) {\n    return obj instanceof HTMLElement;\n};\n\n/**\n * Check of the given object is null or undefined.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNull = function (obj) {\n    return obj === undefined || obj === null;\n};\n\n/**\n * Check of the given object is a object.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isObject = function (obj) {\n    return obj !== null && typeof obj === \"object\" && !Is.isArray(obj);\n};\n\n/**\n * Check of the given object is a function.\n * @private\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFunction = function (obj) {\n    return typeof obj === \"function\";\n};\n\n/**\n * Check of the given object is a bool.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isBool = function (obj) {\n    return typeof obj === \"boolean\";\n};\n\n/**\n * Check of the given object is a number.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isNumber = function (obj) {\n    return typeof obj === \"number\";\n};\n\n/**\n * Check of the given object is an integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isInt = function (obj) {\n    return typeof obj === \"number\" && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is an unsigned integer.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isUint = function (obj) {\n    return typeof obj === \"number\" && obj >= 0 && obj % 1 === 0;\n};\n\n/**\n * Check of the given object is a string.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isString = function (obj) {\n    return typeof obj === \"string\";\n};\n\n/**\n * Check of the given object is an Array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isArray = function (obj) {\n    return obj instanceof Array;\n};\n\n/**\n * Check of the given object is an typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isTypedArray = function (obj) {\n    return obj instanceof Int8Array\n        || obj instanceof Uint8Array\n        || obj instanceof Uint8ClampedArray\n        || obj instanceof Int16Array\n        || obj instanceof Uint16Array\n        || obj instanceof Int32Array\n        || obj instanceof Uint32Array\n        || obj instanceof Float32Array\n        || obj instanceof Float64Array;\n};\n\n/**\n * Check of the given object is an array or a typed array.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isAnyArray = function (obj) {\n    return Is.isArray(obj) || Is.isTypedArray(obj);\n};\n\n/**\n * Check of the given object is a color.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isColor = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderColor = \"\";\n    div.style.borderColor = obj;\n    return div.style.borderColor !== \"\";\n};\n\n/**\n * Check of the given object is a size.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isSize = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.width = \"\";\n    div.style.width = obj;\n    return div.style.width !== \"\";\n};\n\n/**\n * Check of the given object is an alignment.\n * @public\n * @param {string} obj - Object to evaluate.\n * @param {bool} noCenter - If true the center alignment is not valid.\n * @returns {bool}\n */\nIs.isAlignment = function (obj, noCenter) {\n    obj = obj.toLowerCase();\n    if (noCenter) {\n        return obj === \"left\" || obj === \"right\";\n    }\n    else {\n        return obj === \"left\" || obj === \"center\" || obj === \"right\";\n    }\n};\n\n/**\n * Check of the given object is a font.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isFont = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style[\"font-family\"] = \"\";\n    div.style[\"font-family\"] = obj;\n    return div.style[\"font-family\"] !== \"\";\n};\n\n/**\n * Check of the given object is an composite operation.\n * @public\n * @param {string} obj - Object to evaluate.\n * @returns {bool}\n */\nIs.isCompositeOperation = function (obj) {\n    obj = obj.toLowerCase();\n    return obj === \"source-over\"\n        || obj === \"source-in\"\n        || obj === \"source-out\"\n        || obj === \"source-atop\"\n        || obj === \"destination-over\"\n        || obj === \"destination-in\"\n        || obj === \"destination-out\"\n        || obj === \"destination-atop\"\n        || obj === \"lighter\"\n        || obj === \"copy\"\n        || obj === \"xor\"\n        || obj === \"multiply\"\n        || obj === \"screen\"\n        || obj === \"overlay\"\n        || obj === \"darken\"\n        || obj === \"lighten\"\n        || obj === \"color-dodge\"\n        || obj === \"color-burn\"\n        || obj === \"hard-light\"\n        || obj === \"soft-light\"\n        || obj === \"difference\"\n        || obj === \"exclusion\"\n        || obj === \"hue\"\n        || obj === \"saturation\"\n        || obj === \"color\"\n        || obj === \"luminosity\";\n};\n\nIs.isBorderWidth = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderWidth = \"\";\n    div.style.borderWidth = obj;\n    return div.style.borderWidth !== \"\";\n};\n\nIs.isBorderStyle = function (obj) {\n    const div = document.createElement(\"div\");\n    div.style.borderStyle = \"\";\n    div.style.borderStyle = obj;\n    return div.style.borderStyle !== \"\";\n};\n\n\n/**\n * Get a callback to evaluate if the given data is of the specified type.\n * @param {string} type\n * @returns {function]\n * }\n */\nIs.getCompareCallback = function (type) {\n    switch (type) {\n        case \"number\":\n            return Is.isNumber;\n        case \"int\":\n            return Is.isInt;\n        case \"string\":\n            return Is.isString;\n        case \"font\":\n            return Is.isFont;\n        case \"bool\":\n            return Is.isBool;\n        case \"array\":\n            return Is.isArray;\n        case \"typedArray\":\n            return Is.isTypedArray;\n        case \"anyArray\":\n            return Is.isAnyArray;\n        case \"object\":\n            return Is.isObject;\n        case \"function\":\n            return Is.isFunction;\n        case \"color\":\n            return Is.isColor;\n        case \"size\":\n            return Is.isSize;\n        case \"alignment\":\n            return Is.isAlignment;\n        case \"compositeOperation\":\n            return Is.isCompositeOperation;\n        case \"borderStyle\":\n            return Is.isBorderStyle;\n        case \"borderWidth\":\n            return Is.isBorderWidth;\n        case \"dom\":\n            return Is.isDOM;\n        case \"null\":\n            return Is.isNull;\n        default:\n            throw new Error(\"Is.getCompareCallback: No compare typed found for: \" + type);\n    }\n};\n\n/**\n * Get a list of callbacks to evaluate if the given data is of the specified type.\n * @param {string} type. Separated by |\n * @returns {array<function>]}\n */\nIs.getCompareCallbacks = function (type) {\n    const callbacks = [];\n    const types = type.split(\"|\");\n    if (!types.length) {\n        throw new Error(\"Is.getCompareCallbacks: types is empty.\");\n    }\n    for (let i = 0; i < types.length; ++i) {\n        callbacks.push(Is.getCompareCallback(types[i]));\n    }\n    return callbacks;\n};\n\n/**\n * True if object is of type\n * @param {string} type. Separated by |\n * @returns {bool}\n */\nIs.isOfType = function (obj, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}\n\n/**\n * Check if the array only contains items if the given type.\n * @public\n * @param {array} array - Array to check.\n * @param {string} type - Type to compare itmes against.\n * @returns {bool} - True if the array only contains items if the given type.\n */\nIs.isContent = function (array, type) {\n    const callbacks = Is.getCompareCallbacks(type);\n    for (let i = 0; i < array.length; ++i) {\n        if (!isOfType2(array[i], callbacks)) {\n            return false;\n        }\n    }\n    return true;\n};\n\nIs.isInOptions = function (value, options) {\n    for (let i = 0; i < options.length; ++i) {\n        if (options[i] === value) {\n            return true;\n        }\n    }\n    return false;\n};\n\nexport default Is;\n\nfunction isOfType2(obj, callbacks) {\n    for (let i in callbacks) {\n        if (callbacks[i](obj)) {\n            return true;\n        }\n    }\n    return false;\n}","import Is from \"./Is\";\n\n/** \n * The Options class is the options and associated functions for the Graph class.\n * See setDefault() for a desciption of the possible option parameters.\n */\n\n/**\n * Create new Graph options.\n * @public\n * @constructor\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Options}\n */\nfunction Options(options) {\n    this.setDefault();\n    if (options) {\n        this.set(options);\n    }\n}\n\n/**\n * Check if the options are ok / valid.\n * @public\n * @returns {bool} - True if the options are ok.\n */\nOptions.prototype.isOk = function () {\n    return this._isOk;\n};\n\n/**\n * Get color for a data set.  Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string} - CSS color string.\n */\nOptions.prototype.getColor = function (index) {\n    return this.graph.colors[index] ? this.graph.colors[index] : \"#000000\";\n};\n\n/**\n * Get name for a data set. Index = 0 is X axis.\n * @public\n * @param {int} index - Index of the data set.\n * @returns {string}\n */\nOptions.prototype.getName = function (index) {\n    if (this.graph.names[index] !== undefined) {\n        return this.graph.names[index];\n    }\n    else if (index > 0) {\n        return \"DATA\" + (index);\n    }\n    else {\n        return \"X\";\n    }\n};\n\n/**\n * Get the font(family and size) for the legend label.\n * @public\n * @returns {string}\n */\nOptions.prototype.getLegendFont = function () {\n    return this.legend.size + \"px \" + this.legend.font;\n};\n\n/**\n * Get the default options object.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nOptions.getDefault = function () {\n    return {\n        debug: false,\n        interaction: {\n            resize: true,\n            trackMouse: true,\n            zoom: true,\n            smoothing: false\n        },\n        title: {\n            label: \"\",\n            bold: false,\n            size: 20,\n            offsetX: 0,\n            offsetY: 0,\n            padding: 5,\n            font: \"verdana\",\n            color: \"black\",\n            align: \"center\"\n        },\n        legend: {\n            location: \"top\",\n            font: \"Arial\",\n            size: 15,\n            offsetX: 10,\n            offsetY: 2,\n            align: \"right\",\n            newLine: false\n        },\n        highlight: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null,\n            color: \"rgba(0, 0, 255, 0.2)\"\n        },\n        zoom: {\n            xMin: null,\n            xMax: null,\n            yMin: null,\n            yMax: null\n        },\n        graph: {\n            dataX: [],\n            dataY: [],\n            colors: [\"#000000\", \"#0000FF\", \"#FF0000\", \"#800080\", \"#00FF00\", \"#8080FF\", \"#FF8080\", \"#FF00FF\", \"#00FFFF\"],\n            names: [],\n            dashed: [],\n            lineWidth: 1,\n            markerRadius: 0,\n            smoothing: 0,\n            simplify: 0.1,\n            simplifyBy: \"minMax\",\n            fill: false,\n            compositeOperation: \"source-over\"\n        },\n        axes: {\n            tickMarkers: {\n                show: true,\n                length: 5,\n                width: 1,\n                offset: 0,\n                color: \"#BEBEBE\"\n            },\n            tickLabels: {\n                show: true,\n                color: \"black\",\n                font: \"Arial\",\n                size: 12,\n                width: 40,\n                offset: 2\n            },\n            labels: {\n                color: \"black\",\n                font: \"verdana\",\n                size: 15,\n                offset: 3,\n                padding: 0\n            },\n            x: {\n                show: true,\n                inverted: false,\n                log: false,\n                height: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            },\n            y: {\n                show: true,\n                inverted: false,\n                log: false,\n                width: 0,\n                label: \"\",\n                numTicks: 0,\n                legendValueFormatter: null,\n                tickerValuePreFormatter: null,\n                tickerValuePostFormatter: null,\n                tickerLabelFormatter: null,\n                ticker: null,\n                grid: {\n                    width: 1,\n                    color: \"#BEBEBE\"\n                },\n                bounds: {\n                    min: null,\n                    max: null\n                }\n            }\n        },\n        border: {\n            style: \"solid\",\n            color: \"black\",\n            width: \"0 0 1px 1px\"\n        },\n        spinner: {//Options regarding the spinner.\n            show: false, //Automatically show spinner when plotting data. Can always be activated manually.\n            lines: 13, //The number of lines to draw.\n            length: 30, //The length of each line.\n            width: 10, //The line thickness.\n            radius: 30, //The radius of the inner circle.\n            corners: 1, //Corner roundness (0..1).\n            rotate: 0, //The rotation offset.\n            direction: 1, //1: clockwise, -1: counterclockwise\n            color: \"black\", //#rgb or #rrggbb or array of colors\n            speed: 1, //Revolutions per second\n            trail: 50, //Afterglow percentage\n            shadow: false, //If true a shadow is rendered.\n            hwaccel: true, //If true hardware acceleration is used.\n            position: 'relative', //Position type.\n            top: \"50%\", //CenterY position relative to parent\n            left: \"50%\"         //CenterX position relative to parent\n        }\n    };\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - The options to set.\n */\nOptions.prototype.set = function (options) {\n    function setMembers(oldObj, newObj, path) {\n        for (let i in newObj) {\n            if (!Array.isArray(oldObj) && !Object.prototype.hasOwnProperty.call(oldObj, i)) {\n                console.warn(\"owp.graph WARNING: Can't set unexisting option: \" + path + (path.length ? \".\" + i : i));\n                continue;\n            }\n            //Member is a new object. Call function recursivly.\n            if (Is.isObject(newObj[i])) {\n                setMembers(oldObj[i], newObj[i], path + (path.length ? \".\" : \"\") + i);\n            }\n            //Member is null or a base type. Set it.\n            else {\n                oldObj[i] = newObj[i];\n            }\n        }\n    }\n    setMembers(this, options, \"\");\n\n    this._isOk = evalOptions(this);\n};\n\n/**\n * Sets all options to their default values.\n * @public\n */\nOptions.prototype.setDefault = function () {\n    Object.assign(this, Options.getDefault());\n    this._isOk = true;\n};\n\n/**\n * Returns true if markers are to be rendered.\n * @public\n */\nOptions.prototype.renderMarkers = function() {\n    //Can't combine markers with filled lines.\n    return this.graph.markerRadius && (!this.graph.fill || !this.graph.lineWidth);\n}\n\n/**\n * Returns true if simplify algorithm is to be used.\n * @public\n */\nOptions.prototype.renderSimplify = function() {\n    //Can't combined simplified rendering with markers.\n    return this.graph.simplify && !this.renderMarkers();\n}\n\n/**\n * Evaluates the options and sets ok status flag.\n * @private\n */\nfunction evalOptions (options) {\n    let optionsOk = true;\n    let obj, obj2, name, name2;\n    function set(path) {\n        name = path;\n        obj = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj = obj[paths[i]];\n        }\n    }\n    function set2(path) {\n        name2 = path;\n        obj2 = options;\n        const paths = path.split(\".\");\n        for (let i = 0; i < paths.length; ++i) {\n            obj2 = obj2[paths[i]];\n        }\n    }\n    function error(msg) {\n        console.error(\"owp.graph ERROR: invalid option. \" + name + \": \" + msg);\n        optionsOk = false;\n    }\n    function evalType(type) {\n        const res = Is.isOfType(obj, type);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of type: \" + type);\n        }\n        return res;\n    }\n    function evalEnum(values) {\n        const res = values.indexOf(obj) > -1;\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not of any type: [\" + values.join(\", \") + \"].\");\n        }\n        return res;\n    }\n    function evalArrayContains(type) {\n        const res = Is.isContent(obj, type);\n        if (!res) {\n            error(\"\\\"[\" + obj + \"]\\\" contains object type other than: \" + type + \".\");\n        }\n        return res;\n    }\n    function evalAlign(noCenter) {\n        const res = Is.isAlignment(obj, noCenter);\n        if (!res) {\n            error(\"\\\"\" + obj + \"\\\" is not an valid alignment.\");\n        }\n        return res;\n    }\n    function evalCond(cond) {\n        const res = eval(cond);\n        if (!res) {\n            cond = cond.replaceAll(\"obj2\", name2).trim();\n            cond = cond.replaceAll(\"obj.\", \"\").trim();\n            cond = cond.replaceAll(\"obj\", \"\").trim();\n            if (Is.isArray(obj)) {\n                error(\"Failed condition: \" + cond);\n            }\n            else {\n                error(\"\\\"\" + obj + \"\\\" failed condition: \" + cond);\n            }\n        }\n        return res;\n    }\n\n    set(\"debug\");\n    evalType(\"bool\");\n\n    set(\"interaction\");\n    if (evalType(\"object\")) {\n        set(\"interaction.resize\");\n        evalType(\"bool\");\n\n        set(\"interaction.trackMouse\");\n        evalType(\"bool\");\n\n        set(\"interaction.zoom\");\n        evalType(\"bool\");\n\n        set(\"interaction.smoothing\");\n        evalType(\"bool\");\n    }\n\n    set(\"title\");\n    if (evalType(\"object\")) {\n        set(\"title.bold\");\n        evalType(\"bool\");\n\n        set(\"title.label\");\n        evalType(\"string\");\n\n        set(\"title.size\");\n        evalType(\"int\");\n        evalCond(\"obj > 0\");\n\n        set(\"title.offsetX\");\n        evalType(\"int\");\n\n        set(\"title.offsetY\");\n        evalType(\"int\");\n\n        set(\"title.padding\");\n        evalType(\"int\");\n\n        set(\"title.font\");\n        evalType(\"font\");\n\n        set(\"title.color\");\n        evalType(\"color\");\n\n        set(\"title.align\");\n        evalAlign();\n    }\n\n    set(\"legend\");\n    if (evalType(\"object\")) {\n        set(\"legend.location\");\n        evalType(\"string\");\n\n        set(\"legend.font\");\n        evalType(\"font\");\n\n        set(\"legend.size\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"legend.offsetX\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.offsetY\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"legend.align\");\n        evalAlign(true);\n\n        set(\"legend.newLine\");\n        evalType(\"bool\");\n    }\n\n    set(\"highlight\");\n    if (evalType(\"object\")) {\n        set(\"highlight.xMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.xMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMin\");\n        evalType(\"number|null\");\n\n        set(\"highlight.yMax\");\n        evalType(\"number|null\");\n\n        set(\"highlight.color\");\n        evalType(\"color\");\n    }\n\n    set(\"zoom\");\n    if (evalType(\"object\")) {\n        set(\"zoom.xMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.xMax\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMin\");\n        evalType(\"number|null\");\n\n        set(\"zoom.yMax\");\n        evalType(\"number|null\");\n    }\n\n    set(\"graph\");\n    if (evalType(\"object\")) {\n        set(\"graph.dataX\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n\n            set2(\"graph.dataY\");\n            if (evalCond(\"obj.length === 0 || obj.length === 1 || obj.length === obj2.length\")) {\n                evalCond(\"obj.length <= obj2.length\");\n            }\n        }\n\n        set(\"graph.dataY\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"anyArray\");\n            set2(\"graph.dataX\");\n            //Only one dataX(incl implicit). All dataY have to be of the same size.\n            if (obj2.length === 0 || obj2.length === 1) {\n                //Check so that all dataY are the same size.\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj[0].length) {\n                        error(\"Not all arrays are of the same size.\");\n                    }\n                }\n                //If dataX.length == 1. Check if same length as dataY.\n                if (obj2.length === 1 && (!obj.length || obj2[0].length !== obj[0].length)) {\n                    error(\"Size does not match dataX.\");\n                }\n            }\n            //dataX.length == dataY.length. Check that each pair(x,y) are the same length.\n            else if (obj.length === obj2.length) {\n                for (let i = 0; i < obj.length; ++i) {\n                    if (obj[i].length !== obj2[i].length) {\n                        error(\"dataY[\" + i + \"].length != dataX[\" + i + \"].length\");\n                    }\n                }\n            }\n        }\n\n        set(\"graph.colors\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"color\");\n        }\n\n        set(\"graph.names\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"string\");\n        }\n\n        set(\"graph.dashed\");\n        if (evalType(\"array\")) {\n            evalArrayContains(\"bool|array\");\n        }\n\n        set(\"graph.lineWidth\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.markerRadius\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.smoothing\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"graph.simplify\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"graph.simplifyBy\");\n        if (evalType(\"string\")) {\n            evalEnum([\"avg\", \"min\", \"max\", \"minMax\"]);\n        }\n\n        set(\"graph.fill\");\n        evalType(\"bool\");\n\n        set(\"graph.compositeOperation\");\n        evalType(\"compositeOperation\");\n    }\n\n    set(\"axes\");\n    if (evalType(\"object\")) {\n        set(\"axes.tickMarkers\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickMarkers.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickMarkers.length\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickMarkers.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n\n            set(\"axes.tickMarkers.color\");\n            evalType(\"color\");\n        }\n\n        set(\"axes.tickLabels\");\n        if (evalType(\"object\")) {\n            set(\"axes.tickLabels.show\");\n            evalType(\"bool\");\n\n            set(\"axes.tickLabels.color\");\n            evalType(\"color\");\n\n            set(\"axes.tickLabels.font\");\n            evalType(\"font\");\n\n            set(\"axes.tickLabels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.width\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.tickLabels.offset\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        set(\"axes.labels\");\n        if (evalType(\"object\")) {\n            set(\"axes.labels.color\");\n            evalType(\"color\");\n\n            set(\"axes.labels.font\");\n            evalType(\"font\");\n\n            set(\"axes.labels.size\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj > 0\");\n            }\n\n            set(\"axes.labels.offset\");\n            evalType(\"int\");\n\n            set(\"axes.labels.padding\");\n            if (evalType(\"int\")) {\n                evalCond(\"obj >= 0\");\n            }\n        }\n\n        //axes x and y\n        const axes = [\"axes.x\", \"axes.y\"];\n        for (let i = 0; i < axes.length; ++i) {\n            set(axes[i]);\n            if (evalType(\"object\")) {\n                set(axes[i] + \".show\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".inverted\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".log\");\n                evalType(\"bool\");\n\n                set(axes[i] + \".\" + (axes[i] === \"axes.x\" ? \"height\" : \"width\"));\n                evalType(\"int\");\n                evalCond(\"obj >= 0\");\n\n                set(axes[i] + \".grid\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".grid.width\");\n                    evalType(\"int\");\n                    evalCond(\"obj >= 0\");\n\n                    set(axes[i] + \".grid.color\");\n                    evalType(\"color\");\n                }\n\n                set(axes[i] + \".label\");\n                evalType(\"string\");\n\n                set(axes[i] + \".bounds\");\n                if (evalType(\"object\")) {\n                    set(axes[i] + \".bounds.min\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj)) {\n                        evalType(\"number\");\n                        set2(axes[i] + \".log\");\n                        if (obj2 && obj <= 0) {\n                            error(\"\\\"[\" + obj + \"]\\\" When axis is logarithmic all bounds must be greather than 0.\");\n                        }\n                    }\n\n                    set(axes[i] + \".bounds.min\");\n                    set2(axes[i] + \".bounds.max\");\n                    if (!Is.isNull(obj) && !Is.isNull(obj2)) {\n                        evalCond(\"obj < obj2\");\n                    }\n                }\n\n                set(axes[i] + \".numTicks\");\n                evalType(\"int\");\n\n                set(axes[i] + \".legendValueFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePreFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerValuePostFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".tickerLabelFormatter\");\n                evalType(\"function|null\");\n\n                set(axes[i] + \".ticker\");\n                evalType(\"function|null\");\n\n            }\n        }\n    }\n\n    set(\"border\");\n    if (evalType(\"object\")) {\n        set(\"border.style\");\n        evalType(\"borderStyle\");\n\n        set(\"border.color\");\n        evalType(\"color\");\n\n        set(\"border.width\");\n        evalType(\"borderWidth\");\n    }\n\n    set(\"spinner\");\n    if (evalType(\"object\")) {\n        set(\"spinner.show\");\n        evalType(\"bool\");\n\n        set(\"spinner.lines\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.length\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.width\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.radius\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.corners\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj >= 0 && obj <= 1\");\n        }\n\n        set(\"spinner.rotate\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.direction\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj === -1 || obj === 1\");\n        }\n\n        set(\"spinner.color\");\n        evalType(\"color\");\n\n        set(\"spinner.speed\");\n        if (evalType(\"number\")) {\n            evalCond(\"obj > 0\");\n        }\n\n        set(\"spinner.trail\");\n        if (evalType(\"int\")) {\n            evalCond(\"obj >= 0\");\n        }\n\n        set(\"spinner.shadow\");\n        evalType(\"bool\");\n\n        set(\"spinner.hwaccel\");\n        evalType(\"bool\");\n\n        set(\"spinner.position\");\n        if (evalType(\"string\")) {\n            evalCond(\"obj === 'relative' || obj === 'absolute'\");\n        }\n\n        set(\"spinner.top\");\n        evalType(\"size\");\n\n        set(\"spinner.left\");\n        evalType(\"size\");\n    }\n\n    return optionsOk;\n}\n\n/**\n @typedef OPTIONS_OBJECT\n @type {object}\n\n @property {bool} debug - If true debug info will be outputted to the console.\n\n @property {object} interaction - Options regarding user interaction with the graph.\n @property {bool} resize - If true the graph will be resized automatically.\n @property {bool} trackMouse - If true the mouse cursor will track the graph lines.\n @property {bool} zoom - If true zoom is enabled.\n @property {bool} smoothing - If true interactive smoothing input is enabled.\n\n @property {object} title - Options regarding the title.\n @property {string} title.label - The text of the label. Set to \"\" to hide the label.\n @property {bool} title.bold - If true the label font is bold.\n @property {int} title.size - Font height/size in pixels of the text.\n @property {int} title.offsetX - X-axis offset in pixels. Between title and graph vertical side.\n @property {int} title.offsetY - Y-axis offset in pixels. Between title and outer top edge.\n @property {int} title.padding - Padding in pixels. Between title and graph.\n @property {string} title.font - Font family of the text.\n @property {string} title.color - Color of the text.\n @property {string} title.align - Title alignment. [\"left\", \"center\", \"right\"]\n\n @property {object} legend - Options regarding the legend.\n @property {bool} legend.show - If true the legend is shown.\n @property {string} legend.font - Font family of the text.\n @property {int} legend.size - Font size/height in pixels.\n @property {int} legend.offsetX - Y-axis offset in pixels. Between legend and graph vertical side.\n @property {int} legend.offsetY - X-axis offset in pixels. Between legend and graph top.\n @property {int} legend.align -  The legend alignment. [\"left\", \"right\"]\n @property {int} legend.newLine -  If true a new line is made between each data set.\n\n @property {object} highlight - Options regarding highlighting.\n @property {bool} highlight.xMin - X-axis low value. \n @property {int} highlight.xMax - X-axis high value.\n @property {string} highlight.yMin - Y-axis low value.\n @property {int} highlight.yMax - Y-axis high value.\n @property {string} highlight.color - Color of the highlight.\n\n @property {object} zoom - Options regarding default zoom.\n @property {bool} zoom.xMIn - X-axis low value. \n @property {int} zoom.xMax - X-axis high value.\n @property {string} zoom.yMin - Y-axis low value.\n @property {int} zoom.yMax - Y-axis high value.\n\n @property {object} graph - Options regarding the graph curve.\n @property {array<array>} graph.dataX - List of data sets for the X-axis. Can contain typed arrays.\n @property {array<array>} graph.dataY - List of data sets for the Y-axis. Can contain typed arrays.\n @property {array<string>} graph.colors - List of colors for each dataY set.\n @property {array<string>} graph.names - List of names for each dataY set.\n @property {array<string>} graph.dashed - List of dash parameters for each dataY set. true for default or number array for cusatom.\n @property {int} graph.lineWidth - Width in pixels of the stroked line.\n @property {int} graph.markerRadius - Width in pixels of the radius of the marker.\n @property {int} graph.smoothing - Number of samples on each side of the central value for the central moving average algorithm. 0 = disabled.\n @property {int} graph.simplify - Pixel tolerance for the simplification algorithm. 0 = disabled.\n @property {int} graph.simplifyBy - Character of the simplification algorithm. 0 = minMax.\n @property {bool} graph.fill - If true the area under the graph will be filled.\n @property {string} graph.compositeOperation - Context global composit operation.\n\n @property {object} axes - Options regarding the axes.\n\n @property {object} axes.tickMarkers - Options regarding the tick markers.\n @property {bool} axes.tickMarkers.show - If true the tick markers are shown.\n @property {int} axes.tickMarkers.length - Length in pixels of the markers.\n @property {int} axes.tickMarkers.width - Width in pixels of the markers.\n @property {int} axes.tickMarkers.offset - Offset in pixels. Between graph and markers.\n @property {string} axes.tickMarkers.color - Color of the tick markers.\n\n @property {object} axes.tickLabels - Options regarding the tick labels.\n @property {bool} axes.tickLabels.show - If true the tick labels are shown.\n @property {string} axes.tickLabels.color - Color of the text.\n @property {string} axes.tickLabels.font - Font family of the text.\n @property {int} axes.tickLabels.size - Font size/height in pixels of the text.\n @property {int} axes.tickLabels.width - Max width of the labels. Used to calculate ticks.\n @property {int} axes.tickLabels.offset - Offset in pixels. Between graph and markers.\n\n @property {object} axes.labels - Options regarding the axes labels.\n @property {string} axes.labels.color - Color of the text.\n @property {string} axes.labels.font - Font family of the text.\n @property {int} axes.labels.size - Font size/height in pixels of the text.\n @property {int} axes.labels.offset - Offset in pixels. Between outer edge and labels.\n @property {int} axes.labels.padding - Padding in pixels. Between label and graph.\n\n @property {object} axes.x - Options regarding the X-axis.\n @property {bool} axes.x.show - If true the X-axis is shown.\n @property {bool} axes.x.inverted - If true the axis direction is inverted.\n @property {bool} axes.x.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.x.height - Height in pixels of the axis. 0 = automatic size.\n @property {string} axes.x.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.x.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.x.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.x.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.x.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.x.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.x.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.x.grid - Options regarding the X-axis grid.\n @property {int} axes.x.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.x.grid.color - Color of the grid lines.\n\n @property {object} axes.x.bounds - Options regarding the X-axis bounds.\n @property {number} axes.x.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.x.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} axes.y - Options regarding the Y-axis.\n @property {bool} axes.y.show - If true the X-axis is shown.\n @property {bool} axes.y.inverted - If true the axis direction is inverted.\n @property {bool} axes.y.log - If true the values on the axis are logarithmically distributed.\n @property {int} axes.y.width - Width in pixels of the axis. 0 = automatic size.\n @property {string} axes.y.label - Text of the axis label. Set to \"\" to hide the label.\n @property {int} axes.x.numTicks - Number of ticks to use by the default ticker.\n @property {formatterCallback} axes.y.legendValueFormatter - Callback that formats the legend values. Null = default callback.\n @property {formatterCallback} axes.y.tickerValuePreFormatter - Callback that formats the ticker values before ticks are created. \n @property {formatterCallback} axes.y.tickerValuePostFormatter - Callback that formats the ticker values after ticks are created.\n @property {formatterCallback} axes.y.tickerLabelFormatter - Callback that formats the ticker labels. Null = default callback.\n @property {tickerCallback} axes.y.ticker - Callback that creates the ticks. Null = default callback.\n @property {formatterCallback} axes.y.valueFormatter - Callback that formats the axis labels. Null = default callback.\n\n @property {object} axes.y.grid - Options regarding the Y-axis grid.\n @property {int} axes.y.grid.width - Grid line width/thickness in pixels. 0 = no grid.\n @property {string} axes.y.grid.color - Color of the grid lines.\n\n @property {object} axes.y.bounds - Options regarding the Y-axis bounds.\n @property {number} axes.y.bounds.min - Min/lower bounds value. Null = automatic value.\n @property {number} axes.y.bounds.max - Max/upper bounds value. Null = automatic value.\n\n @property {object} border - Options regarding the graph border.\n @property {string} border.style - Border style. solid, dotted...\n @property {string} border.color - Color of the border lines. red, #FF0000, rgb(255,0,0)\n @property {string} border.width - Width/thickness in pixels of the border. 1px, 1px 2px, 1px 2px 3px 4px.\n\n\n */\n\n/**\n * Callback function for formatting values.\n * @callback formatterCallback\n * @param {number} value\n * @returns {string}\n */\n\n/**\n * Callback function for creating ticks.\n * @callback tickerCallback\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{value:number}>}\n */\n\nexport default Options;","// http://spin.js.org/#v2.3.2\r\n!function(a,b){\"object\"==typeof module&&module.exports?module.exports=b():\"function\"==typeof define&&define.amd?define(b):a.Spinner=b()}(this,function(){\"use strict\";function a(a,b){var c,d=document.createElement(a||\"div\");for(c in b)d[c]=b[c];return d}function b(a){for(var b=1,c=arguments.length;c>b;b++)a.appendChild(arguments[b]);return a}function c(a,b,c,d){var e=[\"opacity\",b,~~(100*a),c,d].join(\"-\"),f=.01+c/d*100,g=Math.max(1-(1-a)/b*(100-f),a),h=j.substring(0,j.indexOf(\"Animation\")).toLowerCase(),i=h&&\"-\"+h+\"-\"||\"\";return m[e]||(k.insertRule(\"@\"+i+\"keyframes \"+e+\"{0%{opacity:\"+g+\"}\"+f+\"%{opacity:\"+a+\"}\"+(f+.01)+\"%{opacity:1}\"+(f+b)%100+\"%{opacity:\"+a+\"}100%{opacity:\"+g+\"}}\",k.cssRules.length),m[e]=1),e}function d(a,b){var c,d,e=a.style;if(b=b.charAt(0).toUpperCase()+b.slice(1),void 0!==e[b])return b;for(d=0;d<l.length;d++)if(c=l[d]+b,void 0!==e[c])return c}function e(a,b){for(var c in b)a.style[d(a,c)||c]=b[c];return a}function f(a){for(var b=1;b<arguments.length;b++){var c=arguments[b];for(var d in c)void 0===a[d]&&(a[d]=c[d])}return a}function g(a,b){return\"string\"==typeof a?a:a[b%a.length]}function h(a){this.opts=f(a||{},h.defaults,n)}function i(){function c(b,c){return a(\"<\"+b+' xmlns=\"urn:schemas-microsoft.com:vml\" class=\"spin-vml\">',c)}k.addRule(\".spin-vml\",\"behavior:url(#default#VML)\"),h.prototype.lines=function(a,d){function f(){return e(c(\"group\",{coordsize:k+\" \"+k,coordorigin:-j+\" \"+-j}),{width:k,height:k})}function h(a,h,i){b(m,b(e(f(),{rotation:360/d.lines*a+\"deg\",left:~~h}),b(e(c(\"roundrect\",{arcsize:d.corners}),{width:j,height:d.scale*d.width,left:d.scale*d.radius,top:-d.scale*d.width>>1,filter:i}),c(\"fill\",{color:g(d.color,a),opacity:d.opacity}),c(\"stroke\",{opacity:0}))))}var i,j=d.scale*(d.length+d.width),k=2*d.scale*j,l=-(d.width+d.length)*d.scale*2+\"px\",m=e(f(),{position:\"absolute\",top:l,left:l});if(d.shadow)for(i=1;i<=d.lines;i++)h(i,-2,\"progid:DXImageTransform.Microsoft.Blur(pixelradius=2,makeshadow=1,shadowopacity=.3)\");for(i=1;i<=d.lines;i++)h(i);return b(a,m)},h.prototype.opacity=function(a,b,c,d){var e=a.firstChild;d=d.shadow&&d.lines||0,e&&b+d<e.childNodes.length&&(e=e.childNodes[b+d],e=e&&e.firstChild,e=e&&e.firstChild,e&&(e.opacity=c))}}var j,k,l=[\"webkit\",\"Moz\",\"ms\",\"O\"],m={},n={lines:12,length:7,width:5,radius:10,scale:1,corners:1,color:\"#000\",opacity:.25,rotate:0,direction:1,speed:1,trail:100,fps:20,zIndex:2e9,className:\"spinner\",top:\"50%\",left:\"50%\",shadow:!1,hwaccel:!1,position:\"absolute\"};if(h.defaults={},f(h.prototype,{spin:function(b){this.stop();var c=this,d=c.opts,f=c.el=a(null,{className:d.className});if(e(f,{position:d.position,width:0,zIndex:d.zIndex,left:d.left,top:d.top}),b&&b.insertBefore(f,b.firstChild||null),f.setAttribute(\"role\",\"progressbar\"),c.lines(f,c.opts),!j){var g,h=0,i=(d.lines-1)*(1-d.direction)/2,k=d.fps,l=k/d.speed,m=(1-d.opacity)/(l*d.trail/100),n=l/d.lines;!function o(){h++;for(var a=0;a<d.lines;a++)g=Math.max(1-(h+(d.lines-a)*n)%l*m,d.opacity),c.opacity(f,a*d.direction+i,g,d);c.timeout=c.el&&setTimeout(o,~~(1e3/k))}()}return c},stop:function(){var a=this.el;return a&&(clearTimeout(this.timeout),a.parentNode&&a.parentNode.removeChild(a),this.el=void 0),this},lines:function(d,f){function h(b,c){return e(a(),{position:\"absolute\",width:f.scale*(f.length+f.width)+\"px\",height:f.scale*f.width+\"px\",background:b,boxShadow:c,transformOrigin:\"left\",transform:\"rotate(\"+~~(360/f.lines*k+f.rotate)+\"deg) translate(\"+f.scale*f.radius+\"px,0)\",borderRadius:(f.corners*f.scale*f.width>>1)+\"px\"})}for(var i,k=0,l=(f.lines-1)*(1-f.direction)/2;k<f.lines;k++)i=e(a(),{position:\"absolute\",top:1+~(f.scale*f.width/2)+\"px\",transform:f.hwaccel?\"translate3d(0,0,0)\":\"\",opacity:f.opacity,animation:j&&c(f.opacity,f.trail,l+k*f.direction,f.lines)+\" \"+1/f.speed+\"s linear infinite\"}),f.shadow&&b(i,e(h(\"#000\",\"0 0 4px #000\"),{top:\"2px\"})),b(d,b(i,h(g(f.color,k),\"0 0 1px rgba(0,0,0,.1)\")));return d},opacity:function(a,b,c){b<a.childNodes.length&&(a.childNodes[b].style.opacity=c)}}),\"undefined\"!=typeof document){k=function(){var c=a(\"style\",{type:\"text/css\"});return b(document.getElementsByTagName(\"head\")[0],c),c.sheet||c.styleSheet}();var o=e(a(\"group\"),{behavior:\"url(#default#VML)\"});!d(o,\"transform\")&&o.adj?i():j=d(o,\"animation\")}return h});","/** \n * The Canvas class is a wrapper for the HTML5 canvas 2D context.\n * Used to automatically get pixel perfect canvas size \n * and to make it easier to draw simple elements.\n */\n\n/**\n * Create a new canvas. Canvas is automatically scaled to be pixel perfect with screen.\n * @public\n * @constructor\n * @param {dom} container - Container dom.\n * @param {bool} dontScale - If True the scale transformation wont be set for this canvas. Scaling needs to be done manually.\n * @returns {Canvas}\n */\nfunction Canvas(container, id, dontScale) {\n    this._canvas = document.createElement(\"canvas\");\n    if (id) {\n        this._canvas.id = id;\n    }\n    container.append(this._canvas);\n    this._context = this._canvas.getContext(\"2d\");\n\n    this._dontScale = dontScale;\n\n    this._canvas.style.position = \"absolute\";\n    this._canvas.style.margin = 0;\n    this._canvas.style.padding = 0;\n    this._canvas.style[\"box-sizing\"] = \"border-box\";\n\n    //Set default position.\n    this.setPosition(0, 0);\n    //Fill parent div is default size.\n    this.setSize(\"100%\", \"100%\");\n}\n\n/**\n * Set a new parent for the canvas. Leave empty to only remove current parent.\n * @public\n * @param {dom} container - Container dom.\n */\nCanvas.prototype.setParent = function (container) {\n    this._canvas.remove();\n    if (container) {\n        container.append(this._canvas);\n    }\n};\n\nCanvas.prototype.putImageData = function (data, x, y, offsetX, offsetY) {\n    this._context.putImageData(data, x * this._ratio + offsetX, y * this._ratio + offsetY);\n};\n\n/**\n * Get the html5 canvas.\n * @public\n * @returns {canvas}\n */\nCanvas.prototype.getCanvas = function () {\n    return this._canvas;\n};\n\n/**\n * Get the html5 2D context. Used when performance and less function calls are needed.\n * @public\n * @returns {context}\n */\nCanvas.prototype.getContext = function () {\n    return this._context;\n};\n\n/**\n * Get the x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getX = function () {\n    return this._x;\n};\n\n/**\n * Get the y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getY = function () {\n    return this._y;\n};\n\n/**\n * Get the content x-coordinate relative to the canvas parent.\n * @public\n * @returns {int} X-coordinate in pixels.\n */\nCanvas.prototype.getContentX = function () {\n    return this._contentX;\n};\n\n/**\n * Get the content y-coordinate relative to the canvas parent.\n * @public\n * @returns {int} Y-coordinate in pixels.\n */\nCanvas.prototype.getContentY = function () {\n    return this._contentY;\n};\n\n/**\n * Get the canvas width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getWidth = function () {\n    return this._canvas.offsetWidth;\n};\n\n/**\n * Get the canvas height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getHeight = function () {\n    return this._canvas.offsetHeight;\n};\n\n/**\n * Get the canvas content width.\n * @public\n * @returns {int} - Width in pixels.\n */\nCanvas.prototype.getContentWidth = function () {\n    return this._canvas.clientWidth;\n};\n\n/**\n * Get the canvas content height.\n * @public\n * @returns {int} - Height in pixels.\n */\nCanvas.prototype.getContentHeight = function () {\n    return this._canvas.clientHeight;\n};\n\n/**\n * Get the content X-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetX = function () {\n    return this._contentOffsetX;\n};\n\n/**\n * Get the content Y-axis offset from the canvas edge. Border, padding etc.\n * @returns {Canvas._contentOffsetX}\n */\nCanvas.prototype.getContentOffsetY = function () {\n    return this._contentOffsetY;\n};\n\n\n/**\n * Get text with in pixels.\n * @public\n * @param {string} text - Text to measure.\n * @param {fontString} font - Font to use.\n * @returns {int} Width in pixels.\n */\nCanvas.prototype.getTextWidth = function (text, font) {\n    if (font) {\n        this._context.font = font;\n    }\n    return this._context.measureText(text).width;\n};\n\n/**\n * Clear canvas.\n * @public\n */\nCanvas.prototype.clear = function () {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(0, 0, this.getContentWidth(), this.getContentHeight());\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(0, 0, this.getContentWidth() * this._ratio, this.getContentHeight() * this._ratio);\n    }\n};\n\n/**\n * Clear area.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.clearRectangle = function (x, y, width, height) {\n    //Scaling is done automatically.\n    if (!this._dontScale) {\n        this._context.clearRect(x, y, width, height);\n    }\n    //Do scaling manually.\n    else {\n        this._context.clearRect(x * this._ratio, y * this._ratio, width * this._ratio, height * this._ratio);\n    }\n};\n\n/**\n * Set z-index.\n * @public\n * @param {int} zIndex - The new Z-index.\n */\nCanvas.prototype.setZIndex = function (zIndex) {\n    this._canvas.style[\"z-index\"] = zIndex;\n};\n\n/**\n * Set any context member.\n * @public\n * @param {string} member - Member name.\n * @param {type} value - Member value.\n */\nCanvas.prototype.set = function (member, value) {\n    this._context[member] = value;\n};\n\n/**\n * Set canvas border parameters.\n * @param {string} style\n * @param {string} color\n * @param {string} width\n */\nCanvas.prototype.setBorder = function (style, color, width) {\n    this._canvas.style.borderStyle = style;\n    this._canvas.style.borderColor = color;\n    this._canvas.style.borderWidth = width;\n    this._calculateContentPosition();\n};\n\n/**\n * Get any context member.\n * @public\n * @param {string} member - Member name.\n * @returns {type}\n */\nCanvas.prototype.get = function (member) {\n    return this._context[member];\n};\n\n/**\n * Get scale ratio.\n * @public\n * @returns {number}\n */\nCanvas.prototype.getRatio = function () {\n    return this._ratio;\n};\n\n/**\n * Rotate the canvas.\n * @public\n * @param {number} rotateDegrees - Number of degrees to rotate. Positivenumbers = clockwise.\n */\nCanvas.prototype.rotate = function (rotateDegrees) {\n    this._context.rotate(rotateDegrees * Math.PI / 180);\n};\n\n/**\n * Set position of canvas relative to it's parent.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n */\nCanvas.prototype.setPosition = function (x, y, alignRight, valignBottom) {\n    this._x = x;\n    this._y = y;\n    if (alignRight) {\n        this._canvas.style.left = \"\";\n        this._canvas.style.right = x + \"px\";\n    }\n    else {\n        this._canvas.style.left = x + \"px\";\n        this._canvas.style.right = \"\";\n    }\n    if (valignBottom) {\n        this._canvas.style.top = \"\";\n        this._canvas.style.bottom = y + \"px\";\n    }\n    else {\n        this._canvas.style.top = y + \"px\";\n        this._canvas.style.bottom = \"\";\n    }\n    this._calculateContentPosition();\n};\n\n/**\n * Set size of canvas. \n * @public\n * @param {int} width - Width in pixels. \n * @param {int} height - Height in pixels.\n */\nCanvas.prototype.setSize = function (width, height) {\n    if (width !== undefined) {\n        if (typeof width === \"number\") {\n            width = width + \"px\";\n        }\n        this._canvas.style.width = width;\n    }\n    if (height !== undefined) {\n        if (typeof height === \"number\") {\n            height = height + \"px\";\n        }\n        this._canvas.style.height = height;\n    }\n    this.resize();\n};\n\n/**\n * Resize canvas to match the width and height. Automatically scales to be pixel perfect.\n * @public\n */\nCanvas.prototype.resize = function () {\n    //Calculate pixel ratio.\n    const dpr = window.devicePixelRatio || 1;\n    const bsr = this._context.webkitBackingStorePixelRatio ||\n        this._context.mozBackingStorePixelRatio ||\n        this._context.msBackingStorePixelRatio ||\n        this._context.oBackingStorePixelRatio ||\n        this._context.backingStorePixelRatio || 1;\n    this._ratio = dpr / bsr;\n\n    //Update canvas.\n    this._canvas.width = this.getContentWidth() * this._ratio;\n    this._canvas.height = this.getContentHeight() * this._ratio;\n\n    //Check the dont scale parameter before scaling. Scaling is a time consuming process and might not be desired.\n    if (!this._dontScale) {\n        this._context.scale(this._ratio, this._ratio);\n    }\n};\n\n/**\n * Draw a stroke/line rectangle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.strokeRectangle = function (x, y, width, height, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    //Line width build in both direction. Compensate coordinates.\n    x += this._context.lineWidth / 2;\n    y += this._context.lineWidth / 2;\n    width -= this._context.lineWidth;\n    height -= this._context.lineWidth;\n    this._context.strokeRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 1 coordinate.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle = function (x, y, width, height, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x, y, width, height);\n};\n\n/**\n * Draw a filled rectangle using 2 coordinates.\n * @public\n * @param {int} x1 - First X-axis pixel.\n * @param {int} y1 - First Y-axis pixel.\n * @param {int} x2 - Second X-axis pixel.\n * @param {int} y2 - Second Y-axis pixel.\n * @param {string} color - Color of filled rectangle.\n */\nCanvas.prototype.fillRectangle2 = function (x1, y1, x2, y2, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.fillRect(x1, y1, x2 - x1, y2 - y1);\n};\n\n/**\n * Draw a stroked circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n * @param {int} width - Width of stroked line.\n */\nCanvas.prototype.strokeCircle = function (x, y, radius, color, width) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (width) {\n        this._context.lineWidth = width;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.stroke();\n};\n\n/**\n * Draw a filled circle.\n * @public\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} radius - Radius in pixels.\n * @param {string} color - Color of stroked line..\n */\nCanvas.prototype.fillCircle = function (x, y, radius, color) {\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    this._context.beginPath();\n    this._context.arc(x, y, radius, 0, 2 * Math.PI, false);\n    this._context.fill();\n};\n\n/**\n * Draw a line.\n * @public\n * @param {int} x1 - First x-coordinate in pixels.\n * @param {int} y1 - First y-coordinate in pixels.\n * @param {int} x2 - Second x-coordinate in pixels.\n * @param {int} y2 - Second y-coordinate in pixels.\n * @param {int} lineWidth - Stroked line width in pixels.\n * @param {string} color - Color of stroked line.\n */\nCanvas.prototype.line = function (x1, y1, x2, y2, lineWidth, color) {\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    this._context.beginPath();\n    this._context.moveTo(x1, y1);\n    this._context.lineTo(x2, y2);\n    this._context.stroke();\n};\n\n/**\n * Draw filled text.\n * @public\n * @param {string} text - Text to draw.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {string} font - Font to use.\n * @param {string} color - Color to use.\n * @param {string} align - Alignment ot use.\n * @param {string} baseline - Baseline to use.\n * @param {number} rotate - Rotate text number of degrees.\n */\nCanvas.prototype.text = function (text, x, y, font, color, align, baseline, rotate) {\n    if (font) {\n        this._context.font = font;\n    }\n    if (color) {\n        this._context.fillStyle = color;\n    }\n    if (align) {\n        this._context.textAlign = align;\n    }\n    if (baseline) {\n        this._context.textBaseline = baseline;\n    }\n    if (rotate) {\n        this._context.save();\n        this._context.translate(x, y);\n        this._context.rotate(rotate * Math.PI / 180);\n        this._context.fillText(text, 0, 0);\n        this._context.restore();\n    }\n    else {\n        this._context.fillText(text, x, y);\n    }\n};\n\n/**\n * Plot graph curve.\n * @public\n * @param {array} array - Input data. [[x, y], [x, y]]\n * @param {string} color - Color of stroked line.\n * @param {int} lineWidth - Width in pixels of stroked line.\n */\nCanvas.prototype.graph = function (array, color, lineWidth) {\n    if (color) {\n        this._context.strokeStyle = color;\n    }\n    if (lineWidth) {\n        this._context.lineWidth = lineWidth;\n    }\n    this._context.beginPath();\n    this._context.moveTo(array[0][0], array[0][1]);\n    for (let i = 1; i < array.length; ++i) {\n        this._context.lineTo(array[i][0], array[0][1]);\n    }\n    this._context.stroke();\n};\n\n/**\n * Fill entire canvas with the given color.\n * @public\n * @param {string} color - Color to use.\n */\nCanvas.prototype.fill = function (color) {\n    this.fillRectangle(0, 0, this.getContentWidth(), this.getContentHeight(), color);\n};\n\nCanvas.prototype.disableMouseInteraction = function () {\n    this._canvas.style[\"pointer-events\"] = \"none\";\n};\n\n/**\n * Calculate content X and Y.\n * @private\n */\nCanvas.prototype._calculateContentPosition = function () {\n    const compStyle = getComputedStyle(this._canvas);\n    const ratio = this._ratio !== undefined ? this._ratio : 1;\n    this._contentOffsetX = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-left-width\").match(/\\d+/)));\n    this._contentOffsetY = Math.round(ratio * parseFloat(compStyle.getPropertyValue(\"border-top-width\").match(/\\d+/)));\n    this._contentX = this._x + this._contentOffsetX;\n    this._contentY = this._y + this._contentOffsetY;\n};\n\nexport default Canvas;","/** \n * Static functions.\n */\n\nconst Static = {};\n\n/**\n * Create dummy test data.\n * @public\n * @static\n * @param {int} size - Number of values to create.\n * @returns {array}\n */\nStatic.createDummyData = function (size) {\n    let seed = 3;\n    function random() {\n        seed = Math.sin(seed) * 10000;\n        return seed - Math.floor(seed);\n    }\n    const data1 = new Float32Array(size);\n    const data2 = new Float32Array(size);\n    const mult = Math.PI / 100;\n    for (let i = 0; i < size; ++i) {\n        data1[i] = Math.sin(i * mult) * random();\n        data2[i] = Math.cos(i * mult) * random();\n    }\n    return [data1, data2];\n};\n\n/**\n * Binary search. Get index for given value.\n * @private\n * @static\n * @param {callback} dataCallback - Callback to get value for given index.\n * @param {type} size - Size of data set.\n * @param {type} value - Value to find\n * @returns {object} If found: {found: n}. Else: {min, max} where min > value index < max.\n */\nStatic.binarySearch = function (dataCallback, size, value) {\n    let min = 0;\n    let max = size - 1;\n    while (min <= max) {\n        const mid = Math.floor((min + max) / 2);\n        //Value is smaller than mid.\n        if (value < dataCallback(mid)) {\n            max = mid - 1;\n        }\n        //Value is larger than mid.\n        else if (value > dataCallback(mid)) {\n            min = mid + 1;\n        }\n        //Found value.\n        else {\n            return { found: mid };\n        }\n    }\n    min = Math.min(min, max);\n    max = Math.max(min, max, 0);\n    //Value is larger than max index. Increment max.\n    if (value > dataCallback(max)) {\n        ++max;\n    }\n    //Value is smaller than min index. Decrement min.\n    else if (value < dataCallback(min)) {\n        --min;\n    }\n    return {\n        min: Math.max(min, 0),\n        max: Math.min(max, size - 1)\n    };\n};\n\n/**\n * Get text width in pixels.\n * @public\n * @param {string} text - Text to meassure.\n * @param {string} font - Font to use.\n * @returns {int} - Width in pixels.\n */\nconst context = document.createElement(\"canvas\").getContext(\"2d\");\nStatic.getTextWidth = function (text, font) {\n    if (font) {\n        context.font = font;\n    }\n    return context.measureText(text).width;\n};\n\n/**\n * Round the given number to the given precision.\n * @public\n * @param {number} value\n * @param {int} decimals - Number of decimals.\n * @returns {number}\n */\nStatic.round = function (value, decimals) {\n    if (!decimals) {\n        return Math.round(value);\n    }\n    else {\n        const multiplier = Math.pow(10, decimals);\n        return (Math.round(value * multiplier) / multiplier);\n    }\n};\n\nStatic.log10 = (x) => Math.log(x) / Math.LN10;\n\nexport default Static;","import Static from \"./Static\";\nimport Is from \"./Is\";\n\nif (!Math.log10) {\n    Math.log10 = Static.log10;\n}\n\n/** \n * The Axis class is a single axis to the Graph class.\n */\n\n/**\n * Create new graph axis.\n * @public\n * @constructor\n * @param {Options} options - GraphOptions object.\n * @param {Canvas} graphCanvas - Canvas instance for the graph.\n * @param {string} orientation - X or Y axis.\n * @returns {Axis}\n */\nfunction Axis(options, graphCanvas, axis) {\n    if (axis.toLowerCase() === \"x\") {\n        this._isX = true;\n        this._axis = options.axes.x;\n        this._getSize = graphCanvas.getContentWidth.bind(graphCanvas);\n    }\n    else if (axis.toLowerCase() === \"y\") {\n        this._isX = false;\n        this._axis = options.axes.y;\n        this._getSize = graphCanvas.getContentHeight.bind(graphCanvas);\n    }\n    else {\n        console.error(\"owp.graph ERROR: Axis: \\\"\" + axis + \"\\\" is neither X or Y.\");\n        return;\n    }\n    this._options = options;\n    this._getRatio = graphCanvas.getRatio.bind(graphCanvas);\n}\n\n/**\n * Returns true if all bounds are set.\n * @public\n * @returns {bool}\n */\nAxis.prototype.hasBounds = function () {\n    return !Is.isNull(this.getMin()) && !Is.isNull(this.getMax());\n};\n\n/**\n * True of this axis is logarithmic.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isLog = function () {\n    return this._axis.log;\n};\n\n/**\n * True of this axis is inverted.\n * @public\n * @returns {bool}\n */\nAxis.prototype.isInverted = function () {\n    return this._axis.inverted;\n};\n\n/**\n * Get min bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMin = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMin)) {\n        return this._overrideMin;\n    }\n    return this._min;\n};\n\n/**\n * Get max bounds.\n * @public\n * @returns {number}\n */\nAxis.prototype.getMax = function () {\n    //Always prioritize override bounds.\n    if (!Is.isNull(this._overrideMax)) {\n        return this._overrideMax;\n    }\n    return this._max;\n};\n\n/**\n * Get the axis label. Uses the options value formatter if set.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabel = function () {\n    return this._axis.label;\n};\n\n/**\n * Get the font(family and size) for the tick labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getTickLabelsFont = function () {\n    return this._options.axes.tickLabels.size + \"px \" + this._options.axes.tickLabels.font;\n};\n\n/**\n * Get the font(family and size) for the axes labels.\n * @public\n * @returns {string}\n */\nAxis.prototype.getAxisLabelFont = function () {\n    return this._options.axes.labels.size + \"px \" + this._options.axes.labels.font;\n};\n\n/**\n * Get bounds label width in pixels. Uses the options value formatter if set.\n * @public\n * @returns {int}\n */\nAxis.prototype.getBoundLabelWidth = function (minOrMax, pad) {\n    let bound = minOrMax === \"min\" ? this.getMin() : this.getMax();\n    if (pad) {\n        bound = Static.round(bound + 0.111111111111111, 3);\n    }\n    return Static.getTextWidth(bound, this.getTickLabelsFont());\n};\n\n/**\n * Get the ticks array.\n * @public\n * @returns {array}\n */\nAxis.prototype.getTicks = function () {\n    return this._ticks;\n};\n\n/**\n * Return true if this axis has overridden bounds.\n * @public\n */\nAxis.prototype.hasZoom = function () {\n    return !Is.isNull(this._overrideMin) || !Is.isNull(this._overrideMax);\n};\n\n/**\n * Override bounds. Temporary override user given bounds. \n * @public\n */\nAxis.prototype.zoom = function (min, max) {\n    this._overrideMin = min;\n    this._overrideMax = max;\n    if (!Is.isNull(this.getMin()) || !Is.isNull(this.getMax())) {\n        this.calculateTicks();\n    }\n};\n\n/**\n * Remove overridden bounds.\n * @public\n */\nAxis.prototype.clearZoom = function () {\n    this.zoom();\n};\n\n/**\n * Calculates bounds. Uses user given option bounds first and calculates mising from data set.\n * @public\n */\nAxis.prototype.calculateBounds = function () {\n    let newMin, newMax;\n\n    //Prioritize user given bounds.\n    if (!Is.isNull(this._axis.bounds.min)) {\n        newMin = this._axis.bounds.min;\n    }\n    if (!Is.isNull(this._axis.bounds.max)) {\n        newMax = this._axis.bounds.max;\n    }\n\n    //Both bounds are not set by the user. Calculate missing.\n    if (Is.isNull(newMin) || Is.isNull(newMax)) {\n        let calcBounds;\n        if (this._isX) {\n            calcBounds = this._calculateXBounds();\n        }\n        else {\n            calcBounds = this._calculateYBounds();\n        }\n\n        if (calcBounds) {\n            //Use both calculated bounds.\n            if (Is.isNull(newMin) && Is.isNull(newMax)) {\n                newMin = calcBounds.min;\n                newMax = calcBounds.max;\n                //Both values are calculated. Move both.\n                if (newMin === newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move both.\");\n                    --newMin;\n                    ++newMax;\n                }\n            }\n            //Use only calculated min.\n            else if (Is.isNull(newMin)) {\n                newMin = calcBounds.min;\n                //Only move the calculated value.\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move min.\");\n                    newMin = newMax - 1;\n                }\n            }\n            //use only calculated max.\n            else if (Is.isNull(newMax)) {\n                newMax = calcBounds.max;\n                if (newMin >= newMax) {\n                    console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". bounds.min and bounds.max are equal. Move max.\");\n                    newMax = newMin + 1;\n                }\n            }\n        }\n    }\n\n    if (!Is.isNull(newMin) && !Is.isNull(newMax)) {\n        if (this._axis.log && newMin <= 0) {\n            console.error(\"owp.graph ERROR: Axis \" + (this._isX ? \"X\" : \"Y\") + \". When axis is logarithmic all bounds must be greater than zero.\");\n            newMin = newMax = undefined;\n        }\n    }\n    this._min = newMin;\n    this._max = newMax;\n};\n\n/**\n * Calculate graph axes ticks.\n * @public\n */\nAxis.prototype.calculateTicks = function () {\n    let ticks;\n    const labelSize = this._isX ? this._options.axes.tickLabels.width : this._options.axes.tickLabels.size;\n    //Create ticks with user given options ticker.\n    if (this._axis.ticker) {\n        ticks = this._axis.ticker(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n    //Create ticks with the default ticker.\n    else {\n        ticks = this._getDefaultTicks(this._axis.log, this.getMin(), this.getMax(), this._getSize(), labelSize);\n    }\n\n    if (!ticks.length) {\n        console.warn(\"owp.graph WARNING: Axis \" + (this._isX ? \"X\" : \"Y\") + \". Ticks list is empty.\");\n    }\n\n    //Update ticks with pixel coordinates.\n    for (let i = 0; i < ticks.length; ++i) {\n        ticks[i].coordinate = this.valueToPixel(ticks[i].value);\n    }\n    //Show tick markers.\n    if (this._options.axes.tickMarkers.show) {\n        ticks.markers = {\n            offset: this._options.axes.tickMarkers.offset,\n            length: this._options.axes.tickMarkers.length,\n            width: this._options.axes.tickMarkers.width,\n            color: this._options.axes.tickMarkers.color\n        };\n    }\n    //Show tick labels.\n    if (this._options.axes.tickLabels.show) {\n        ticks.labels = {\n            offset: this._options.axes.tickLabels.offset,\n            size: this._options.axes.tickLabels.size,\n            color: this._options.axes.tickLabels.color,\n            font: this.getTickLabelsFont(),\n            width: []\n        };\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks.labels.width[i] = Static.getTextWidth(ticks[i].label, this.getTickLabelsFont());\n        }\n    }\n    //Show grid.\n    if (this._axis.grid.width) {\n        ticks.grid = {\n            width: this._axis.grid.width,\n            color: this._axis.grid.color\n        };\n    }\n    this._ticks = ticks;\n};\n\n/**\n * Get value from given pixel coordinate.\n * @public\n * @returns {number}\n */\nAxis.prototype.pixelToValue = function (pixel) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMin() / this.getMax()) + log10(this.getMax()));\n        }\n        //Logarithmic normal orientation.\n        else {\n            return Math.pow(10, pixel / this._getSize() * log10(this.getMax() / this.getMin()) + log10(this.getMin()));\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return pixel / this._getSize() * (this.getMin() - this.getMax()) + this.getMax();\n        }\n        //Linear normal orientation.\n        else {\n            return pixel / this._getSize() * (this.getMax() - this.getMin()) + this.getMin();\n        }\n    }\n};\n\n/**\n * Get pixel coordinate from given value.\n * @public\n * @returns {number}\n */\nAxis.prototype.valueToPixel = function (value) {\n    //Logarithmic\n    if (this._axis.log) {\n        //Logarithmic inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return log10(value / this.getMax()) / log10(this.getMin() / this.getMax()) * this._getSize();\n        }\n        //Logarithmic normal orientation.\n        else {\n            return log10(value / this.getMin()) / log10(this.getMax() / this.getMin()) * this._getSize();\n        }\n    }\n    //Linear\n    else {\n        //Linear inverted orientation.\n        if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n            return (value - this.getMax()) / (this.getMin() - this.getMax()) * this._getSize();\n        }\n        //Linear normal orientation.\n        else {\n            return (value - this.getMin()) / (this.getMax() - this.getMin()) * this._getSize();\n        }\n    }\n};\n\n/**\n * Format the given value. Uses value formatter in options if available.\n * @public\n * @param {number} value\n * @returns {string}\n */\nAxis.prototype.formatLegendValue = function (value) {\n    //Use user given formatter.\n    if (this._axis.legendValueFormatter) {\n        return this._axis.legendValueFormatter(value, defaultLegendValueFormatter);\n    }\n    //Use default value formatter.\n    else {\n        return defaultLegendValueFormatter(value);\n    }\n};\n\n/**\n * Callback function for getting pixel coordinate from a given value.\n * Much faster than asking this class valueToPixel function for each value.\n * Needs to be required if window changes size or new bounds are set.\n * Safest to aquire for each render pass.\n * Calculates scaling ratio into the pixel coordinate. i.e. scaling needs to be disabled on the canvas.\n * @callback Axis~valueToPixelCallback\n * @param {int} index\n * @returns {number}\n */\n\n/**\n * Get a callback to calculate the pixel coordinate for a given value.\n * Used by the graph render function to improve performance.\n * @public\n * @returns {Axis~valueToPixelCallback}\n */\nAxis.prototype.getValueToPixelCallback = function () {\n    let num, denom, numVar, numOp, logFunc;\n    const size = this._getSize() * this._getRatio();\n\n    //Inverted X or normal Y.\n    if (this._isX ? this._axis.inverted : !this._axis.inverted) {\n        numVar = this.getMax();\n        denom = this._axis.log ? log10(this.getMin() / this.getMax()) : this.getMin() - this.getMax();\n    }\n    //Normal X or inverted Y.\n    else {\n        numVar = this.getMin();\n        denom = this._axis.log ? log10(this.getMax() / this.getMin()) : this.getMax() - this.getMin();\n    }\n\n    //Axis is logarithmic.\n    if (this._axis.log) {\n        numOp = \"/\";\n        logFunc = \"Math.log10\";\n    }\n    //Axis is linear.\n    else {\n        numOp = \"-\";\n        logFunc = \"\";\n    }\n\n    //Only do the numerator operation on the numerator if the variable is not zero.\n    if (numVar) {\n        num = logFunc + \"(value \" + numOp + \" \" + numVar + \")\";\n    }\n    else {\n        num = logFunc + \"(value)\";\n    }\n\n    //Only do the fraction if the denominator is not 1.\n    if (denom !== 1) {\n        denom = \"/ \" + denom;\n    }\n    else {\n        denom = \"\";\n    }\n\n    return new Function(\"value\", \"return \" + num + \" \" + denom + \" * \" + size);\n};\n\n/**\n * Calculate X-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateXBounds = function () {\n    //Calculate missing X-axis bounds from dataX values.\n    if (this._options.graph.dataX.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds not set, but X-data is. Calculate X-bounds from X-data values.\");\n        }\n        let min = 4294967296;\n        let max = -4294967296;\n        for (let i = 0; i < this._options.graph.dataX.length; ++i) {\n            const data = this._options.graph.dataX[i];\n            min = Math.min(min, data[0], data[data.length - 1]);\n            max = Math.max(max, data[0], data[data.length - 1]);\n        }\n        return { min: min, max: max };\n    }\n    //Calculate X-axis bounds from dataY length.\n    else if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: X-bounds and X-data not set, but Y-data is. Calculate X-bounds from Y-data length.\");\n        }\n        let max = 0;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            max = Math.max(max, this._options.graph.dataY[i].length);\n        }\n        return { min: 1, max };\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: X-bounds, X-data and Y-data not set. Can't calculate X-bounds.\");\n        return;\n    }\n};\n\n/**\n * Calculate Y-axis bounds.\n * @private\n * @returns {object} {int min, int max}\n */\nAxis.prototype._calculateYBounds = function () {\n    //Calculate Y-axis bounds from dataY values.\n    if (this._options.graph.dataY.length) {\n        if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: Y-bounds not set, but Y-data is. Calculate Y-bounds from Y-data values.\");\n        }\n        let min = null;\n        let max = null;\n        for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n            const data = this._options.graph.dataY[i];\n            if (data.length && min === null) {\n                min = 4294967296;\n                max = -4294967296;\n            }\n            for (let j = 0; j < data.length; ++j) {\n                min = Math.min(min, data[j]);\n                max = Math.max(max, data[j]);\n            }\n        }\n        return min !== null\n            ? { min, max }\n            : null;\n    }\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: Y-bounds and Y-data not set. Can't calculate Y-bounds.\");\n        return;\n    }\n};\n\n/**\n * Default get ticks funciton. Used when no ticker is set in options.\n * @private\n * @param {bool} isLog - True if the values are going to be logarithmically distributed.\n * @param {number} minValue - Min/lower bounds value.\n * @param {number} maxValue - Max/upper bounds value.\n * @param {int} graphSize - Size(width or height) of graph in pixels.\n * @param {int} labelSize - Size(width or height) of tick labels in pixels.\n * @returns {array<{number, string}>}\n */\nAxis.prototype._getDefaultTicks = function (isLog, minValue, maxValue, graphSize, labelSize) {\n    //Pre-format ticker values.\n    if (this._axis.tickerValuePreFormatter) {\n        minValue = this._axis.tickerValuePreFormatter(minValue);\n        maxValue = this._axis.tickerValuePreFormatter(maxValue);\n    }\n\n    let ticks;\n\n    //If the range is to small even a log axis will get linear values.\n    if (isLog && maxValue - minValue >= 4 * minValue) {\n        ticks = getDefaultLogTicks(minValue, maxValue);\n    }\n    else {\n        //Max number of ticks.\n        const numTicks = this._axis.numTicks || (graphSize / (labelSize * 1.5));\n        ticks = getDefaultLinTicks(minValue, maxValue, numTicks);\n    }\n\n    //Post-format ticker values.\n    if (this._axis.tickerValuePostFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].value = this._axis.tickerValuePostFormatter(ticks[i].value);\n        }\n    }\n\n    //Add user formatted labels.\n    if (this._axis.tickerLabelFormatter) {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = this._axis.tickerLabelFormatter(ticks[i].value, defaultTickerLabelFormatter);\n        }\n    }\n    //Add default formatted labels.\n    else {\n        for (let i = 0; i < ticks.length; ++i) {\n            ticks[i].label = defaultTickerLabelFormatter(ticks[i].value);\n        }\n    }\n\n    return ticks;\n};\n\nfunction defaultLegendValueFormatter(value) {\n    return Static.round(value, 5);\n}\n\nfunction defaultTickerLabelFormatter(value) {\n    if (value < 0) {\n        return '-' + defaultTickerLabelFormatter(-value);\n    }\n    let ranges = [];\n    if (value >= 1e3) {\n        ranges = [\n            { divider: 1e24, suffix: 'Y' },\n            { divider: 1e21, suffix: 'Z' },\n            { divider: 1e18, suffix: 'E' },\n            { divider: 1e15, suffix: 'P' },\n            { divider: 1e12, suffix: 'T' },\n            { divider: 1e9, suffix: 'G' },\n            { divider: 1e6, suffix: 'M' },\n            { divider: 1e3, suffix: 'k' }\n        ];\n    }\n    else if (value < 1e-2) {\n        ranges = [\n            { divider: 1e-3, suffix: 'm' },\n            { divider: 1e-6, suffix: 'µ' },\n            { divider: 1e-9, suffix: 'n' },\n            { divider: 1e-12, suffix: 'p' },\n            { divider: 1e-15, suffix: 'f' },\n            { divider: 1e-18, suffix: 'a' },\n            { divider: 1e-21, suffix: 'z' },\n            { divider: 1e-24, suffix: 'y' }\n        ];\n    }\n    for (let i = 0; i < ranges.length; i++) {\n        if (value >= ranges[i].divider) {\n            return Static.round(value / ranges[i].divider, 3).toString() + ranges[i].suffix;\n        }\n    }\n    return Static.round(value, 3).toString();\n}\n\n//Get linear ticks.\nfunction getDefaultLinTicks(minValue, maxValue, numTicks) {\n    //Value range\n    const range = maxValue - minValue;\n    //Get ticker value step.\n    const step = getStepValue(false, range / numTicks);\n\n    //Calculate start pos.\n    let start = minValue;\n    //Make sure start is on a step position.\n    const diff = modf(start, step);\n    if (diff > 0) {\n        start += step - diff;\n    }\n    if (diff < 0) {\n        start -= diff;\n    }\n\n    //Start and end value is the same. Just return the one value.\n    if (secureFloat(start) === secureFloat(maxValue)) {\n        return [{ value: secureFloat(start) }];\n    }\n\n    const ticks = [];\n    for (; start <= maxValue; start += step) {\n        const value = secureFloat(start);\n        ticks.push({ value });\n        //Reached infinite loop.\n        if (start === value + step) {\n            break;\n        }\n        start = value;\n    }\n    return ticks;\n}\n\n//Get logarithmic ticks.\nfunction getDefaultLogTicks(minValue, maxValue) {\n    const ticks = [];\n    let step = getStepValue(true, minValue);\n    //Make sure we always start at or before min value to get all the low end ticks.\n    if (step > minValue) {\n        step /= 10;\n    }\n    for (; ;) {\n        for (let i = 1; i < 10; ++i) {\n            const value = i * step;\n            if (value > maxValue) {\n                return ticks;\n            }\n            if (value >= minValue) {\n                ticks.push({ value: secureFloat(value) });\n            }\n        }\n        step *= 10;\n    }\n}\n\n//For a given value calculate the best step value.\nfunction getStepValue(isLog, value) {\n    const mult = isLog ? [1, 10] : [1, 2, 5, 10];\n    const exp = Math.pow(10, Math.floor(log10(value)));\n    for (let i = 0; i < mult.length; ++i) {\n        const newValue = mult[i] * exp;\n        if (newValue >= value) {\n            return newValue;\n        }\n    }\n}\n\nexport default Axis;\n\n/**\n * Secure float precision.\n * @public\n * @param {number} val\n * @returns {number}\n */\nfunction secureFloat(val) {\n    return parseFloat(val.toPrecision(15));\n}\n\n/**\n * Modulus for float.\n * @public\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction modf(a, b) {\n    return a - Math.round(a / b) * b;\n}\n\nconst log10 = Static.log10;","function Input(attr) {\n    const input = document.createElement(\"input\");\n    if (attr) {\n        for (let i in attr) {\n            input.setAttribute(i, attr[i]);\n        }\n    }\n\n    function callback() {\n        const value = parseInt(input.value);\n        if (isNaN(value) || value < 0) {\n            input.value = 0;\n        }\n        //Trigger custom enter event.\n        input.dispatchEvent(new Event(\"done\"));\n    }\n\n    //Loose focus or enter fires the format callback.\n    input.addEventListener(\"change\", callback);\n\n    //Enter key pressed.\n    input.addEventListener(\"keypress\", e => {\n        if (e.which === 13) {\n            callback();\n        }\n    });\n\n    return input;\n}\n\nexport default Input;","import Static from \"./Static\";\n\nconst Callbacks = {};\n\nCallbacks.getRenderCallback = function (options, canvas, axes) {\n    //Get value to pixel functions.\n    const valueToPixelX = axes.x.getValueToPixelCallback();\n    const valueToPixelY = axes.y.getValueToPixelCallback();\n    //Value bounds.    \n    const min = axes.x.getMin();\n    const max = axes.x.getMax();\n    //Context\n    const ctx = canvas.getContext();\n    //Callbacks\n    const renderCallback = getRenderCallback(options);\n    const strokeCallback = getStrokeCallback(options, canvas);\n    return channelIndex => {\n        //Aquire callback for getting X-axis data values.\n        const getDataX = getDataCallback(options, \"x\", channelIndex);\n        //Find start and end indicies.\n        const length = options.graph.dataY[channelIndex].length;\n        const bsMin = Static.binarySearch(getDataX, length, min);\n        const bsMax = Static.binarySearch(getDataX, length, max);\n        let start = bsMin.found !== undefined ? bsMin.found : bsMin.min;\n        let end = bsMax.found !== undefined ? bsMax.found : bsMax.max;\n        //Aquire callback for getting Y-axis data values.\n        const getDataY = getDataCallback(options, \"y\", channelIndex, start);\n        //Start path.    \n        ctx.beginPath();\n        //Render points/lines.\n        renderCallback(ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end);\n        //Stroke line.\n        strokeCallback(ctx, channelIndex);\n    }\n};\n\nCallbacks.getCalculateValueCallback = function (options, axes, dataY, getDataX, channelIndex, start) {\n    const useSimplify = options.renderSimplify() && (options.graph.simplify > 0.1 || options.graph.simplifyBy !== \"minMax\");\n    if (useSimplify) {\n        const valueToPixelX = axes.x.getValueToPixelCallback();\n        const getDataY = getDataCallback(options, \"y\", channelIndex, start);\n        return getCalculateSimplifyCallback(options.graph.simplifyBy)\n            .bind(null, dataY.length, getDataX, getDataY, valueToPixelX, options.graph.simplify);\n    }\n    else if (options.graph.smoothing) {\n        return calculateSmothingValue.bind(null, options.graph.smoothing, dataY);\n    }\n    return index => dataY[index];\n}\n\n\n/* *************** RENDER CALLBACKS *************** */\n\nfunction getRenderCallback(options) {\n    if (options.renderSimplify()) {\n        const simplify = options.graph.simplify;\n        switch (options.graph.simplifyBy) {\n            case \"avg\":\n                return renderAvg.bind(null, simplify);\n            case \"min\":\n                return renderMin.bind(null, simplify);\n            case \"max\":\n                return renderMax.bind(null, simplify);\n            case \"minMax\":\n                return renderMinMax.bind(null, simplify);\n        }\n    }\n    return renderFull.bind(\n        null,\n        !!options.graph.lineWidth,\n        options.renderMarkers(),\n        options.graph.markerRadius\n    );\n}\n\nfunction renderAvg(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    let oldX = valueToPixelX(getDataX(start));\n    let sum = getDataY(start);\n    let count = 1;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(start);\n            ++count;\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(sum / count));\n            oldX = newX;\n            sum = getDataY(start);\n            count = 1;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(sum / count));\n}\n\nfunction renderMin(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const min = Math.min;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            oldX = newX;\n            minVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n}\n\nfunction renderMax(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let maxVal = getDataY(start);\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(start));\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(maxVal));\n            oldX = newX;\n            maxVal = getDataY(start);\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(maxVal));\n}\n\nfunction renderMinMax(simplify, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    let oldX = valueToPixelX(getDataX(start));\n    let minVal = getDataY(start);\n    let maxVal = minVal;\n    //We have already counted first value;\n    ++start;\n    for (; start <= end; ++start) {\n        const newX = valueToPixelX(getDataX(start));\n        if (abs(newX - oldX) < simplify) {\n            const valueY = getDataY(start);\n            minVal = min(minVal, valueY);\n            maxVal = max(maxVal, valueY);\n        }\n        else {\n            ctx.lineTo(oldX, valueToPixelY(minVal));\n            //Only add the second point if it differs from the first.\n            if (minVal !== maxVal) {\n                ctx.lineTo(oldX, valueToPixelY(maxVal));\n            }\n            oldX = newX;\n            minVal = getDataY(start);\n            maxVal = minVal;\n        }\n    }\n    //Needed to add the last step.\n    ctx.lineTo(oldX, valueToPixelY(minVal));\n    if (minVal !== maxVal) {\n        ctx.lineTo(oldX, valueToPixelY(maxVal));\n    }\n}\n\nfunction renderFull(renderLine, renderMarkers, markerRadius, ctx, valueToPixelX, valueToPixelY, getDataX, getDataY, start, end) {\n    const circleAngle = 2 * Math.PI;\n    //Render line and markers\n    if (renderLine && renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.lineTo(x, y);\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n            ctx.moveTo(x, y);\n        }\n    }\n    //Render only line\n    else if (renderLine) {\n        for (; start <= end; ++start) {\n            ctx.lineTo(\n                valueToPixelX(getDataX(start)),\n                valueToPixelY(getDataY(start))\n            );\n        }\n    }\n    //Render only markers\n    else if (renderMarkers) {\n        for (; start <= end; ++start) {\n            const x = valueToPixelX(getDataX(start));\n            const y = valueToPixelY(getDataY(start));\n            ctx.moveTo(x + markerRadius, y);\n            ctx.arc(x, y, markerRadius, 0, circleAngle);\n        }\n    }\n}\n\n\n/* *************** STROKES CALLBACK *************** */\n\nfunction getStrokeCallback(options, canvas) {\n    //Fill graph\n    if (options.graph.fill) {\n        return renderFill.bind(null, options, canvas);\n    }\n    //Stroke line.\n    return renderStroke.bind(null, options);\n}\n\nfunction renderFill(options, canvas, ctx, channelIndex) {\n    //Render line\n    if (options.graph.lineWidth) {\n        if (options.axes.x.inverted) {\n            ctx.lineTo(0, canvas.getContentHeight());\n            ctx.lineTo(canvas.getContentWidth(), canvas.getContentHeight());\n        }\n        else {\n            ctx.lineTo(canvas.getContentWidth() * canvas.getRatio(), canvas.getContentHeight() * canvas.getRatio());\n            ctx.lineTo(0, canvas.getContentHeight() * canvas.getRatio());\n        }\n        ctx.closePath();\n    }\n    ctx.fillStyle = options.getColor(channelIndex + 1);\n    ctx.fill();\n}\n\nfunction renderStroke(options, ctx, channelIndex) {\n    //Set dashed options\n    if (options.graph.dashed[channelIndex]) {\n        let pattern = options.graph.dashed[channelIndex];\n        if (pattern === true) {\n            pattern = [5, 8];\n        }\n        ctx.setLineDash(pattern);\n    }\n    else {\n        ctx.setLineDash([]);\n    }\n\n    ctx.strokeStyle = options.getColor(channelIndex + 1);\n    ctx.stroke();\n}\n\n\n/* *************** CALCULATE VALUES CALLBACKS *************** */\n\nfunction getCalculateSimplifyCallback(simplifyBy) {\n    switch (simplifyBy) {\n        case \"avg\":\n            return calculateAvgValue;\n        case \"min\":\n            return calculateMinValue;\n        case \"max\":\n            return calculateMaxValue;\n        case \"minMax\":\n            return calculateMinMaxValue;\n    }\n}\n\nfunction calculateAvgValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const oldX = valueToPixelX(getDataX(index));\n    let sum = getDataY(index);\n    let count = 1;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            sum += getDataY(i);\n            ++count;\n        }\n        else {\n            break;\n        }\n    }\n    return sum / count;\n}\n\nfunction calculateMinValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            minVal = min(minVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return minVal;\n}\n\nfunction calculateMaxValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let maxVal = getDataY(index);\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            maxVal = max(maxVal, getDataY(i));\n        }\n        else {\n            break;\n        }\n    }\n    return maxVal;\n}\n\nfunction calculateMinMaxValue(length, getDataX, getDataY, valueToPixelX, simplify, index) {\n    const abs = Math.abs;\n    const min = Math.min;\n    const max = Math.max;\n    const oldX = valueToPixelX(getDataX(index));\n    let minVal = getDataY(index);\n    let maxVal = minVal;\n    for (let i = index + 1; i < length; ++i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    for (let i = index - 1; i > -1; --i) {\n        const newX = valueToPixelX(getDataX(i));\n        if (abs(newX - oldX) < simplify) {\n            const value = getDataY(i);\n            minVal = min(minVal, value);\n            maxVal = max(maxVal, value);\n        }\n        else {\n            break;\n        }\n    }\n    return abs(minVal) > maxVal ? minVal : maxVal;\n}\n\nfunction calculateSmothingValue(smoothing, dataY, index) {\n    const window = getSmoothingWindow(index, smoothing, dataY.length);\n    let sum = 0;\n    while (window.low <= window.high) {\n        sum += dataY[window.low++];\n    }\n    return sum / window.length;\n}\n\n/* *************** GET DATA CALLBACK *************** */\n\nfunction getDataCallback(options, axis, dataIndex, start) {\n    let data;\n    //X-axis.\n    if (axis.toLowerCase() === \"x\") {\n        //Has no dataX. Return index + 1.\n        if (options.graph.dataX.length === 0) {\n            return index => index + 1;\n        }\n        //Have one dataX for all dataY. \n        if (options.graph.dataX.length === 1) {\n            data = options.graph.dataX[0];\n        }\n        //Have one dataX for each dataY. \n        else {\n            data = options.graph.dataX[dataIndex];\n        }\n    }\n    //Y-axis.\n    else if (axis.toLowerCase() === \"y\") {\n        data = options.graph.dataY[dataIndex];\n        //Use smoothing.\n        if (options.graph.smoothing) {\n            return getDataCallbackSmoothing(options, start, data);\n        }\n    }\n    else {\n        console.error(\"owp.graph ERROR: Unknown axis: \" + axis);\n    }\n    //Default\n    return function (index) {\n        return data[index];\n    };\n}\nCallbacks.getDataCallback = getDataCallback;\n\nfunction getDataCallbackSmoothing(options, start, data) {\n    const centralIndex = Math.max(0, start - 1);\n    const window = getSmoothingWindow(centralIndex, options.graph.smoothing, data.length);\n    let low = window.low;\n    let high = window.high;\n    let sum = 0;\n    for (let i = low; i <= high; ++i) {\n        sum += data[i];\n    }\n    const threshold = 2 * options.graph.smoothing;\n    return index => {\n        //Decrease window size.\n        if (high === data.length - 1) {\n            low = index + index - high;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Increase window size.\n        else if (high < threshold) {\n            high = index + index - low;\n            sum = 0;\n            for (let i = low; i <= high; ++i) {\n                sum += data[i];\n            }\n        }\n        //Move window.\n        else {\n            sum -= data[low];\n            ++low;\n            ++high;\n            sum += data[high];\n        }\n        //Calculate average value.\n        return sum / (high - low + 1);\n    };\n}\n\n\n/* *************** MISC *************** */\n\nfunction getSmoothingWindow(index, smoothing, length) {\n    //Distance to list start.\n    const diffToMin = Math.max(0, index);\n    //Distance to list end.\n    const diffToMax = length - 1 - index;\n    //Shortest distance of min, max and smoothing window.\n    const diff = Math.min(diffToMin, diffToMax, smoothing);\n    return {\n        low: index - diff,\n        high: index + diff,\n        length: 2 * diff + 1\n    };\n}\n\nexport default Callbacks;","import Static from \"./Static\";\nimport Input from \"./Input\";\nimport Callbacks from \"./Callbacks\";\n\n/** \n * Interaction is a class that handles the user interaction for the Graph class.\n */\n\n/**\n * Create a new Interaction.\n * @public\n * @constructor\n * @param {Graph} graph - Graph instance this interaction belongs to.\n * @returns {Interaction}\n */\nfunction Interaction(graph) {\n    this._graph = graph;\n}\n\n/**\n * Update(add/remove) interaction events.\n * @public\n */\nInteraction.prototype.updateOptions = function () {\n    //Resizing.\n    if (this._graph._options.interaction.resize && !this._resizeCallback) {\n        this._resizeCallback = this._addResizeEvent();\n    }\n    else if (!this._graph._options.interaction.resize && this._resizeCallback) {\n        window.removeEventListener(\"resize\", this._resizeCallback);\n        this._resizeCallback = undefined;\n    }\n\n    //Mouse tracking.\n    if (this._graph._options.interaction.trackMouse && !this._mouseTrackingCallbacks) {\n        this._mouseTrackingCallbacks = this._addMouseTrackingEvents();\n    }\n    else if (!this._graph._options.interaction.trackMouse && this._mouseTrackingCallbacks) {\n        const canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousemove\", this._mouseTrackingCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseout\", this._mouseTrackingCallbacks.mouseout);\n        this._mouseTrackingCallbacks = undefined;\n    }\n\n    //Zooming.\n    if (this._graph._options.interaction.zoom && !this._zoomCallbacks) {\n        this._zoomCallbacks = this._addZoomEvents();\n    }\n    else if (!this._graph._options.interaction.zoom && this._zoomCallbacks) {\n        let canvas = this._graph._canvas.interaction.getCanvas();\n        canvas.removeEventListener(\"mousedown\", this._zoomCallbacks.mousedown);\n        canvas.removeEventListener(\"mousemove\", this._zoomCallbacks.mousemove);\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"dblclick\", this._zoomCallbacks.dblclick);\n        canvas = this._graph._canvas.background.getCanvas();\n        canvas.removeEventListener(\"mouseup\", this._zoomCallbacks.mouseup);\n        canvas.removeEventListener(\"mouseout\", this._zoomCallbacks.mouseout);\n        this._zoomCallbacks = undefined;\n    }\n\n    //Smooth option.\n    if (this._graph._options.interaction.smoothing && !this._smoothingCallback) {\n        this._smoothingCallback = this._addSmoothingEvent();\n    }\n    else if (!this._graph._options.interaction.smoothing && this._smoothingCallback) {\n        this._smoothingInput.removeEventListener(\"change\", this._smoothingCallback);\n        this._smoothingCallback = undefined;\n        this._smoothingInput.remove();\n        this._smoothingInput = undefined;\n    }\n\n    //Every time options are updated. Update smoothing value if available.\n    if (this._smoothingInput) {\n        this._smoothingInput.value = this._graph._options.graph.smoothing;\n    }\n\n    this._createInteractionData();\n};\n\n/**\n * Clear interaction data.\n * @public\n */\nInteraction.prototype.clear = function () {\n    this._graph._canvas.interaction.clear();\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"none\";\n    }\n};\n\n/**\n * Render interaction data.\n * @public\n */\nInteraction.prototype.render = function () {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Inform the activity class that the graph has changed size and/or position.\n * @param {int} x - X-coordinate in pixels.\n * @param {int} y - Y-coordinate in pixels.\n * @param {int} width - Width in pixels.\n * @param {int} height - Height in pixels.\n */\nInteraction.prototype.graphChangedSize = function (x, y, width, height) {\n    if (this._smoothingInput) {\n        this._smoothingInput.style.top = (y + height - 21) + \"px\";\n        this._smoothingInput.style.left = x + \"px\";\n        this._smoothingInput.style.display = \"block\";\n    }\n};\n\n/**\n * Add a resize event.\n * @private\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addResizeEvent = function () {\n    const graph = this._graph;\n    const self = this;\n    let timeOutResize;\n    //Re-plots the graph on resize end.\n    function resizeEnd() {\n        graph._canvas.background.resize();\n        graph._calculateGraphSize();\n        graph._plot();\n        timeOutResize = undefined;\n        self._resizing = false;\n    }\n    //Clear graph, hightlight and spinner features on resize start.\n    function resizeStart() {\n        self._resizing = true;\n        graph._canvas.graph.clear();\n        graph._canvas.highlight.clear();\n        graph._canvas.interaction.clear();\n        graph._renderLegend();\n    }\n    let lastWidth = this._graph._canvas.background.getWidth();\n    let lastHeight = this._graph._canvas.background.getHeight();\n    let lastPixelRatio = window.devicePixelRatio;\n    function callback() {\n        //Make sure that the size actually have changed.\n        if (lastWidth !== graph._canvas.background.getWidth() || lastHeight !== graph._canvas.background.getHeight() || lastPixelRatio !== window.devicePixelRatio) {\n            lastWidth = graph._canvas.background.getWidth();\n            lastHeight = graph._canvas.background.getHeight();\n            lastPixelRatio = window.devicePixelRatio;\n            //First time the function is called for this resize event.\n            if (!timeOutResize) {\n                resizeStart();\n            }\n            //Reset timer each time so that the resizeEnd function doesnt run until the user has stopped resizing.\n            clearTimeout(timeOutResize);\n            timeOutResize = setTimeout(resizeEnd, 500);\n        }\n    }\n\n    window.addEventListener(\"resize\", callback);\n    return callback;\n};\n\nInteraction.prototype._addMouseTrackingEvents = function () {\n    const self = this;\n    const graph = this._graph;\n    function mousemove(e) {\n        if (self.mouseDown || self._resizing || !graph._axes.x.hasBounds() || e.offsetX < 0) {\n            return;\n        }\n        const valueX = graph._axes.x.pixelToValue(e.offsetX);\n        const values = [valueX];\n        graph._canvas.interaction.clear();\n        for (let i = 0; i < graph._options.graph.dataY.length; ++i) {\n            const dataY = graph._options.graph.dataY[i];\n            //Cant track unexisting values.\n            if (!dataY.length) {\n                continue;\n            }\n            const getDataX = Callbacks.getDataCallback(graph._options, \"x\", i);\n            const res = Static.binarySearch(getDataX, dataY.length, valueX);\n            const calculateValueCallback = Callbacks.getCalculateValueCallback(\n                graph._options, graph._axes, dataY, getDataX, i, res.min\n            );\n            let valueY, pixelY;\n            //Found exaxt X-value.\n            if (res.found !== undefined) {\n                valueY = calculateValueCallback(res.found);\n                pixelY = graph._axes.y.valueToPixel(valueY);\n            }\n            //Binary search returned min and max at same value without a found.\n            //There is no matching value. Just abort.\n            else if (res.min === res.max) {\n                continue;\n            }\n            //Calculate Y-value from min max coordinates.\n            else {\n                const x1 = graph._axes.x.valueToPixel(getDataX(res.min));\n                const x2 = graph._axes.x.valueToPixel(getDataX(res.max));\n                const y1 = graph._axes.y.valueToPixel(calculateValueCallback(res.min));\n                const y2 = graph._axes.y.valueToPixel(calculateValueCallback(res.max));\n                const k = (y2 - y1) / (x2 - x1);\n                const x = e.offsetX - x1;\n                const m = y1;\n                pixelY = k * x + m;\n                valueY = graph._axes.y.pixelToValue(pixelY);\n            }\n            //Store values to render on legend.\n            values[i + 1] = valueY;\n            //If value is missing don't plot it.\n            if (isFinite(pixelY)) {\n                self._interactionData[i].moveTo(e.offsetX, pixelY);\n            }\n        }\n        graph._renderLegend(values);\n    }\n    function mouseout() {\n        if (!self.mouseDown) {\n            graph._canvas.interaction.clear();\n            graph._renderLegend();\n        }\n    }\n    const canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseout\", mouseout);\n    return { mousemove, mouseout };\n};\n\n/**\n * Add zoom events.\n * @private\n * @returns {object} - object containing callbacks.\n */\nInteraction.prototype._addZoomEvents = function () {\n    const graph = this._graph;\n    const self = this;\n    this.mouseDown = false;\n    const threshold = 0.1 * Math.min(graph._canvas.interaction.getContentWidth(), graph._canvas.interaction.getContentHeight());\n    let startX, startY;\n    //true = horizontal. false = vertical.\n    let lastHorizontal;\n    const color = \"rgba(130, 130, 130, 0.2)\";\n    let lastX, lastY;\n\n    function mousedown(e) {\n        if (e.button === 0 && graph._axes.x.hasBounds() && graph._axes.y.hasBounds()) {\n            lastX = startX = e.offsetX;\n            lastY = startY = e.offsetY;\n            self.mouseDown = true;\n            lastHorizontal = undefined;\n            graph._renderLegend();\n        }\n    }\n    function mousemove(e) {\n        if (self.mouseDown && (e.offsetX !== lastX || e.offsetX !== lastY)) {\n            lastX = e.offsetX;\n            lastY = e.offsetY;\n            const diffX = Math.abs(startX - e.offsetX);\n            const diffY = Math.abs(startY - e.offsetY);\n            const newHorizontal = diffX > diffY;\n            if (newHorizontal === undefined || (newHorizontal !== lastHorizontal && (newHorizontal ? diffX : diffY) > threshold)) {\n                lastHorizontal = newHorizontal;\n            }\n            graph._canvas.interaction.clear();\n            //Mark horizontally.\n            if (lastHorizontal) {\n                graph._canvas.interaction.fillRectangle2(startX, 0, e.offsetX, graph._canvas.interaction.getContentHeight(), color);\n            }\n            //Mark vertically.\n            else {\n                graph._canvas.interaction.fillRectangle2(0, startY, graph._canvas.interaction.getContentWidth(), e.offsetY, color);\n            }\n        }\n    }\n    function mouseup(e) {\n        if (e.button === 0 && self.mouseDown) {\n            self.mouseDown = false;\n            if (startX !== e.offsetX || startY !== e.offsetY) {\n                graph._canvas.interaction.clear();\n                //X-axis.\n                if (lastHorizontal) {\n                    const x = clamp(0, e.offsetX, graph._canvas.interaction.getContentWidth());\n                    if (startX === x) {\n                        return;\n                    }\n                    const min = graph._axes.x.pixelToValue(Math.min(startX, x));\n                    const max = graph._axes.x.pixelToValue(Math.max(startX, x));\n                    graph._axes.x.zoom(min, max);\n                }\n                //Y-axis.\n                else {\n                    const y = clamp(0, e.offsetY, graph._canvas.interaction.getContentHeight());\n                    if (startY === y) {\n                        return;\n                    }\n                    const min = graph._axes.y.pixelToValue(Math.max(startY, y));\n                    const max = graph._axes.y.pixelToValue(Math.min(startY, y));\n                    graph._axes.y.zoom(min, max);\n                }\n                graph._plot();\n            }\n        }\n    }\n    function dblclick(e) {\n        //Prevents double click from selecting the div.\n        preventDefault(e);\n        if (graph._axes.x.hasZoom() || graph._axes.y.hasZoom()) {\n            graph._axes.x.clearZoom();\n            graph._axes.y.clearZoom();\n            graph._plot();\n        }\n    }\n    function mouseout(e) {\n        //Make sure we are in a drag event and that we are moving outside of the graph. Not inwards.\n        if (!self.mouseDown || e.toElement === graph._canvas.graph.getCanvas() || e.toElement === graph._canvas.interaction.getCanvas()) {\n            return;\n        }\n        graph._canvas.interaction.clear();\n        self.mouseDown = false;\n    }\n\n    let canvas = graph._canvas.interaction.getCanvas();\n    canvas.addEventListener(\"mousedown\", mousedown);\n    canvas.addEventListener(\"mousemove\", mousemove);\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"dblclick\", dblclick);\n\n    canvas = this._graph._canvas.background.getCanvas();\n    canvas.addEventListener(\"mouseup\", mouseup);\n    canvas.addEventListener(\"mouseleave\", mouseout);\n\n    return { mousedown, mousemove, mouseup, dblclick, mouseout };\n};\n\n/**\n * Add smoothing input event.\n * @returns {object} Object containing callbacks.\n */\nInteraction.prototype._addSmoothingEvent = function () {\n    this._smoothingInput = Input({\n        type: \"number\",\n        tabIndex: -1,\n        maxLength: 6,\n        value: 0,\n        min: 0\n    });\n    this._smoothingInput.style[\"z-index\"] = 5;\n    this._smoothingInput.style.position = \"absolute\";\n    this._smoothingInput.style.width = \"50px\";\n    this._smoothingInput.style.height = \"21px\";\n    this._smoothingInput.style[\"background-color\"] = \"white\";\n    this._smoothingInput.style[\"border-radius\"] = 0;\n    this._smoothingInput.style.border = \"1px solid #ccc\";\n    this._smoothingInput.style.color = \"#555\";\n    this._smoothingInput.style.padding = \"0 0 0 5px\";\n    this._smoothingInput.style.display = \"none\";\n    this._smoothingInput.className = ((this._smoothingInput.className || \"\") + \" a-graph-smoothing-input\").trim();\n    this._graph._container.append(this._smoothingInput);\n    const self = this;\n    function callbackDone() {\n        let value = parseInt(self._smoothingInput.value);\n        //Calculate min length for all data sets. Smoothing can't be greater than availalbe data points.\n        let length = 4294967296;\n        for (let i = 0; i < self._graph._options.graph.dataY.length; ++i) {\n            length = Math.min(length, self._graph._options.graph.dataY[i].length);\n        }\n        if (2 * value + 1 > length) {\n            value = Math.floor((length - 1) / 2);\n        }\n        self._smoothingInput.value = value;\n        self._graph._options.graph.smoothing = value;\n        self._graph._renderGraph();\n    }\n    this._smoothingInput.addEventListener(\"done\", callbackDone);\n    return callbackDone;\n};\n\n/**\n * Create interaction data.\n * @private\n */\nInteraction.prototype._createInteractionData = function () {\n    const radius = 3;\n    const ctx = document.createElement(\"canvas\").getContext(\"2d\");\n    this._interactionData = [];\n    for (let i = 0; i < this._graph._options.graph.dataY.length; ++i) {\n        //Clear area\n        ctx.clearRect(0, 0, 2 * radius, 2 * radius);\n\n        //Draw solid circle\n        ctx.beginPath();\n        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n        ctx.fillStyle = this._graph._options.graph.colors[i + 1];\n        ctx.fill();\n\n        //If fill; draw black border to increase visibility.\n        if (this._graph._options.graph.fill) {\n            ctx.beginPath();\n            ctx.arc(radius, radius, radius, 0, 2 * Math.PI);\n            ctx.strokeStyle = \"#000000\";\n            ctx.stroke();\n        }\n\n        //Get image data from tmp context.\n        const imageData = ctx.getImageData(0, 0, 2 * radius, 2 * radius);\n        //Add member data.\n        const canvas = this._graph._canvas.interaction;\n        imageData.moveTo = function (x, y) {\n            canvas.putImageData(this, x, y, -radius, -radius);\n        };\n        this._interactionData[i] = imageData;\n    }\n};\n\nexport default Interaction;\n\n/**\n * Clamp the given value to the given range.\n * @param {type} min - Min value.\n * @param {type} number - Value to clamp.\n * @param {type} max - Max value.\n * @returns {Number} - Clamped value.\n */\nfunction clamp(min, number, max) {\n    if (number < min) {\n        return min;\n    }\n    else if (number > max) {\n        return max;\n    }\n    else {\n        return number;\n    }\n}\n\nfunction preventDefault(e) {\n    //Firefox, Chrome, etc.\n    if (e.preventDefault) {\n        e.preventDefault();\n    }\n    //IE\n    else {\n        e.returnValue = false;\n        e.cancelBubble = true;\n    }\n}","/*\n* @author Andreas Arvidsson\n * https://github.com/AndreasArvidsson/OpenWebProject-graph\n */\n\nif (!window.HTMLCanvasElement || !window.CanvasRenderingContext2D) {\n    throw Error(\"owp.graph ERROR: Your browser does not support the HTML5 Canvas.\");\n}\n\nimport Spinner from \"./lib/spin.min\";\nimport Canvas from \"./Canvas\";\nimport Axis from \"./Axis\";\nimport Interaction from \"./Interaction\";\nimport Static from \"./Static\";\nimport Options from \"./Options\";\nimport Is from \"./Is\";\nimport Callbacks from \"./Callbacks\";\n\n/** \n * The Graph class is a 2D graph plotter.\n * Built with performance and customizability in mind. Supports multiple data\n * sets and all data sets are available as typed arrays.\n */\n\n/**\n * Create new graph.\n * @public\n * @constructor\n * @param {dom|string} container - Element.  DOM or ID string. Graph will fill this element.\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n * @returns {Graph}\n */\nfunction Graph(container, options) {\n    if (this instanceof Graph) {\n        this._init(container, options);\n    }\n    //The new keyword was omitted.\n    else {\n        return new Graph(container, options);\n    }\n}\n\n/**\n * Get dummy dataY array.\n * @public\n * @returns {array}\n */\nGraph.createDummyData = Static.createDummyData;\n\n/**\n * Get options instance.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.prototype.getOptions = function () {\n    return this._options;\n};\n\n/**\n * Get default options.\n * @public\n * @returns {OPTIONS_OBJECT}\n */\nGraph.getDefaultOptions = Options.getDefault;\n\n/**\n * Sets all options to their default values.\n * @public\n */\nGraph.prototype.setDefaultOptions = function () {\n    this._options.setDefault();\n};\n\n/**\n * Set new options.\n * @public\n * @param {OPTIONS_OBJECT} options - Options to customize the graph.\n */\nGraph.prototype.setOptions = function (options) {\n    this._options.set(options);\n    this._hasCalculatedGraphSize = false;\n    if (this._options.isOk()) {\n        this._axes.x.zoom(this._options.zoom.xMin, this._options.zoom.xMax);\n        this._axes.y.zoom(this._options.zoom.yMin, this._options.zoom.yMax);\n        this._axes.x.calculateBounds();\n        this._axes.y.calculateBounds();\n        this._interaction.updateOptions();\n        this._canvas.graph.setBorder(this._options.border.style, this._options.border.color, this._options.border.width);\n        this._initLegend();\n        this._plot();\n    }\n    else {\n        console.error(\"owp.graph ERROR: Can't plot: Invalid options.\");\n    }\n};\n\n/* ********** PRIVATE ********** */\n\n/**\n * Implementation of the constructor.\n * @private\n */\nGraph.prototype._init = function (container, options) {\n    if (typeof el === \"string\") {\n        container = document.getElementById(container);\n    }\n    if (!parent) {\n        console.error(\"owp.graph ERROR: Element dom is null\");\n        return;\n    }\n\n    container.style.position = \"relative\";\n\n    this._container = container;\n    this._options = new Options();\n\n    this._canvas = {\n        background: new Canvas(container, \"background\"),\n        graph: new Canvas(container, \"graph\", true),\n        highlight: new Canvas(container, \"highlight\"),\n        interaction: new Canvas(container, \"interaction\")\n    };\n\n    this._canvas.background.setZIndex(0);\n    this._canvas.graph.setZIndex(1);\n    this._canvas.highlight.setZIndex(2);\n    //Spinner uses zIndex 3.\n    this._canvas.interaction.setZIndex(4);\n    //Smoothing input used zIndex 5.\n\n    this._axes = {\n        x: new Axis(this._options, this._canvas.graph, \"x\"),\n        y: new Axis(this._options, this._canvas.graph, \"y\")\n    };\n\n    this._interaction = new Interaction(this);\n\n    if (options) {\n        this.setOptions(options);\n    }\n    else {\n        console.warn(\"owp.graph WARNING: No options set. Uses default.\");\n        this.setOptions({});\n    }\n};\n\n/**\n * Create legend canvas and attach to parent dom.\n * @private\n */\nGraph.prototype._initLegend = function () {\n    const location = this._options.legend.location;\n    if (location && this._options.interaction.trackMouse) {\n        //DIV id.\n        if (location.toLowerCase() !== \"top\" && location.toLowerCase() !== \"right\") {\n            const legendDiv = document.getElementById(location);\n            if (legendDiv) {\n                legendDiv.style.position = \"relative\";\n                //Reuse existing canvas.\n                if (this._canvas.legend) {\n                    this._canvas.legend.setParent(legendDiv);\n                }\n                //Create new canvas.\n                else {\n                    this._canvas.legend = new Canvas(legendDiv);\n                }\n            }\n            else {\n                console.warn(\"owp.graph WARNING: Legend location: \\\"\" + location + \"\\\" not found.\");\n            }\n        }\n        else {\n            //Set same parent for legend as rest of graph.\n            if (this._canvas.legend) {\n                this._canvas.legend.setParent(this._container);\n            }\n            else {\n                this._canvas.legend = new Canvas(this._container);\n                this._canvas.legend.disableMouseInteraction();\n            }\n            if (location.toLowerCase() === \"top\") {\n                this._canvas.legend.setSize(\"100%\", this._options.legend.size);\n            }\n            else if (location.toLowerCase() === \"right\") {\n                this._canvas.legend.setPosition(0, 0, true);\n                this._canvas.legend.setSize(200, \"100%\");\n            }\n        }\n    }\n    //Remove old legend.\n    else if (this._canvas.legend) {\n        this._canvas.legend.setParent();\n        this._canvas.legend = undefined;\n    }\n};\n\n/**\n * Renders the legend on the background canvas.\n * @private\n */\nGraph.prototype._renderLegend = function (values) {\n    if (!this._canvas.legend || !this._options.graph.dataY.length) {\n        return;\n    }\n\n    const settings = this._options.legend;\n    const canvas = this._canvas.legend;\n    canvas.clear();\n    canvas.set(\"font\", this._options.getLegendFont());\n    canvas.set(\"textBaseline\", \"top\");\n    canvas.set(\"textAlign\", settings.align);\n\n    const isTop = settings.location.toLowerCase() === \"top\";\n    const alignLeft = settings.align.toLowerCase() === \"left\";\n    //newLine is disabled for top location.\n    const newLine = settings.newLine && !isTop || settings.location.toLowerCase() === \"right\";\n    let x = alignLeft ? this._options.legend.offsetX : canvas.getWidth() - this._options.legend.offsetX;\n    //OffsetY is disabled for top location.\n    let y = isTop ? 0 : this._options.legend.offsetY;\n\n    function printValue(color, name, value) {\n        const str = name + \": \" + (value !== undefined ? value : \"\\u2014\");\n        canvas.text(str, x, y, null, color);\n        if (newLine) {\n            y += settings.size;\n        }\n        else {\n            x += (canvas.getTextWidth(str) + 10) * (alignLeft ? 1 : -1);\n        }\n    }\n\n    const printX = () => {\n        printValue(\n            this._options.graph.colors[0],\n            this._options.getName(0),\n            values ? this._axes.x.formatLegendValue(values[0]) : undefined\n        );\n    }\n\n    const printY = (i) => {\n        printValue(\n            this._options.graph.colors[i],\n            this._options.getName(i),\n            values ? this._axes.y.formatLegendValue(values[i]) : undefined\n        );\n    }\n\n    if (alignLeft || newLine) {\n        printX();\n        for (let i = 1; i <= this._options.graph.dataY.length; ++i) {\n            printY(i);\n        }\n    }\n    else {\n        for (let i = this._options.graph.dataY.length; i >= 1; --i) {\n            printY(i);\n        }\n        printX();\n    }\n};\n\n/**\n * Plots/draws the graph.\n * @private\n */\nGraph.prototype._plot = function () {\n    if (this._options.debug) {\n        console.time(\"owp.graph DEBUG: Plot time\");\n    }\n\n    //If graph size has not yet been calculated. Do it.\n    if (!this._hasCalculatedGraphSize) {\n        this._calculateGraphSize();\n    }\n\n    //Clear plot.\n    this._canvas.background.clear();\n    this._canvas.graph.clear();\n    this._canvas.highlight.clear();\n    this._interaction.clear();\n\n    //Render non data related features.\n    this._renderTitle();\n    this._renderAxesLabels();\n    this._renderSpin();\n\n    //Has bounds. Render bounds related features.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._renderXAxis();\n        this._renderYAxis();\n        this._renderHighlight();\n\n        //Has graph data. Render graph data.\n        if (this._options.graph.dataY.length) {\n            this._renderLegend();\n            this._renderGraph();\n            this._interaction.render();\n        }\n        else if (this._options.debug) {\n            console.debug(\"owp.graph DEBUG: No data set available. Plotting available features.\");\n        }\n    }\n    //Has neither bounds or data.\n    else if (this._options.debug) {\n        console.debug(\"owp.graph DEBUG: No bounds or data set available. Plotting available features.\");\n    }\n\n    if (this._options.debug) {\n        console.timeEnd(\"owp.graph DEBUG: Plot time\");\n    }\n};\n\n/**\n * Render the spinner\n * @private\n */\nGraph.prototype._renderSpin = function () {\n    //Can't update options so have to remove old spinner always.\n    if (this._spinner) {\n        this._spinner.stop();\n        this._spinner = null;\n    }\n    //Show spinner\n    if (this._options.spinner.show) {\n        //Spinner div does not exist. Create it.\n        if (!this._spinnerDiv) {\n            this._spinnerDiv = document.createElement(\"div\");\n            this._spinnerDiv.style.position = \"absolute\";\n            this._spinnerDiv.style[\"z-index\"] = 3;\n            this._container.append(this._spinnerDiv);\n            this._updateSpinnerSize();\n        }\n        this._spinner = new Spinner(this._options.spinner);\n        this._spinner.spin(this._spinnerDiv);\n    }\n    //Hide spinner. Remove old div.\n    else if (this._spinnerDiv) {\n        this._spinnerDiv.remove();\n        this._spinnerDiv = null;\n    }\n}\n\n/**\n * Updates the position and size of the spinner div based on the graph canvas.\n * @private\n */\nGraph.prototype._updateSpinnerSize = function () {\n    if (this._spinnerDiv) {\n        this._spinnerDiv.style.left = this._canvas.graph.getContentX() + \"px\";\n        this._spinnerDiv.style.top = this._canvas.graph.getContentY() + \"px\";\n        this._spinnerDiv.style.width = this._canvas.graph.getContentWidth() + \"px\";\n        this._spinnerDiv.style.height = this._canvas.graph.getContentHeight() + \"px\";\n    }\n};\n\n/**\n * Calculate graph canvas position and size.\n * @private\n */\nGraph.prototype._calculateGraphSize = function () {\n    let x = this._getOffset([\"left\"]);\n    let y = this._getOffset([\"top\"]);\n    let width = this._canvas.background.getWidth() - this._getOffset([\"left\", \"right\"]);\n    let height = this._canvas.background.getHeight() - this._getOffset([\"top\", \"bottom\"]);\n\n    //Set graph canvas.\n    this._canvas.graph.setPosition(x, y);\n    this._canvas.graph.setSize(width, height);\n\n    //Convert to content space.\n    x = this._canvas.graph.getContentX();\n    y = this._canvas.graph.getContentY();\n    width = this._canvas.graph.getContentWidth();\n    height = this._canvas.graph.getContentHeight();\n\n    //Set highlight canvas.\n    this._canvas.highlight.setPosition(x, y);\n    this._canvas.highlight.setSize(width, height);\n    //Set interaction canvas.\n    this._canvas.interaction.setPosition(x, y);\n    this._canvas.interaction.setSize(width, height);\n    //Set legend canvas if available.\n    if (this._canvas.legend) {\n        if (this._options.legend.location.toLowerCase() === \"top\") {\n            this._canvas.legend.setPosition(x, y - this._canvas.legend.getHeight() - this._options.legend.offsetY);\n            this._canvas.legend.setSize(width, this._options.legend.size);\n        }\n        else if (this._options.legend.location.toLowerCase() === \"right\") {\n            this._canvas.legend.setPosition(0, y, true);\n            this._canvas.legend.setSize(200, height);\n        }\n    }\n\n    //Update interaction instance.\n    this._interaction.graphChangedSize(x, y, width, height);\n\n    //Updates the spinner div size.\n    this._updateSpinnerSize();\n\n    //Calculate new ticks for the new size.\n    if (this._axes.x.hasBounds() && this._axes.y.hasBounds()) {\n        this._axes.x.calculateTicks();\n        this._axes.y.calculateTicks();\n    }\n    this._hasCalculatedGraphSize = true;\n};\n\n/**\n * Renders the x-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderXAxis = function () {\n    if (!this._options.axes.x.show) {\n        return;\n    }\n    const ticks = this._axes.x.getTicks();\n    let oldX, oldWidth;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getContentX() + ticks[i].coordinate;\n        let y = this._canvas.graph.getY() + this._canvas.graph.getHeight();\n        //Draw tick markers.\n        if (ticks.markers) {\n            y += ticks.markers.offset;\n            this._canvas.background.line(x, y, x, y + ticks.markers.length, ticks.markers.width, ticks.markers.color);\n            y += ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && x > this._canvas.graph.getContentX() * 1.01 && x < (this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth()) * 0.99) {\n            this._canvas.background.line(x, this._canvas.graph.getContentY(), x, this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight(), ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldX || Math.abs(x - oldX) > oldWidth + ticks.labels.width[i] / 2)) {\n            y += ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"center\", \"hanging\");\n            oldX = x;\n            oldWidth = ticks.labels.width[i];\n        }\n    }\n};\n\n/**\n * Renders the y-axis(ticks markers, tick labels, grid lines) on the background canvas.\n * @private\n */\nGraph.prototype._renderYAxis = function () {\n    if (!this._options.axes.y.show) {\n        return;\n    }\n    const ticks = this._axes.y.getTicks();\n    let oldY;\n    for (let i = 0; i < ticks.length; ++i) {\n        let x = this._canvas.graph.getX();\n        let y = this._canvas.graph.getContentY() + ticks[i].coordinate;\n        //Draw tick markers.\n        if (ticks.markers) {\n            x -= ticks.markers.offset;\n            this._canvas.background.line(x, y, x - ticks.markers.length, y, ticks.markers.width, ticks.markers.color);\n            x -= ticks.markers.length;\n        }\n        //Draw grid line.\n        if (ticks.grid && y > this._canvas.graph.getContentY() * 1.01 && y < (this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight()) * 0.99) {\n            this._canvas.background.line(this._canvas.graph.getContentX(), y, this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth(), y, ticks.grid.width, ticks.grid.color);\n        }\n        //Draw tick label.\n        if (ticks.labels && (!oldY || Math.abs(y - oldY) > ticks.labels.size)) {\n            x -= ticks.labels.offset;\n            this._canvas.background.text(ticks[i].label, x, y, ticks.labels.font, ticks.labels.color, \"right\", \"middle\");\n            oldY = y;\n        }\n    }\n};\n\n/**\n * Renders the axes(x and y) labels on the background canvas.\n * @private\n */\nGraph.prototype._renderAxesLabels = function () {\n    //Draw X label.\n    if (this._options.axes.x.show && this._options.axes.x.label.length) {\n        const x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2;\n        const y = this._canvas.background.getHeight() - this._options.axes.labels.offset;\n        this._canvas.background.text(this._axes.x.getAxisLabel(), x, y, this._axes.x.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"bottom\");\n    }\n    //Draw Y label.\n    if (this._options.axes.y.show && this._options.axes.y.label.length) {\n        const x = this._options.axes.labels.offset;\n        const y = this._canvas.graph.getContentY() + this._canvas.graph.getContentHeight() / 2;\n        this._canvas.background.text(this._axes.y.getAxisLabel(), x, y, this._axes.y.getAxisLabelFont(), this._options.axes.labels.color, \"center\", \"hanging\", -90);\n    }\n};\n\n/**\n * Renders the graph title on the background canvas.\n * @private\n */\nGraph.prototype._renderTitle = function () {\n    if (!this._options.title.label.length) {\n        return;\n    }\n    let x;\n    if (this._options.title.align.toLowerCase() === \"left\") {\n        x = this._canvas.graph.getContentX() + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"center\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() / 2 + this._options.title.offsetX;\n    }\n    else if (this._options.title.align.toLowerCase() === \"right\") {\n        x = this._canvas.graph.getContentX() + this._canvas.graph.getContentWidth() - this._options.title.offsetX;\n    }\n    const y = this._options.title.offsetY;\n    const font = (this._options.title.bold ? \"bold \" : \"\") + this._options.title.size + \"px \" + this._options.title.font;\n    this._canvas.background.text(this._options.title.label, x, y, font, this._options.title.color, this._options.title.align, \"top\");\n};\n\n/**\n * Renders the highligted area on the highligh canvas.\n * @private\n */\nGraph.prototype._renderHighlight = function () {\n    this._canvas.highlight.clear();\n    const h = this._options.highlight;\n    if (Is.isNull(h.xMin) && Is.isNull(h.xMax) && Is.isNull(h.yMin) && Is.isNull(h.yMax)) {\n        return;\n    }\n    //Convert values to pixels.\n    const x1 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMin) ? this._axes.x.getMin() : h.xMin\n    );\n    const x2 = this._axes.x.valueToPixel(\n        Is.isNull(h.xMax) ? this._axes.x.getMax() : h.xMax\n    );\n    const y1 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMin) ? this._axes.y.getMin() : h.yMin\n    );\n    const y2 = this._axes.y.valueToPixel(\n        Is.isNull(h.yMax) ? this._axes.y.getMax() : h.yMax\n    );\n    this._canvas.highlight.fillRectangle2(x1, y1, x2, y2, h.color);\n};\n\n/**\n * Renders the graph curve on the graph canvas.\n * @private\n */\nGraph.prototype._renderGraph = function () {\n    if (this._options.debug && this._options.graph.smoothing > 1) {\n        console.debug(\"owp.graph DEBUG: Smoothed rendering: \" + this._options.graph.smoothing);\n    }\n    if (this._options.debug && this._options.renderSimplify()) {\n        console.debug(`owp.graph DEBUG: Simplify rendering: ${this._options.graph.simplify} ${this._options.graph.simplifyBy}`);\n    }\n    //Clear old data so we can draw new.\n    this._canvas.graph.clear();\n    //Get canvas and set properties.\n    const ctx = this._canvas.graph.getContext();\n    ctx.lineWidth = this._options.graph.lineWidth;\n    ctx.globalCompositeOperation = this._options.graph.compositeOperation;\n    //Get render callback based on options\n    const renderCallback = Callbacks.getRenderCallback(this._options, this._canvas.graph, this._axes);\n    //Render each data set.\n    for (let i = 0; i < this._options.graph.dataY.length; ++i) {\n        renderCallback(i);\n    }\n};\n\n/**\n * Get offset for the given paramters.\n * @private\n */\nGraph.prototype._getOffset = function (array) {\n    let offset = 0;\n    for (let i = 0; i < array.length; ++i) {\n        switch (array[i]) {\n            case \"top\":\n                if (this._options.title.label.length) {\n                    offset += this._options.title.size;\n                    offset += this._options.title.offsetY;\n                    offset += this._options.title.padding;\n                }\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"top\") {\n                    offset += this._canvas.legend.getHeight() + this._options.legend.offsetY;\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"bottom\":\n                if (this._options.axes.x.show) {\n                    if (this._options.axes.x.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.x.height) {\n                        offset += this._options.axes.x.height;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            offset += this._options.axes.tickLabels.size;\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.y.show && this._options.axes.tickLabels.show) {\n                    offset += this._options.axes.tickLabels.size / 2;\n                }\n                break;\n            case \"left\":\n                if (this._options.axes.y.show) {\n                    if (this._options.axes.y.label.length) {\n                        offset += this._options.axes.labels.size;\n                        offset += this._options.axes.labels.offset;\n                        offset += this._options.axes.labels.padding;\n                    }\n                    if (this._options.axes.y.width) {\n                        offset += this._options.axes.y.width;\n                    }\n                    else {\n                        if (this._options.axes.tickLabels.show) {\n                            const tickLabelMinSize = this._axes.y.getBoundLabelWidth(\"min\", true);\n                            const tickLabelMaxSize = this._axes.y.getBoundLabelWidth(\"max\", true);\n                            offset += Math.max(tickLabelMinSize, tickLabelMaxSize);\n                            offset += this._options.axes.tickLabels.offset;\n                        }\n                        if (this._options.axes.tickMarkers.show) {\n                            offset += this._options.axes.tickMarkers.length;\n                            offset += this._options.axes.tickMarkers.offset;\n                        }\n                    }\n                }\n                else if (this._options.axes.x.show && this._options.axes.tickLabels.show) {\n                    offset += this._axes.x.getBoundLabelWidth(\"min\", true);\n                }\n                break;\n            case \"right\":\n                if (this._canvas.legend && this._options.legend.location.toLowerCase() === \"right\") {\n                    offset += this._canvas.legend.getWidth();\n                }\n                else {\n                    const defaultOffset = 20;\n                    let boundOffset = 0;\n                    if (this._options.axes.x.show && this._axes.x.hasBounds() && this._options.axes.tickLabels.show) {\n                        boundOffset = this._axes.x.getBoundLabelWidth(\"max\", true) / 2;\n                    }\n                    offset += Math.max(defaultOffset, boundOffset);\n                }\n                break;\n        }\n    }\n    return Math.round(offset);\n};\n\nexport default Graph;"],"sourceRoot":""}